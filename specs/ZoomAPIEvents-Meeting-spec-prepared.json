{
  "openapi": "3.1.0",
  "info": {
    "title": "Zoom API Events - Meeting",
    "version": "1.0.0"
  },
  "webhooks": {
    "webinar.sharing_started": {
      "post": {
        "tags": [
          "webinar"
        ],
        "operationId": "webinar.sharing_started",
        "requestBody": {
          "description": "# webinar.sharing_started\n\nThe **Webinar Sharing Started** event is triggered every time one of your app users or account users share their screen during a Webinar.\n\nZoom supports [screen sharing](https://support.zoom.us/hc/en-us/articles/201362153-Screen-Sharing-and-Annotations) by host or panelists on desktop, tablet and mobile devices running Zoom during Webinars.\n\n## Prerequisites\n\n* Pro or a higher plan with Webinar license.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Webinar Sharing Started** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `webinar.sharing_started`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "webinar.sharing_started"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the webinar."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the webinar.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The webinar ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The webinar's universally unique identifier (UUID). Each webinar instance generates a webinar UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The webinar host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The webinar's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The webinar type: \n* 5 — A webinar. \n* 6 — A recurring webinar without a fixed time. \n* 9 — A recurring webinar with a fixed time.",
                            "enum": [
                              5,
                              6,
                              9
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "pattern": "(^\\s*$|^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$)",
                            "description": "The webinar's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The webinar's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled webinar duration."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the webinar participant.",
                            "required": [
                              "user_id",
                              "sharing_details"
                            ],
                            "properties": {
                              "user_id": {
                                "type": "string",
                                "description": "The participant's webinar user ID. This value is assigned to a participant upon joining a webinar and is only valid for the duration of the webinar."
                              },
                              "user_name": {
                                "type": "string",
                                "description": "The participant's display name."
                              },
                              "id": {
                                "type": "string",
                                "description": "The participant's universally unique ID (UUID): \n* If the participant joins the webinar by logging into Zoom, this value is the id value in the [**Get a user**](/api-reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the webinar **without** logging into Zoom, this returns an empty string value."
                              },
                              "sharing_details": {
                                "type": "object",
                                "description": "Information about the webinar's screenshare.",
                                "required": [
                                  "content",
                                  "link_source",
                                  "file_link",
                                  "date_time",
                                  "source"
                                ],
                                "properties": {
                                  "content": {
                                    "type": "string",
                                    "description": "The type of shared content: \n* application — An application. For example, a web browser. \n* whiteboard — The [classic whiteboard](https://support.zoom.us/hc/en-us/articles/205677665-Sharing-a-whiteboard). \n* desktop — A user's desktop. \n* airplay — A user's [AirPlay (Apple screen mirroring)](https://support.zoom.us/hc/en-us/articles/204726885-Sharing-screen-using-Apple-screen-mirroring-AirPlay-). \n* camera — A user's camera. \n* unknown — An unrecognized application, such as a third party app.",
                                    "enum": [
                                      "application",
                                      "whiteboard",
                                      "desktop",
                                      "airplay",
                                      "camera",
                                      "unknown"
                                    ]
                                  },
                                  "link_source": {
                                    "type": "string",
                                    "description": "The Dropbox sharing method: \n* deep_link — A [deep link](https://en.wikipedia.org/wiki/Deep_linking). \n* in_meeting — A link shared via Zoom. \n* An empty string value if the link source is **not** a Dropbox link.",
                                    "enum": [
                                      "",
                                      "deep_link",
                                      "in_meeting"
                                    ]
                                  },
                                  "file_link": {
                                    "type": "string",
                                    "description": "The Dropbox file's link. This field returns an empty string value if the file link is **not** from a Dropbox source."
                                  },
                                  "date_time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The screenshare's date and time."
                                  },
                                  "source": {
                                    "type": "string",
                                    "description": "The source from which the file was shared: \n* dropbox — A Dropbox source. \n* An empty string value if the source is **not** Dropbox.",
                                    "enum": [
                                      "",
                                      "dropbox"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "webinar.sharing_started",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": "1234567890",
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Webinar",
                        "type": 9,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "participant": {
                          "user_id": "ABCDE12345",
                          "user_name": "JillChill",
                          "id": "iFxeBPYun6SAiWUzBcEkX",
                          "sharing_details": {
                            "content": "application",
                            "link_source": "in_meeting",
                            "file_link": "",
                            "date_time": "2021-07-13T21:55:52Z",
                            "source": "dropbox"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.participant_jbh_waiting": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.participant_jbh_waiting",
        "requestBody": {
          "description": "# meeting.participant_jbh_waiting\n\nThe **Participant waiting for host to join** event is triggered every time an attendee is waiting for the host to join the meeting. The host of the meeting must be a user in your account or users in any other accounts that have installed your [webhook-enabled](https://marketplace.zoom.us/docs/api-reference/webhook-reference#enable-webhooks) app.\n\nWhen scheduling a meeting, the organizer or host of the meeting can enable the **Enable join before host** option. This allows attendees to join the meeting before the host of the meeting arrives. This meeting also starts as soon as the first meeting participant joins.\n\nIf this option is **disabled**, participants are prompted to wait for the host to arrive before joining the meeting.\n\n## Prerequisites\n\n* A Pro or a higher plan.\n* **Disable** the **Enable join before host** option for the scheduled meeting.\n* Enable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Participant waiting for host to join** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.participant_jbh_waiting`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.participant_jbh_waiting"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the meeting."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "duration",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The meeting type. \n* 0 - A prescheduled meeting. \n* 1 - An instant meeting. \n* 2 - A scheduled meeting. \n* 3 - A recurring meeting with no fixed time. \n* 4 - A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 - A [PAC (personal audio conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 - A recurring meeting with a fixed time.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting's [timezone](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled meeting duration."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the meeting participant.",
                            "required": [
                              "user_name"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The participant's universally unique ID (UUID). \n* If the participant joins the meeting by logging into Zoom, this value is the id value in the [**Get a user**](/api-reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the meeting **without** logging into Zoom, this returns an empty string value."
                              },
                              "user_name": {
                                "type": "string",
                                "description": "The participant's display name."
                              },
                              "customer_key": {
                                "type": "string",
                                "description": "The participant's SDK identifier. This value can be alphanumeric."
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.participant_jbh_waiting",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": "1234567890",
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 8,
                        "start_time": "2021-07-13T21:44:51Z",
                        "duration": 60,
                        "timezone": "America/Los_Angeles",
                        "participant": {
                          "id": "iFxeBPYun6SAiWUzBcEkX",
                          "user_name": "JillChill",
                          "customer_key": "349589LkJyeW"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.registration_created": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.registration_created",
        "requestBody": {
          "description": "# meeting.registration_created\n\nThe **Meeting Registration has been created** event is triggered every time a user [registers](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings) for a meeting.\n\nA host with the Pro user type can enable the **Registration** feature when scheduling or updating a meeting. By [enabling registration for meetings](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings), participants must fill out a registration form receive information about joining the meeting. You can also programmatically register a participant via the [**Add Meeting Registrant**](/docs/api-reference/zoom-api/methods#operation/meetingRegistrantCreate) API.\n\n## Prerequisites\n\n* A Pro or a higher plan.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Meeting Registration has been created** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.registration_created`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.registration_created"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the meeting."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting registration.",
                        "required": [
                          "uuid",
                          "id",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "timezone",
                          "registrant"
                        ],
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The meeting ID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The meeting type: \n* 0 — A prescheduled meeting. \n* 1 — An instant meeting. \n* 2 — A scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 — A [PAC (Personal Audio Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 — A recurring meeting with a fixed time.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting's start time."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled meeting duration."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "occurrences": {
                            "type": "array",
                            "description": "Information about recurring meetings with fixed times and their occurrences. This only returns when the meeting's type value is 8.",
                            "additionalItems": true,
                            "items": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "occurrence_id",
                                    "start_time"
                                  ],
                                  "properties": {
                                    "occurrence_id": {
                                      "type": "string",
                                      "description": "The meeting occurrence's ID."
                                    },
                                    "start_time": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The meeting's start time."
                                    }
                                  },
                                  "additionalProperties": true
                                }
                              ]
                            }
                          },
                          "registrant": {
                            "type": "object",
                            "description": "Information about the meeting registrant.",
                            "required": [
                              "id",
                              "first_name",
                              "email",
                              "status",
                              "join_url"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The registrant's ID."
                              },
                              "first_name": {
                                "type": "string",
                                "description": "The registrant's first name."
                              },
                              "last_name": {
                                "type": "string",
                                "description": "The registrant's last name."
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "description": "The registrant's email address."
                              },
                              "address": {
                                "type": "string",
                                "description": "The registrant's address."
                              },
                              "city": {
                                "type": "string",
                                "description": "The registrant's city."
                              },
                              "country": {
                                "type": "string",
                                "description": "The registrant's two-letter [country code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries)."
                              },
                              "zip": {
                                "type": "string",
                                "description": "The registrant's ZIP or postal code."
                              },
                              "state": {
                                "type": "string",
                                "description": "The registrant's state or province."
                              },
                              "phone": {
                                "type": "string",
                                "description": "The registrant's phone number."
                              },
                              "industry": {
                                "type": "string",
                                "description": "The registrant's industry."
                              },
                              "org": {
                                "type": "string",
                                "description": "The registrant's organization."
                              },
                              "job_title": {
                                "type": "string",
                                "description": "The registrant's job title."
                              },
                              "purchasing_time_frame": {
                                "type": "string",
                                "description": "The registrant's purchasing time frame: \n* Within a month \n* 1-3 months \n* 4-6 months \n* More than 6 months \n* No timeframe \n* An empty string. — No purchasing time frame set.",
                                "enum": [
                                  "",
                                  "Within a month",
                                  "1-3 months",
                                  "4-6 months",
                                  "More than 6 months",
                                  "No timeframe"
                                ]
                              },
                              "role_in_purchase_process": {
                                "type": "string",
                                "description": "The registrant's role in the purchase process: \n* Decision Maker \n* Evaluator/Recommender \n* Influencer \n* Not involved \n* An empty string. — No role set.",
                                "enum": [
                                  "",
                                  "Decision Maker",
                                  "Evaluator/Recommender",
                                  "Influencer",
                                  "Not involved"
                                ]
                              },
                              "no_of_employees": {
                                "type": "string",
                                "description": "The registrant's number of employees: \n* 1-20 \n* 21-50 \n* 51-100 \n* 101-250 \n* 251-500 \n* 501-1,000 \n* 1,001-5,000 \n* 5,001-10,000 \n* More than 10,000 \n* An empty string. — No employee number set.",
                                "enum": [
                                  "",
                                  "1-20",
                                  "21-50",
                                  "51-100",
                                  "101-250",
                                  "251-500",
                                  "501-1,000",
                                  "1,001-5,000",
                                  "5,001-10,000",
                                  "More than 10,000"
                                ]
                              },
                              "comments": {
                                "type": "string",
                                "description": "The registrant's questions and comments."
                              },
                              "custom_questions": {
                                "type": "array",
                                "description": "Information about custom questions.",
                                "additionalItems": true,
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "title",
                                        "value"
                                      ],
                                      "properties": {
                                        "title": {
                                          "type": "string",
                                          "description": "The title of the custom question."
                                        },
                                        "value": {
                                          "type": "string",
                                          "maxLength": 128,
                                          "description": "The custom question's response value. This has a limit of 128 characters."
                                        }
                                      },
                                      "additionalProperties": true
                                    }
                                  ]
                                }
                              },
                              "status": {
                                "type": "string",
                                "description": "The registrant's registration approval status: \n* approve — Approved registrant. \n* pending — Registration approval pending.",
                                "enum": [
                                  "approved",
                                  "pending"
                                ]
                              },
                              "join_url": {
                                "type": "string",
                                "description": "The URL to join the meeting."
                              },
                              "participant_pin_code": {
                                "description": "The participant PIN code is used to authenticate audio participants before they join the meeting.",
                                "type": "integer",
                                "format": "int64"
                              }
                            },
                            "additionalProperties": true
                          }
                        },
                        "additionalProperties": true
                      }
                    },
                    "additionalProperties": true
                  }
                },
                "additionalProperties": true
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.registration_created",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "id": 1234567890,
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 8,
                        "start_time": "2021-07-13T21:44:51Z",
                        "duration": 60,
                        "timezone": "America/Los_Angeles",
                        "occurrences": [
                          {
                            "occurrence_id": "ABCDE12345",
                            "start_time": "2021-07-13T21:44:51Z"
                          }
                        ],
                        "registrant": {
                          "id": "iFxeBPYun6SAiWUzBcEkX",
                          "first_name": "Jill",
                          "last_name": "Chill",
                          "email": "jchill@example.com",
                          "address": "1800 Amphibious Blvd.",
                          "city": "Mountain View",
                          "country": "US",
                          "zip": "94045",
                          "state": "CA",
                          "phone": "5550100",
                          "industry": "Food",
                          "org": "Cooking Org",
                          "job_title": "Chef",
                          "purchasing_time_frame": "1-3 months",
                          "role_in_purchase_process": "Influencer",
                          "no_of_employees": "1-20",
                          "comments": "Looking forward to the meeting",
                          "custom_questions": [
                            {
                              "title": "What do you hope to learn from this meeting?",
                              "value": "Look forward to learning how you come up with new recipes and what other services you offer."
                            }
                          ],
                          "status": "approved",
                          "join_url": "https://example.com/join",
                          "participant_pin_code": 380303
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.summary_recovered": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.summary_recovered",
        "requestBody": {
          "description": "# meeting.summary_recovered\nThe **Meeting summary has been recovered from trash** event is triggered every time one of your app users or account users recovers a summary from the trash.\n\n## Prerequisites\n\n* Host user must be Pro or higher plan.\n* Enable the **Meeting Summary with AI Companion** feature in the host's account.\n* E2ee meetings do not have summary feature enabled.\n* Enable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Meeting summary has been recovered from trash** subscription enabled under the **Meeting** event.\n\n**Event type**: `meeting.summary_recovered`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The event's name.",
                    "enum": [
                      "meeting.summary_recovered"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "operator",
                      "operator_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who hosted the meeting."
                      },
                      "operator": {
                        "type": "string",
                        "description": "The email address of the user who recovered the meeting summary."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who recovered the meeting summary."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting summary.",
                        "required": [
                          "meeting_host_id",
                          "meeting_host_email",
                          "meeting_uuid",
                          "meeting_id",
                          "meeting_topic",
                          "meeting_start_time",
                          "meeting_end_time",
                          "summary_start_time",
                          "summary_end_time",
                          "summary_created_time",
                          "summary_last_modified_time",
                          "summary_title"
                        ],
                        "properties": {
                          "meeting_host_id": {
                            "type": "string",
                            "description": "The ID of the user who is set as the meeting host."
                          },
                          "meeting_host_email": {
                            "type": "string",
                            "format": "email",
                            "description": "The meeting host's email address."
                          },
                          "meeting_uuid": {
                            "type": "string",
                            "description": "Unique meeting ID. Each meeting instance generates its own meeting UUID - after a meeting ends, a new UUID is generated for the next instance of the meeting. Retrieve a list of UUIDs from past meeting instances using the [**List past meeting instances**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods/#operation/pastMeetings) API. [Double encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid) your UUID when using it for API calls if the UUID begins with a / or contains // in it.\n"
                          },
                          "meeting_id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-) - the meeting's unique identifier in **long** format, represented as int64 data type in JSON. Also known as the meeting number."
                          },
                          "meeting_topic": {
                            "type": "string",
                            "description": "Meeting topic."
                          },
                          "meeting_start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting's start date and time."
                          },
                          "meeting_end_time": {
                            "type": "string",
                            "description": "The meeting's end date and time.",
                            "format": "date-time",
                            "example": "2020-07-15T23:30:19Z"
                          },
                          "summary_start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The summary's start date and time."
                          },
                          "summary_end_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The summary's end date and time."
                          },
                          "summary_created_time": {
                            "type": "string",
                            "description": "The date and time when the meeting summary was created.",
                            "format": "date-time"
                          },
                          "summary_last_modified_time": {
                            "type": "string",
                            "description": "The date and time when the meeting summary was last modified.",
                            "format": "date-time"
                          },
                          "summary_title": {
                            "type": "string",
                            "description": "The summary title."
                          }
                        },
                        "additionalProperties": true
                      }
                    },
                    "additionalProperties": true
                  }
                },
                "additionalProperties": true
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.summary_recovered",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "dzVA4QmMQfyISoRcpFO8CA",
                      "operator": "admin@example.com",
                      "operator_id": "z8yCxjabcdEFGHfp8uQ",
                      "object": {
                        "meeting_host_id": "30R7kT7bTIKSNUFEuH_Qlg",
                        "meeting_host_email": "jchill@example.com",
                        "meeting_uuid": "aDYlohsHRtCd4ii1uC2+hA==",
                        "meeting_id": 97763643886,
                        "meeting_topic": "My Meeting",
                        "meeting_start_time": "2019-07-15T23:24:52Z",
                        "meeting_end_time": "2020-07-15T23:30:19Z",
                        "summary_start_time": "2019-07-15T23:24:52Z",
                        "summary_end_time": "2020-07-15T23:30:19Z",
                        "summary_created_time": "2019-07-15T23:24:52Z",
                        "summary_last_modified_time": "2020-07-15T23:30:19Z",
                        "summary_title": "Meeting Summary for my meeting"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "recording.recovered": {
      "post": {
        "tags": [
          "recording"
        ],
        "operationId": "recording.recovered",
        "requestBody": {
          "description": "# recording.recovered\n\nThis event is triggered when a user recovers a recording from the trash.\n\nZoom allows users to recover their cloud recordings from the trash within 30 days of deletion. You can recover a deleted cloud recording via the [**Recordings**](https://support.zoom.us/hc/en-us/articles/216378863-Recover-a-Deleted-Cloud-Recording) tab in the Zoom web client or via the [**Recover meeting recordings**](/api-reference/zoom-api/ma#operation/recordingStatusUpdate) API.\n\n## Prerequisites\n\n* A Pro or a higher plan.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Recording files have been recovered from trash** subscription enabled under the **Recording** event.\n\n\n\n**Event type**: `recording.recovered`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "recording.recovered"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "download_token": {
                    "type": "string",
                    "description": "Use the generated token value with the download_url value to download the cloud recording via an [OAuth app](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app). The download token only lasts for 24 hours after its creation and you can only download the file within 24 hours of receiving the event notification. You can either include the download_token as a query parameter or pass it as a Bearer token in the Authorization header of your HTTP request: \n\n **Using an Authorization header (Recommended)** \n\n \ncurl --request GET \\\n  --url {download_url} \\\n  --header 'authorization: Bearer {download_token} \\\n  --header 'content-type: application/json'\n \n\n**Using a query parameter** \n\n \n{download_url}/?access_token={download_token}\n \n\n For example: https://zoom.us/recording/download/123456?access_token=abcdefgh"
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object",
                      "operator",
                      "operator_id"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user that completed the meeting or webinar recording."
                      },
                      "operator": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user who recovered the recording."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who recovered the recording."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting or webinar recording.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "account_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "share_url",
                          "total_size",
                          "recording_count",
                          "recording_files"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The ID of the recorded meeting (meetingId) or webinar (webinarId)."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The universally unique identifier (UUID) of the recorded meeting or webinar instance."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The ID of the user set as the host of the meeting or webinar."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting or webinar topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The type of recorded meeting or webinar: \n\n If the recording is of a meeting: \n* 1 — Instant meeting. \n* 2 — Scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A meeting created via PMI (Personal Meeting ID). \n* 7 — A [Personal Audio Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) (PAC). \n* 8 - Recurring meeting with a fixed time. \n\n If the recording is of a webinar: \n* 5 — A webinar. \n* 6 — A recurring webinar without a fixed time. \n* 9 — A recurring webinar with a fixed time. \n\n If the recording is **not** from a meeting or webinar: \n\n* 99 — A recording uploaded via the [**Recordings**](https://zoom.us/recording) interface on the Zoom Web Portal.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9,
                              99
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting or webinar's start time."
                          },
                          "account_id": {
                            "type": "string",
                            "description": "The account ID of the user that completed the meeting or webinar recording."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting or webinar's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The meeting or webinar's scheduled duration."
                          },
                          "share_url": {
                            "type": "string",
                            "description": "The URL at which approved users can view the recording."
                          },
                          "total_size": {
                            "type": "integer",
                            "description": "The recording file's total size, in bytes."
                          },
                          "recording_count": {
                            "type": "integer",
                            "description": "The number of recovered recording files."
                          },
                          "recording_files": {
                            "type": "array",
                            "description": "Information about the recovered recording files.",
                            "items": {
                              "type": "object",
                              "required": [
                                "id",
                                "meeting_id",
                                "recording_start",
                                "recording_end",
                                "file_type",
                                "file_size",
                                "file_extension",
                                "download_url",
                                "status",
                                "recording_type"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The recording file's ID."
                                },
                                "meeting_id": {
                                  "type": "string",
                                  "description": "The meeting's ID."
                                },
                                "recording_start": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The date and time at which recording started."
                                },
                                "recording_end": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The date and time at which recording ended."
                                },
                                "file_type": {
                                  "type": "string",
                                  "description": "The file type of the recording file.",
                                  "enum": [
                                    "MP4",
                                    "M4A",
                                    "CHAT",
                                    "TRANSCRIPT",
                                    "CSV",
                                    "TB",
                                    "CC",
                                    "CHAT_MESSAGE",
                                    "SUMMARY",
                                    "TIMELINE"
                                  ]
                                },
                                "file_size": {
                                  "type": "integer",
                                  "description": "The recording file's size, in bytes."
                                },
                                "file_extension": {
                                  "type": "string",
                                  "description": "The file extension type of the recording file.",
                                  "enum": [
                                    "MP4",
                                    "M4A",
                                    "TXT",
                                    "VTT",
                                    "CSV",
                                    "JSON",
                                    "JPG"
                                  ]
                                },
                                "file_name": {
                                  "type": "string",
                                  "description": "The recording file's name."
                                },
                                "play_url": {
                                  "type": "string",
                                  "description": "The URL at which the recording file can be opened and played."
                                },
                                "download_url": {
                                  "type": "string",
                                  "description": "The URL at which to download the the recording. \n\n **JWT apps** \n\n To access a private or password-protected cloud recording of a user in your account, use a [Zoom JWT app](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app). Use the generated JWT token as the value of the access_token query parameter and include this query parameter at the end of the URL. \n\n https://{{base-domain}}/recording/download/{{path-to-file-download}}?access_token={{JWT-token}} \n\n **OAuth apps** \n\n If a user has authorized and installed your OAuth app that contains recording scopes, use the user's [OAuth access token](https://developers.zoom.us/docs/integrations/oauth/) to download the file. For example: \n\n https://{{base-domain}}/rec/archive/download/xxx?access_token={{OAuth-access-token}}.  \n\n**Note:** We recommend that you send the access_token as a Bearer token in the Authorization header, for example: \"Authorization\": \"Bearer <ACCESS_TOKEN>”."
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The recording file's processing status: \n* completed — The processing of the file is complete. \n* processing — The file is processing.",
                                  "enum": [
                                    "completed",
                                    "processing"
                                  ]
                                },
                                "recording_type": {
                                  "type": "string",
                                  "description": "The recording file type. \n* shared_screen_with_speaker_view(CC) \n* shared_screen_with_speaker_view \n* shared_screen_with_gallery_view \n* gallery_view \n* shared_screen \n* audio_only \n* audio_transcript \n* chat_file \n* active_speaker \n* host_video \n* audio_only_each_participant \n* cc_transcript \n* closed_caption \n* poll \n* timeline \n* thumbnail \n* audio_interpretation \n* summary \n* summary_next_steps \n* summary_smart_chapters \n*sign_interpretation \n*production_studio \n\nFor more information, read our [Managing and sharing cloud recordings](https://support.zoom.us/hc/en-us/articles/205347605-Managing-and-sharing-cloud-recordings#h_9898497b-e736-4980-a749-d55608f10773) documentation.",
                                  "enum": [
                                    "shared_screen_with_speaker_view(CC)",
                                    "shared_screen_with_speaker_view",
                                    "shared_screen_with_gallery_view",
                                    "gallery_view",
                                    "shared_screen",
                                    "audio_only",
                                    "audio_transcript",
                                    "chat_file",
                                    "active_speaker",
                                    "host_video",
                                    "audio_only_each_participant",
                                    "cc_transcript",
                                    "closed_caption",
                                    "poll",
                                    "timeline",
                                    "thumbnail",
                                    "audio_interpretation",
                                    "summary",
                                    "summary_next_steps",
                                    "summary_smart_chapters",
                                    "sign_interpretation",
                                    "production_sutdio"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "participant_audio_files": {
                            "type": "array",
                            "description": "Information about the recovered participants' recording files.",
                            "items": {
                              "type": "object",
                              "required": [
                                "id",
                                "recording_start",
                                "recording_end",
                                "file_type",
                                "file_size",
                                "file_extension",
                                "file_name",
                                "download_url",
                                "status"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The recording file's unique ID."
                                },
                                "recording_start": {
                                  "type": "string",
                                  "description": "The recording file's start time.",
                                  "format": "date-time"
                                },
                                "recording_end": {
                                  "type": "string",
                                  "description": "The recording file's end time.",
                                  "format": "date-time"
                                },
                                "file_type": {
                                  "type": "string",
                                  "description": "The recording file's format."
                                },
                                "file_name": {
                                  "type": "string",
                                  "description": "The recording file's name."
                                },
                                "file_size": {
                                  "type": "integer",
                                  "description": "The size of the recording file, in bytes."
                                },
                                "file_extension": {
                                  "type": "string",
                                  "description": "The recording file's extension."
                                },
                                "play_url": {
                                  "type": "string",
                                  "description": "The URL at which the recording file can be opened and played."
                                },
                                "download_url": {
                                  "type": "string",
                                  "description": "The URL at which to download the the recording. \n\n **JWT apps** \n\n To access a private or password-protected cloud recording of a user in your account, use a [Zoom JWT app](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app). Use the generated JWT token as the value of the access_token query parameter and include this query parameter at the end of the URL. \n\n https://{{base-domain}}/recording/download/{{path-to-file-download}}?access_token={{JWT-token}} \n\n **OAuth apps** \n\n If a user has authorized and installed your OAuth app that contains recording scopes, use the user's [OAuth access token](https://developers.zoom.us/docs/integrations/oauth/) to download the file. For example: \n\n https://{{base-domain}}/rec/archive/download/xxx?access_token={{OAuth-access-token}} \n\n **Note:** This field does **not** return for [Zoom On-Premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). Instead, this API will return the file_path field."
                                },
                                "file_path": {
                                  "type": "string",
                                  "description": "The file path to the On-Premise account recording. \n\n **Note:** This API returns this field for [Zoom On-Premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). It does **not** return the download_url field."
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The participant audio file's processing status: \n* completed — The processing of the file is complete. \n* processing — The file is processing.",
                                  "enum": [
                                    "completed",
                                    "processing"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "recording.recovered",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "operator": "admin@example.com",
                      "operator_id": "I7zp-pYbTl22Z29H796Ixg",
                      "object": {
                        "id": 1234567890,
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Personal Recording",
                        "type": 4,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "share_url": "https://example.com",
                        "total_size": 3328371,
                        "recording_count": 2,
                        "recording_files": [
                          {
                            "id": "ed6c2f27-2ae7-42f4-b3d0-835b493e4fa8",
                            "meeting_id": "098765ABCD",
                            "recording_start": "2021-03-23T22:14:57Z",
                            "recording_end": "2021-03-23T23:15:41Z",
                            "file_type": "M4A",
                            "file_size": 246560,
                            "play_url": "https://example.com/recording/play/Qg75t7xZBtEbAkjdlgbfdngBBBB",
                            "download_url": "https://example.com/recording/download/Qg75t7xZBtEbAkjdlgbfdngBBBB",
                            "status": "completed",
                            "recording_type": "audio_only"
                          },
                          {
                            "id": "388ffb46-1541-460d-8447-4624451a1db7",
                            "meeting_id": "098765ABCD",
                            "recording_start": "2021-03-23T22:14:57Z",
                            "recording_end": "2021-03-23T23:15:41Z",
                            "file_type": "MP4",
                            "file_size": 282825,
                            "play_url": "https://example.com/recording/play/Qg75t7xZBtEbAkjdlgbfdngCCCC",
                            "download_url": "https://example.com/recording/download/Qg75t7xZBtEbAkjdlgbfdngCCCC",
                            "status": "completed",
                            "recording_type": "shared_screen_with_speaker_view"
                          }
                        ],
                        "participant_audio_files": [
                          {
                            "id": "ed6c2f27-2ae7-42f4-b3d0-835b493e4fa8",
                            "recording_start": "2021-03-23T22:14:57Z",
                            "recording_end": "2021-03-23T23:15:41Z",
                            "recording_type": "audio_only",
                            "file_type": "M4A",
                            "file_name": "MyRecording",
                            "file_size": 246560,
                            "file_extension": "MP4",
                            "play_url": "https://example.com/recording/play/Qg75t7xZBtEbAkjdlgbfdngAAAA",
                            "download_url": "https://example.com/recording/download/Qg75t7xZBtEbAkjdlgbfdngAAAA",
                            "status": "completed"
                          }
                        ]
                      }
                    },
                    "download_token": "abJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJodHRwczovL2V2ZW50Lnpvb20udXMiLCJhY2NvdW50SWQiOiJNdDZzdjR1MFRBeVBrd2dzTDJseGlBIiwiYXVkIjoiaHR0cHM6Ly9vYXV0aC56b29tLnVzIiwibWlkIjoieFp3SEc0c3BRU2VuekdZWG16dnpiUT09IiwiZXhwIjoxNjI2MTM5NTA3LCJ1c2VySWQiOiJEWUhyZHBqclMzdWFPZjdkUGtrZzh3In0.a6KetiC6BlkDhf1dP4KBGUE1bb2brMeraoD45yhFx0eSSSTFdkHQnsKmlJQ-hdo9Zy-4vQw3rOxlyoHv583JyZ"
                  }
                }
              }
            }
          }
        }
      }
    },
    "recording.cloud_storage_usage_updated": {
      "post": {
        "tags": [
          "recording"
        ],
        "operationId": "recording.cloud_storage_usage_updated",
        "requestBody": {
          "description": "# recording.cloud_storage_usage_updated\n\nThe **Recording Cloud Storage Usage Updated** event is triggered every time storage usage changes.\n\nStates such as recording completed, trashed, or recovered trigger this event.\n\n## Prerequisites\n\n* A Pro or higher plan.\n* Enable Cloud recording on the users' account.\n* Enable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Recording Cloud Storage Usage Updated** subscription enabled under the **Recording** event.\n\n\n\n**Event type**: `recording.cloud_storage_usage_updated`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "recording.cloud_storage_usage_updated"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the host who recorded the webinar."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the recording plan.",
                        "required": [
                          "free_storage",
                          "plan_storage",
                          "plan_type",
                          "storage_used",
                          "storage_used_percentage",
                          "storage_exceed"
                        ],
                        "properties": {
                          "free_storage": {
                            "description": "Recording free storage.",
                            "type": "string",
                            "example": "2 GB"
                          },
                          "plan_storage": {
                            "description": "Recording plan storage.",
                            "type": "string",
                            "example": "10 GB"
                          },
                          "plan_type": {
                            "description": "Recording plan type.",
                            "type": "string",
                            "example": "cmr_monthly_commitment_40"
                          },
                          "storage_used": {
                            "description": "Amount of storage used.",
                            "type": "string",
                            "example": "1 GB"
                          },
                          "storage_used_percentage": {
                            "description": "The percentage of storage used.",
                            "type": "number",
                            "minimum": 0,
                            "maximum": 100,
                            "example": 85
                          },
                          "storage_exceed": {
                            "description": "Amount of storage exceed.",
                            "type": "string",
                            "example": "0"
                          },
                          "max_exceed_date": {
                            "description": "The maximum date that overage storage.",
                            "type": "string",
                            "example": "2023-03-01"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "recording.cloud_storage_usage_updated",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "free_storage": "1.65 GB",
                        "plan_storage": "40 GB",
                        "plan_type": "cmr_monthly_commitment_40",
                        "storage_used": "1.65 GB",
                        "storage_used_percentage": 80,
                        "storage_exceed": "0",
                        "max_exceed_date": "2023-03-01"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.sharing_ended": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.sharing_ended",
        "requestBody": {
          "description": "# meeting.sharing_ended\n\nThe **Meeting Sharing Ended** event is triggered every time an attendee or a host stops sharing their screen during a Zoom meeting. The meeting host must be a user in your account or a user in any other accounts that have installed your [webhook-enabled](https://marketplace.zoom.us/docs/api-reference/webhook-reference#enable-webhooks) app.\n\nZoom allows [screen sharing](https://support.zoom.us/hc/en-us/articles/201362153-Screen-Sharing-and-Annotations) by host and attendees on desktop, tablet, and mobile devices running Zoom during meetings.\n\n## Prerequisites\n\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Meeting Sharing Ended** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.sharing_ended`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.sharing_ended"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the meeting."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The meeting type: \n* 0 — A prescheduled meeting. \n* 1 — An instant meeting. \n* 2 — A scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 — A [PAC (Personal Audio Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 — A recurring meeting with a fixed time.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "pattern": "(^\\s*$|^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$)",
                            "description": "The meeting's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled meeting duration."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the meeting participant.",
                            "required": [
                              "user_id",
                              "sharing_details"
                            ],
                            "properties": {
                              "user_id": {
                                "type": "string",
                                "description": "The participant's meeting user ID. This value is assigned to a participant upon joining a meeting and is only valid for the duration of the meeting."
                              },
                              "user_name": {
                                "type": "string",
                                "description": "The participant's display name."
                              },
                              "id": {
                                "type": "string",
                                "description": "The participant's universally unique ID (UUID): \n* If the participant joins the meeting by logging into Zoom, this value is the id value in the [**Get a user**](/api-reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the meeting **without** logging into Zoom, this returns an empty string value."
                              },
                              "sharing_details": {
                                "type": "object",
                                "description": "Information about the meeting's screenshare.",
                                "required": [
                                  "content",
                                  "link_source",
                                  "file_link",
                                  "date_time",
                                  "source"
                                ],
                                "properties": {
                                  "content": {
                                    "type": "string",
                                    "description": "The type of shared content: \n* application — An application. For example, a web browser. \n* whiteboard — The [classic whiteboard](https://support.zoom.us/hc/en-us/articles/205677665-Sharing-a-whiteboard). \n* desktop — A user's desktop. \n* airplay — A user's [AirPlay (Apple screen mirroring)](https://support.zoom.us/hc/en-us/articles/204726885-Sharing-screen-using-Apple-screen-mirroring-AirPlay-). \n* camera — A user's camera. \n* unknown — An unrecognized application, such as a third party app.",
                                    "enum": [
                                      "application",
                                      "whiteboard",
                                      "desktop",
                                      "airplay",
                                      "camera",
                                      "unknown"
                                    ]
                                  },
                                  "link_source": {
                                    "type": "string",
                                    "description": "The Dropbox sharing method: \n* deep_link — A [deep link](https://en.wikipedia.org/wiki/Deep_linking). \n* in_meeting — A link shared via Zoom. \n* An empty (””) value if the link source is **not** a Dropbox link.",
                                    "enum": [
                                      "",
                                      "deep_link",
                                      "in_meeting"
                                    ]
                                  },
                                  "file_link": {
                                    "type": "string",
                                    "description": "The Dropbox file's link. This field returns an empty (””) value if the file link is **not** from a Dropbox source."
                                  },
                                  "date_time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The screenshare's date and time."
                                  },
                                  "source": {
                                    "type": "string",
                                    "description": "The source from which the file was shared: \n* dropbox — A Dropbox source. \n* An empty (””) value if the source is **not** Dropbox.",
                                    "enum": [
                                      "",
                                      "dropbox"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.sharing_ended",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": "1234567890",
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 8,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "participant": {
                          "user_id": "ABCDE12345",
                          "user_name": "JillChill",
                          "id": "iFxeBPYun6SAiWUzBcEkX",
                          "sharing_details": {
                            "content": "application",
                            "link_source": "in_meeting",
                            "file_link": "",
                            "date_time": "2021-07-13T21:56:00Z",
                            "source": "dropbox"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.participant_left_breakout_room": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.participant_left_breakout_room",
        "requestBody": {
          "description": "# meeting.participant_left_breakout_room\n\nThe **Meeting participant has left a breakout room** event is triggered when a meeting participant leaves a meeting [breakout room](https://support.zoom.us/hc/en-us/articles/115005769646-Participating-in-breakout-rooms).\n\nBreakout rooms are sessions that are split off from the main Zoom meeting. They let participants meet in smaller groups and are completely isolated in terms of audio and video from the main session.\n\n## Prerequisites\n\n* Enable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Meeting participant has left a breakout room** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.participant_left_breakout_room`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The event's name.",
                    "enum": [
                      "meeting.participant_left_breakout_room"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the meeting."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "breakout_room_uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The main meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The main meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "breakout_room_uuid": {
                            "type": "string",
                            "description": "The breakout room's universally unique identifier (UUID). Each breakout room instance generates a breakout room UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The main meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The main meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The main meeting type. \n* 0 - A prescheduled meeting. \n* 1 - An instant meeting. \n* 2 - A scheduled meeting. \n* 3 - A recurring meeting with no fixed time. \n* 4 - A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 - A [PAC (Personal Audio Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 - A recurring meeting with a fixed time.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "pattern": "(^\\s*$|^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$)",
                            "description": "The main meeting's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The main meeting's [timezone](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The main scheduled meeting duration."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the meeting participant.",
                            "required": [
                              "user_id",
                              "user_name",
                              "email",
                              "leave_time"
                            ],
                            "properties": {
                              "user_id": {
                                "type": "string",
                                "description": "The participant's meeting user ID. This value is assigned to a participant when they join a meeting, and is only valid for the duration of the meeting."
                              },
                              "parent_user_id": {
                                "type": "string",
                                "description": "The participant's main meeting user ID (user_id)."
                              },
                              "user_name": {
                                "type": "string",
                                "description": "The participant's display name."
                              },
                              "id": {
                                "type": "string",
                                "description": "The participant's unique ID. \n* If meeting registration was **not** required and the participant joined by logging into Zoom, this value is the same as the userId field used in the [**Get a user**](/api-reference/zoom-api/methods#operation/user) API. \n* If registration was required for the meeting and the participant joined the meeting by logging into Zoom, this value is the same as the id value in the [**List meeting registrants**](/api-reference/zoom-api/methods#operation/meetingRegistrants) API response. \n* If participant joins without logging into Zoom, this returns an empty string value. \n\n This value returns blank for external users.\n\n**Note:** Use the participant_user_id value instead of this value. We will remove this response in a future release."
                              },
                              "participant_uuid": {
                                "type": "string",
                                "description": "The participant's UUID for this specific meeting and any breakout rooms created in this meeting. This value is assigned to a participant when they join a meeting, and is only valid for the duration of that meeting."
                              },
                              "leave_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time when the participant left the meeting."
                              },
                              "leave_reason": {
                                "type": "string",
                                "description": "The reason why the participant left the meeting."
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "description": "The participant's email address. This response only returns if the participant joined the meeting by logging into Zoom."
                              },
                              "registrant_id": {
                                "type": "string",
                                "description": "The participant's registrant ID. A host or a user with administrative permissions can require [registration for Zoom meetings](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0065026)."
                              },
                              "participant_user_id": {
                                "type": "string",
                                "description": "The participant's unique ID. \n* If meeting registration was **not** required and the participant joined by logging into Zoom, this value is the same as the userId field used in the [**Get a user**](/api-reference/zoom-api/methods#operation/user) API. \n* If registration was required for the meeting and the participant joined the meeting by logging into Zoom, this value is the same as the id value in the [**List meeting registrants**](/api-reference/zoom-api/methods#operation/meetingRegistrants) API response. \n* If participant joins without logging into Zoom, this returns an empty string value.\n\nThis value returns blank for external users."
                              },
                              "phone_number": {
                                "type": "string",
                                "description": "Phone number of participant joined via PSTN.",
                                "example": "8615250064084"
                              },
                              "customer_key": {
                                "type": "string",
                                "description": "The participant's SDK identifier. This value can be alphanumeric."
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.participant_left_breakout_room",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": "1234567890",
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "breakout_room_uuid": "FkQbpP2UR028mDrwzEahqw==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 8,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "participant": {
                          "user_id": "31228928",
                          "parent_user_id": "1234567890",
                          "user_name": "Jill Chill",
                          "id": "iFxeBPYun6SAiWUzBcEkX",
                          "participant_uuid": "55555AAAiAAAAAiAiAiiAii",
                          "leave_time": "2021-07-13T22:50:51Z",
                          "leave_reason": "Jill Chill left the meeting.<br>Reason: Host ended the meeting.",
                          "date_time": "2021-07-13T21:44:51Z",
                          "email": "jchill@example.com",
                          "registrant_id": "abcdefghij0-klmnopq23456",
                          "participant_user_id": "rstuvwxyza789-cde",
                          "phone_number": "8615250064084",
                          "customer_key": "349589LkJyeW"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.summary_shared": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.summary_shared",
        "requestBody": {
          "description": "# meeting.summary_shared\nThe **Meeting summary has been shared** event is triggered every time one of your app users or account users shares a meeting summary.\n\n## Prerequisites\n\n* Host user must have a Pro or higher plan.\n* Enable the **Meeting Summary with AI Companion** feature in the host's account.\n* E2ee meetings do not have summary feature enabled.\n* Enable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Meeting summary has been shared** subscription enabled under the **Meeting** event.\n\n**Event type**: `meeting.summary_shared`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The event's name.",
                    "enum": [
                      "meeting.summary_shared"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "operator",
                      "operator_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who hosted the meeting."
                      },
                      "operator": {
                        "type": "string",
                        "description": "The email address of the user who shared the meeting summary."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who shared the meeting summary."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting summary.",
                        "required": [
                          "meeting_host_id",
                          "meeting_host_email",
                          "meeting_uuid",
                          "meeting_id",
                          "meeting_topic",
                          "meeting_start_time",
                          "meeting_end_time",
                          "summary_start_time",
                          "summary_end_time",
                          "summary_created_time",
                          "summary_last_modified_time",
                          "summary_title",
                          "share_with_users"
                        ],
                        "properties": {
                          "meeting_host_id": {
                            "type": "string",
                            "description": "The ID of the user who is set as the meeting host."
                          },
                          "meeting_host_email": {
                            "type": "string",
                            "format": "email",
                            "description": "The meeting host's email address."
                          },
                          "meeting_uuid": {
                            "type": "string",
                            "description": "Unique meeting ID. Each meeting instance generates its own meeting UUID. After a meeting ends, a new UUID is generated for the next instance of the meeting. Retrieve a list of UUIDs from past meeting instances using the [**List past meeting instances**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods/#operation/pastMeetings) API. [Double encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid) your UUID when using it for API calls if the UUID begins with a / or contains // in it.\n"
                          },
                          "meeting_id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-) - the meeting's unique identifier in **long** format, represented as int64 data type in JSON. Also known as the meeting number."
                          },
                          "meeting_topic": {
                            "type": "string",
                            "description": "Meeting topic."
                          },
                          "meeting_start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting's start date and time."
                          },
                          "meeting_end_time": {
                            "type": "string",
                            "description": "The meeting's end date and time.",
                            "format": "date-time",
                            "example": "2020-07-15T23:30:19Z"
                          },
                          "summary_start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The summary's start date and time."
                          },
                          "summary_end_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The summary's end date and time."
                          },
                          "summary_created_time": {
                            "type": "string",
                            "description": "The date and time when the meeting summary was created.",
                            "format": "date-time"
                          },
                          "summary_last_modified_time": {
                            "type": "string",
                            "description": "The date and time when the meeting summary was last modified.",
                            "format": "date-time"
                          },
                          "summary_title": {
                            "type": "string",
                            "description": "The summary title."
                          },
                          "share_with_users": {
                            "type": "array",
                            "description": "Information about the shared users.",
                            "items": {
                              "type": "object",
                              "required": [
                                "user_email"
                              ],
                              "properties": {
                                "user_email": {
                                  "type": "string",
                                  "format": "email",
                                  "description": "The shared user email."
                                }
                              },
                              "additionalProperties": true
                            }
                          }
                        },
                        "additionalProperties": true
                      }
                    },
                    "additionalProperties": true
                  }
                },
                "additionalProperties": true
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.summary_shared",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "dzVA4QmMQfyISoRcpFO8CA",
                      "operator": "admin@example.com",
                      "operator_id": "z8yCxjabcdEFGHfp8uQ",
                      "object": {
                        "meeting_host_id": "30R7kT7bTIKSNUFEuH_Qlg",
                        "meeting_host_email": "jchill@example.com",
                        "meeting_uuid": "aDYlohsHRtCd4ii1uC2+hA==",
                        "meeting_id": 97763643886,
                        "meeting_topic": "My Meeting",
                        "meeting_start_time": "2019-07-15T23:24:52Z",
                        "meeting_end_time": "2020-07-15T23:30:19Z",
                        "summary_start_time": "2019-07-15T23:24:52Z",
                        "summary_end_time": "2020-07-15T23:30:19Z",
                        "summary_created_time": "2019-07-15T23:24:52Z",
                        "summary_last_modified_time": "2020-07-15T23:30:19Z",
                        "summary_title": "Meeting Summary for my meeting",
                        "share_with_users": [
                          {
                            "user_email": "jchill@example.com"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.device_tested": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.device_tested",
        "requestBody": {
          "description": "# meeting.device_tested\n\nThe **Meeting Device Tested** event is triggered every time a user completes a [connected device test](https://support.zoom.us/hc/en-us/articles/201362283-Testing-computer-or-device-audio).\n\nWhen a user joins a meeting, they choose to test their connected camera, microphone, and speaker devices. The Zoom client performs a test for the selected device and prompts a user to confirm whether the device works.\n\n## Prerequisites\n\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Meeting Device Tested** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.device_tested`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.device_tested"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the meeting."
                      },
                      "object": {
                        "type": "object",
                        "required": [
                          "id",
                          "uuid",
                          "test_result"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "test_result": {
                            "type": "object",
                            "description": "Information about the meeting's device test results.",
                            "required": [
                              "user_id",
                              "user_name",
                              "camera_status",
                              "speaker_status",
                              "microphone_status"
                            ],
                            "properties": {
                              "user_id": {
                                "type": "string",
                                "description": "The user's ID."
                              },
                              "user_name": {
                                "type": "string",
                                "description": "The user's username."
                              },
                              "camera_status": {
                                "type": "integer",
                                "description": "The camera's status: \n* 2 — Device working. \n* 1 — Device not working. \n* 0 — Device not tested.",
                                "enum": [
                                  0,
                                  1,
                                  2
                                ]
                              },
                              "speaker_status": {
                                "type": "integer",
                                "description": "The speaker's status: \n* 2 — Device working. \n* 1 — Device not working. \n* 0 — Device not tested.",
                                "enum": [
                                  0,
                                  1,
                                  2
                                ]
                              },
                              "microphone_status": {
                                "type": "integer",
                                "description": "The microphone's status: \n* 2 — Device working. \n* 1 — Device not working. \n* 0 — Device not tested.",
                                "enum": [
                                  0,
                                  1,
                                  2
                                ]
                              },
                              "os": {
                                "type": "string",
                                "description": "The user's operating system."
                              }
                            },
                            "additionalProperties": true
                          }
                        },
                        "additionalProperties": true
                      }
                    },
                    "additionalProperties": true
                  }
                },
                "additionalProperties": true
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.device_tested",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": 1234567890,
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "test_result": {
                          "user_id": "1234567890",
                          "user_name": "JillChill",
                          "camera_status": 1,
                          "speaker_status": 1,
                          "microphone_status": 1,
                          "os": "ios"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "recording.transcript_completed": {
      "post": {
        "tags": [
          "recording"
        ],
        "operationId": "recording.transcript_completed",
        "requestBody": {
          "description": "# recording.transcript_completed\n\nThe **Recording transcript files have completed** event is triggered every time the transcript of the recording is made available for one of your app users or account users after the recorded meeting/webinar ends.\n\nZoom supports audio transcription of cloud recordings. To utilize audio transcription, users must first [enable](https://support.zoom.us/hc/en-us/articles/115004794983-Automatically-Transcribe-Cloud-Recordings) it. An account owner or a user with admin permissions can enable cloud recording for an account or a group of users.\n\n## Prerequisites\n\n* A Business, Education, or Enterprise license.\n* Cloud recording must be enabled on the users' account.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Recording transcript files have completed** subscription enabled under the **Recording** event.\n\n\n\n**Event type**: `recording.transcript_completed`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "recording.transcript_completed"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "download_token": {
                    "type": "string",
                    "description": "Use the generated token value with the download_url value to download the cloud recording via an [OAuth app](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app). The download token only lasts for 24 hours after its creation and you can only download the file within 24 hours of receiving the event notification. You can either include the download_token as a query parameter or pass it as a Bearer token in the Authorization header of your HTTP request: \n\n **Using an Authorization header (Recommended)** \n\n \ncurl --request GET \\\n  --url {download_url} \\\n  --header 'authorization: Bearer {download_token} \\\n  --header 'content-type: application/json'\n \n\n**Using a query parameter** \n\n \n{download_url}/?access_token={download_token}\n \n\n For example: https://zoom.us/recording/download/123456?access_token=abcdefgh"
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user that hosted the meeting or the webinar."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the webinar or meeting recording.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "account_id",
                          "host_email",
                          "share_url",
                          "total_size",
                          "recording_count",
                          "recording_files"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The ID of the meeting (meetingId) or the webinar (webinarId)."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The universally unique identifier (UUID) of the recorded meeting or webinar instance. Each meeting or webinar instance generates its own meeting UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The ID of the user set as the host of the archived meeting or webinar."
                          },
                          "account_id": {
                            "type": "string",
                            "description": "The account ID of the user that ended the meeting and completed the recording."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting or webinar topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The type of recorded meeting or webinar: \n\n If the recording is of a meeting: \n* 1 — Instant meeting. \n* 2 — Scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A meeting created via PMI (Personal Meeting ID). \n* 7 — A [Personal Audio Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) (PAC). \n* 8 - Recurring meeting with a fixed time. \n\n If the recording is of a webinar: \n* 5 — A webinar. \n* 6 — A recurring webinar without a fixed time. \n* 9 — A recurring webinar with a fixed time. \n\n If the recording is **not** from a meeting or webinar: \n\n* 99 — A recording uploaded via the [**Recordings**](https://zoom.us/recording) interface on the Zoom Web Portal.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9,
                              99
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting or webinar's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting or webinar's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "host_email": {
                            "type": "string",
                            "format": "email",
                            "description": "The host's email address."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The meeting or webinar's scheduled duration."
                          },
                          "password": {
                            "type": "string",
                            "description": "The meeting's password."
                          },
                          "share_url": {
                            "type": "string",
                            "description": "The URL at which approved users can view the recording."
                          },
                          "total_size": {
                            "type": "integer",
                            "description": "The recording file's total size, in bytes."
                          },
                          "recording_count": {
                            "type": "integer",
                            "description": "The number of completed recording files."
                          },
                          "recording_files": {
                            "type": "array",
                            "description": "Information about the completed recording files.",
                            "items": {
                              "type": "object",
                              "required": [
                                "id",
                                "meeting_id",
                                "recording_start",
                                "recording_end",
                                "file_type",
                                "file_size",
                                "file_extension",
                                "download_url",
                                "status",
                                "recording_type"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The recording file's ID."
                                },
                                "meeting_id": {
                                  "type": "string",
                                  "description": "The meeting's ID."
                                },
                                "recording_start": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The date and time at which recording started."
                                },
                                "recording_end": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The date and time at which recording ended."
                                },
                                "file_type": {
                                  "type": "string",
                                  "description": "The recording file's type."
                                },
                                "file_size": {
                                  "type": "integer",
                                  "description": "The recording file's size, in bytes."
                                },
                                "file_extension": {
                                  "type": "string",
                                  "description": "The recording file's extension."
                                },
                                "file_name": {
                                  "type": "string",
                                  "description": "The recording file's name."
                                },
                                "play_url": {
                                  "type": "string",
                                  "description": "The URL at which the recording file can be opened and played."
                                },
                                "download_url": {
                                  "type": "string",
                                  "description": "The URL at which to download the the recording. \n\n **JWT apps** \n\n To access a private or password-protected cloud recording of a user in your account, use a [Zoom JWT app](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app). Use the generated JWT token as the value of the access_token query parameter and include this query parameter at the end of the URL. \n\n https://{{base-domain}}/recording/download/{{path-to-file-download}}?access_token={{JWT-token}} \n\n **OAuth apps** \n\n If a user has authorized and installed your OAuth app that contains recording scopes, use the user's [OAuth access token](https://developers.zoom.us/docs/integrations/oauth/) to download the file. For example: \n\n https://{{base-domain}}/rec/archive/download/xxx?access_token={{OAuth-access-token}} \n\n **Note:** This field does **not** return for [Zoom On-Premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). Instead, this API will return the file_path field."
                                },
                                "file_path": {
                                  "type": "string",
                                  "description": "The file path to the On-Premise account recording. \n\n **Note:** This API returns this field for [Zoom On-Premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). It does **not** return the download_url field."
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The recording file's processing status: \n* completed — The processing of the file is complete. \n* processing — The file is processing.",
                                  "enum": [
                                    "completed",
                                    "processing"
                                  ]
                                },
                                "recording_type": {
                                  "type": "string",
                                  "description": "The type of recording file: \n* shared_screen_with_speaker_view(CC) \n* shared_screen_with_speaker_view \n* shared_screen_with_gallery_view \n* gallery_view \n* shared_screen \n* audio_only \n* audio_transcript \n* chat_file \n* active_speaker \n* host_video \n* audio_only_each_participant \n* cc_transcript \n* closed_caption \n* poll \n* timeline \n* thumbnail \n\nFor more information, read our [Managing and sharing cloud recordings](https://support.zoom.us/hc/en-us/articles/205347605-Managing-and-sharing-cloud-recordings#h_9898497b-e736-4980-a749-d55608f10773) documentation.",
                                  "enum": [
                                    "shared_screen_with_speaker_view(CC)",
                                    "shared_screen_with_speaker_view",
                                    "shared_screen_with_gallery_view",
                                    "gallery_view",
                                    "shared_screen",
                                    "audio_only",
                                    "audio_transcript",
                                    "chat_file",
                                    "active_speaker",
                                    "host_video",
                                    "audio_only_each_participant",
                                    "cc_transcript",
                                    "closed_caption",
                                    "poll",
                                    "timeline",
                                    "thumbnail"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "recording.transcript_completed",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": 1234567890,
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "account_id": "x1yCzABCDEfg23HiJKl4mN",
                        "host_email": "jchill@example.com",
                        "topic": "My Personal Recording",
                        "type": 4,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "password": "123456",
                        "duration": 60,
                        "share_url": "https://example.com",
                        "total_size": 529758,
                        "recording_count": 1,
                        "recording_files": [
                          {
                            "id": "ed6c2f27-2ae7-42f4-b3d0-835b493e4fa8",
                            "meeting_id": "098765ABCD",
                            "recording_start": "2021-03-23T22:14:57Z",
                            "recording_end": "2021-03-23T23:15:41Z",
                            "file_type": "TRANSCRIPT",
                            "file_size": 142,
                            "play_url": "https://example.com/recording/play/Qg75t7xZBtEbAkjdlgbfdngBBBB",
                            "download_url": "https://example.com/recording/download/Qg75t7xZBtEbAkjdlgbfdngBBBB",
                            "status": "completed",
                            "recording_type": "audio_transcript"
                          }
                        ]
                      }
                    },
                    "download_token": "abJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJodHRwczovL2V2ZW50Lnpvb20udXMiLCJhY2NvdW50SWQiOiJNdDZzdjR1MFRBeVBrd2dzTDJseGlBIiwiYXVkIjoiaHR0cHM6Ly9vYXV0aC56b29tLnVzIiwibWlkIjoieFp3SEc0c3BRU2VuekdZWG16dnpiUT09IiwiZXhwIjoxNjI2MTM5NTA3LCJ1c2VySWQiOiJEWUhyZHBqclMzdWFPZjdkUGtrZzh3In0.a6KetiC6BlkDhf1dP4KBGUE1bb2brMeraoD45yhFx0eSSSTFdkHQnsKmlJQ-hdo9Zy-4vQw3rOxlyoHv583JyZ"
                  }
                }
              }
            }
          }
        }
      }
    },
    "recording.stopped": {
      "post": {
        "tags": [
          "recording"
        ],
        "operationId": "recording.stopped",
        "requestBody": {
          "description": "# recording.stopped\n\nThe **Recording Stopped** event is triggered every time a recording is stopped by one of your app's users or account users.\n\nAll users with a Pro or a higher plan have access to [cloud recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording). An account owner or account admin can [enable cloud recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording#h_29fc1846-190d-4f05-ab23-1070c8106ec8) for all account members as well as for members that belong to a certain group. Users can also enable cloud recordings [for their own use](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording#h_4cca2458-cbd5-4439-933c-57c0d62a2753).\n\nOnly a host or a co-host of the meeting/webinar can start, pause, resume, or stop a [cloud recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording).\n\n## Prerequisites\n\n* A Pro or higher plan.\n* Cloud recording must be enabled on the users' account.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Recording Stopped** subscription must be enabled under the **Recording** event.\n\n\n\n**Event type**: `recording.stopped`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "recording.stopped"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user that stopped the meeting or webinar recording."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting or webinar recording.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "recording_file"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The ID of the recorded meeting (meetingId) or webinar (webinarId)."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The universally unique identifier (UUID) of the recorded meeting or webinar instance."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The ID of the user set as the host of the meeting or webinar."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting or webinar topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The type of recorded meeting or webinar: \n\n If the recording is of a meeting: \n* 1 — Instant meeting. \n* 2 — Scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A meeting created via PMI (Personal Meeting ID). \n* 7 — A [Personal Audio Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) (PAC). \n* 8 - Recurring meeting with a fixed time. \n\n If the recording is of a webinar: \n* 5 — A webinar. \n* 6 — A recurring webinar without a fixed time. \n* 9 — A recurring webinar with a fixed time. \n\n If the recording is **not** from a meeting or webinar: \n\n* 99 — A recording uploaded via the [**Recordings**](https://zoom.us/recording) interface on the Zoom Web Portal.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9,
                              99
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "description": "The meeting or webinar's start time.",
                            "anyOf": [
                              {
                                "format": "date-time"
                              },
                              {
                                "enum": [
                                  ""
                                ]
                              }
                            ]
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting or webinar's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The meeting or webinar's scheduled duration."
                          },
                          "recording_file": {
                            "description": "Information about the recording files.",
                            "type": "object",
                            "required": [
                              "recording_start",
                              "recording_end"
                            ],
                            "properties": {
                              "recording_start": {
                                "type": "string",
                                "description": "The date and time at which the recording started.",
                                "anyOf": [
                                  {
                                    "format": "date-time"
                                  },
                                  {
                                    "enum": [
                                      ""
                                    ]
                                  }
                                ]
                              },
                              "recording_end": {
                                "type": "string",
                                "description": "The date and time at which the recording ended.",
                                "anyOf": [
                                  {
                                    "format": "date-time"
                                  },
                                  {
                                    "enum": [
                                      ""
                                    ]
                                  }
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "recording.stopped",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": 1234567890,
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Personal Recording",
                        "type": 4,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "recording_file": {
                          "recording_start": "2021-03-23T22:14:57Z",
                          "recording_end": "2021-03-23T23:15:41Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "recording.batch_trashed": {
      "post": {
        "tags": [
          "recording"
        ],
        "operationId": "recording.batch_trashed",
        "requestBody": {
          "description": "# recording.batch_trashed\n\nThe **All recording files have been deleted to the Trash** event is triggered every time one of your app users or account users temporarily delete all of their cloud recordings.\n\nWhen a user initially deletes recordings, the recordings are sent to the trash. Users can delete a recording temporarily via the [**Delete meeting recordings**](/api-reference/zoom-api/ma#operation/recordingDelete) API or via the [**Zoom web client**](https://support.zoom.us/hc/en-us/articles/205347605-Recording-Management). At this point, recordings can be recovered up to 30 days after deletion.\n\n## Prerequisites\n\n* Pro or a higher plan.\n* Cloud recording must be enabled on the users' account.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n  * A valid **Event Notification Endpoint URL**.\n  * The **All recording files have been deleted to the Trash** subscription must be enabled under the **Recording** event.\n\n\n\n**Event type**: `recording.batch_trashed`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "recording.batch_trashed"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "operator",
                      "operator_id",
                      "operation"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who batch deleted recordings to trash."
                      },
                      "operator": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user who batch deleted recordings to trash."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who batch deleted recordings to trash."
                      },
                      "operation": {
                        "type": "string",
                        "description": "The type of batch operation: \n* trash_user_recordings — User recordings trashed. \n* trash_account_recordings — Account recordings trashed.",
                        "enum": [
                          "trash_user_recordings",
                          "trash_account_recordings"
                        ]
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the webinar or meeting recording.",
                        "required": [
                          "meeting_uuids"
                        ],
                        "properties": {
                          "meeting_uuids": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "A list of the recorded meeting (meetingId) or webinar (webinarId) UUIDs."
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "recording.batch_trashed",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "operator": "admin@example.com",
                      "operator_id": "I7zp-pYbTl22Z29H796Ixg",
                      "operation": "trash_user_recordings",
                      "object": {
                        "meeting_uuids": [
                          "atsXxhSEQWit9t+U02HXNQ==",
                          "3KvSP3SHRvyalrGRqZ5+2w=="
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "webinar.started": {
      "post": {
        "tags": [
          "webinar"
        ],
        "operationId": "webinar.started",
        "requestBody": {
          "description": "# webinar.started\n\nThe **Start Webinar** event is triggered every time a user in your account or your app starts a Webinar.\n\nZoom users with a [Webinar Plan](https://zoom.us/webinar) have permissions for creating and managing webinars. [Zoom Video Webinar](https://support.zoom.us/hc/en-us/articles/200917029-Getting-Started-With-Webinar) allows users to broadcast a Zoom meeting to up to 1000 attendees. A Webinar host can [start a Webinar](https://support.zoom.us/hc/en-us/articles/200917029-Getting-Started-With-Webinar#h_816c5048-c9d3-4930-894d-af63cd41de3d) from the Zoom Client or from the [Zoom Web Portal](https://zoom.us).\n\n## Prerequisites\n\n* Pro or a higher plan with Webinar license.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Start Webinar** subscription enabled under the **Webinar** event.\n\n\n\n**Event type**: `webinar.started`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "webinar.started"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who started the webinar."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the webinar.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "timezone",
                          "duration"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The webinar ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The webinar's universally unique identifier (UUID). Each webinar instance generates a webinar UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The webinar host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The webinar's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The webinar type: \n* 5 — A webinar. \n* 6 — A recurring webinar without a fixed time. \n* 9 — A recurring webinar with a fixed time.",
                            "enum": [
                              5,
                              6,
                              9
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The webinar's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The webinar's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled webinar duration."
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "webinar.started",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": "1234567890",
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Webinar",
                        "type": 9,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "webinar.sharing_ended": {
      "post": {
        "tags": [
          "webinar"
        ],
        "operationId": "webinar.sharing_ended",
        "requestBody": {
          "description": "# webinar.sharing_ended\n\nThe **Webinar Sharing Ended** event is triggered every time one of your app users or account users stop sharing their screen during a Webinar.\n\nZoom supports [screen sharing](https://support.zoom.us/hc/en-us/articles/201362153-Screen-Sharing-and-Annotations) by host or panelists on desktop, tablet and mobile devices running Zoom during webinars.\n\n## Prerequisites\n\n* Pro or a higher plan with Webinar license.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Webinar Sharing Ended** subscription enabled under the **Webinar** event.\n\n\n\n**Event type**: `webinar.sharing_ended`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "webinar.sharing_ended"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the webinar."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the webinar.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The webinar ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The webinar's universally unique identifier (UUID). Each webinar instance generates a webinar UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The webinar host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The webinar's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The webinar type: \n* 5 — A webinar. \n* 6 — A recurring webinar without a fixed time. \n* 9 — A recurring webinar with a fixed time.",
                            "enum": [
                              5,
                              6,
                              9
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "pattern": "(^\\s*$|^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$)",
                            "description": "The webinar's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The webinar's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled webinar duration."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the webinar participant.",
                            "required": [
                              "user_id",
                              "sharing_details"
                            ],
                            "properties": {
                              "user_id": {
                                "type": "string",
                                "description": "The participant's webinar user ID. This value is assigned to a participant upon joining a webinar and is only valid for the duration of the webinar."
                              },
                              "user_name": {
                                "type": "string",
                                "description": "The participant's display name."
                              },
                              "id": {
                                "type": "string",
                                "description": "The participant's universally unique ID (UUID): \n* If the participant joins the webinar by logging into Zoom, this value is the id value in the [**Get a user**](/api-reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the webinar **without** logging into Zoom, this returns an empty string value."
                              },
                              "sharing_details": {
                                "type": "object",
                                "description": "Information about the webinar's screenshare.",
                                "required": [
                                  "content",
                                  "link_source",
                                  "file_link",
                                  "date_time",
                                  "source"
                                ],
                                "properties": {
                                  "content": {
                                    "type": "string",
                                    "description": "The type of shared content: \n* application — An application. For example, a web browser. \n* whiteboard — The [classic whiteboard](https://support.zoom.us/hc/en-us/articles/205677665-Sharing-a-whiteboard). \n* desktop — A user's desktop. \n* airplay — A user's [AirPlay (Apple screen mirroring)](https://support.zoom.us/hc/en-us/articles/204726885-Sharing-screen-using-Apple-screen-mirroring-AirPlay-). \n* camera — A user's camera. \n* unknown — An unrecognized application, such as a third party app.",
                                    "enum": [
                                      "application",
                                      "whiteboard",
                                      "desktop",
                                      "airplay",
                                      "camera",
                                      "unknown"
                                    ]
                                  },
                                  "link_source": {
                                    "type": "string",
                                    "description": "The Dropbox sharing method: \n* deep_link — A [deep link](https://en.wikipedia.org/wiki/Deep_linking). \n* in_meeting — A link shared via Zoom. \n* An empty string value if the link source is **not** a Dropbox link.",
                                    "enum": [
                                      "",
                                      "deep_link",
                                      "in_meeting"
                                    ]
                                  },
                                  "file_link": {
                                    "type": "string",
                                    "description": "The Dropbox file's link. This field returns an empty string value if the file link is **not** from a Dropbox source."
                                  },
                                  "date_time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The screenshare's date and time."
                                  },
                                  "source": {
                                    "type": "string",
                                    "description": "The source from which the file was shared: \n* dropbox — A Dropbox source. \n* An empty string if the source is **not** Dropbox.",
                                    "enum": [
                                      "",
                                      "dropbox"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "webinar.sharing_ended",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": "1234567890",
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Webinar",
                        "type": 9,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "participant": {
                          "user_id": "ABCDE12345",
                          "user_name": "JillChill",
                          "sharing_details": {
                            "content": "application",
                            "link_source": "in_meeting",
                            "file_link": "",
                            "date_time": "2021-07-13T21:56:00Z",
                            "source": "dropbox"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.summary_trashed": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.summary_trashed",
        "requestBody": {
          "description": "# meeting.summary_trashed\nThe **Meeting summary has been deleted to trash** event is triggered every time one of your app users or account users temporarily deletes a meeting summary.\n\n## Prerequisites\n\n* Host user must be Pro or higher plan.\n* Enable the **Meeting Summary with AI Companion** feature in the host's account.\n* E2ee meetings do not have summary feature enabled.\n* Enable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Meeting summary has been deleted to trash** subscription enabled under the **Meeting** event.\n\n**Event type**: `meeting.summary_trashed`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The event's name.",
                    "enum": [
                      "meeting.summary_trashed"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "operator",
                      "operator_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who hosted the meeting."
                      },
                      "operator": {
                        "type": "string",
                        "description": "The email address of the user who deleted the meeting summary."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who deleted the meeting summary."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting summary.",
                        "required": [
                          "meeting_host_id",
                          "meeting_host_email",
                          "meeting_uuid",
                          "meeting_id",
                          "meeting_topic",
                          "meeting_start_time",
                          "meeting_end_time",
                          "summary_start_time",
                          "summary_end_time",
                          "summary_created_time",
                          "summary_last_modified_time",
                          "summary_title"
                        ],
                        "properties": {
                          "meeting_host_id": {
                            "type": "string",
                            "description": "The ID of the user who is set as the meeting host."
                          },
                          "meeting_host_email": {
                            "type": "string",
                            "format": "email",
                            "description": "The meeting host's email address."
                          },
                          "meeting_uuid": {
                            "type": "string",
                            "description": "Unique meeting ID. Each meeting instance generates its own meeting UUID - after a meeting ends, a new UUID is generated for the next instance of the meeting. Retrieve a list of UUIDs from past meeting instances using the [**List past meeting instances**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods/#operation/pastMeetings) API. [Double encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid) your UUID when using it for API calls if the UUID begins with a / or contains // in it.\n"
                          },
                          "meeting_id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-) - the meeting's unique identifier in **long** format, represented as int64 data type in JSON. Also known as the meeting number."
                          },
                          "meeting_topic": {
                            "type": "string",
                            "description": "Meeting topic."
                          },
                          "meeting_start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting's start date and time."
                          },
                          "meeting_end_time": {
                            "type": "string",
                            "description": "The meeting's end date and time.",
                            "format": "date-time",
                            "example": "2020-07-15T23:30:19Z"
                          },
                          "summary_start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The summary's start date and time."
                          },
                          "summary_end_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The summary's end date and time."
                          },
                          "summary_created_time": {
                            "type": "string",
                            "description": "The date and time when the meeting summary was created.",
                            "format": "date-time"
                          },
                          "summary_last_modified_time": {
                            "type": "string",
                            "description": "The date and time when the meeting summary was last modified.",
                            "format": "date-time"
                          },
                          "summary_title": {
                            "type": "string",
                            "description": "The summary title."
                          }
                        },
                        "additionalProperties": true
                      }
                    },
                    "additionalProperties": true
                  }
                },
                "additionalProperties": true
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.summary_trashed",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "dzVA4QmMQfyISoRcpFO8CA",
                      "operator": "admin@example.com",
                      "operator_id": "z8yCxjabcdEFGHfp8uQ",
                      "object": {
                        "meeting_host_id": "30R7kT7bTIKSNUFEuH_Qlg",
                        "meeting_host_email": "jchill@example.com",
                        "meeting_uuid": "aDYlohsHRtCd4ii1uC2+hA==",
                        "meeting_id": 97763643886,
                        "meeting_topic": "My Meeting",
                        "meeting_start_time": "2019-07-15T23:24:52Z",
                        "meeting_end_time": "2020-07-15T23:30:19Z",
                        "summary_start_time": "2019-07-15T23:24:52Z",
                        "summary_end_time": "2020-07-15T23:30:19Z",
                        "summary_created_time": "2019-07-15T23:24:52Z",
                        "summary_last_modified_time": "2020-07-15T23:30:19Z",
                        "summary_title": "Meeting Summary for my meeting"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "webinar.deleted": {
      "post": {
        "tags": [
          "webinar"
        ],
        "operationId": "webinar.deleted",
        "requestBody": {
          "description": "# webinar.deleted\n\nThe **Webinar has been deleted** event is triggered every time a webinar scheduled by one of your app users or account users, is deleted.\n\nA webinar host or a user with admin privileges can delete a scheduled webinar. Users can delete a webinar using the **Delete** feature for a webinar, from the [Zoom Web Portal](https://zoom.us/webinar/list) or the Zoom Client App. Alternatively, users can use the [**Delete a webinar**](/docs/api-reference/zoom-api/methods#operation/webinarDelete) API to delete webinars programmatically.\n\n## **Prerequisites**:\n* Pro or a higher plan with Webinar license.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Webinar has been deleted** subscription enabled under the **Webinar** event.\n\n\n\n**Event type**: `webinar.deleted`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "webinar.deleted"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "operator",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who deleted the webinar."
                      },
                      "operator": {
                        "type": "string",
                        "description": "The email address of the user who deleted the webinar."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who deleted the webinar."
                      },
                      "operation": {
                        "type": "string",
                        "description": "The type of operation performed: \n* all — The change was applied to all webinars. \n* single — The change was applied only to a single webinar.",
                        "enum": [
                          "all",
                          "single"
                        ]
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the webinar.",
                        "required": [
                          "uuid",
                          "id",
                          "host_id",
                          "type"
                        ],
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "description": "The webinar's universally unique identifier (UUID). Each webinar instance generates a webinar UUID."
                          },
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The webinar ID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The webinar host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The webinar's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The webinar type: \n* 5 — A webinar. \n* 6 — A recurring webinar without a fixed time. \n* 9 — A recurring webinar with a fixed time.",
                            "enum": [
                              5,
                              6,
                              9
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The webinar's start time."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled webinar duration."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The webinar's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "occurrences": {
                            "type": "array",
                            "description": "Information about recurring webinars with fixed times and their occurrences. This only returns when the webinar's type value is 9.",
                            "additionalItems": true,
                            "items": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "occurrence_id",
                                    "start_time"
                                  ],
                                  "properties": {
                                    "occurrence_id": {
                                      "type": "string",
                                      "description": "The webinar occurrence's ID."
                                    },
                                    "start_time": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The webinar's start time."
                                    }
                                  },
                                  "additionalProperties": true
                                }
                              ]
                            }
                          }
                        },
                        "additionalProperties": true
                      }
                    },
                    "additionalProperties": true
                  }
                },
                "additionalProperties": true
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "webinar.deleted",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "operator": "admin@example.com",
                      "operator_id": "z8yCxjabcdEFGHfp8uQ",
                      "operation": "single",
                      "object": {
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "id": 1234567890,
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Webinar",
                        "type": 9,
                        "start_time": "2021-07-13T21:44:51Z",
                        "duration": 60,
                        "timezone": "America/Los_Angeles",
                        "occurrences": [
                          {
                            "occurrence_id": "ABCDE12345",
                            "start_time": "2021-07-13T21:44:51Z"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "recording.registration_approved": {
      "post": {
        "tags": [
          "recording"
        ],
        "operationId": "recording.registration_approved",
        "requestBody": {
          "description": "# recording.registration_approved\n\nThe **View registrant has approved for this recording** event is triggered every time a registrant is approved to view a cloud recording.\n\n[Cloud recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording) of Zoom meetings and webinars can be made [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings). With on-demand recordings, users can view the recordings of past meetings and webinars at any time as long as they have not been removed. To view these recordings, users can register manually by filling out the registration form that pops up when users click on the **Recording URL**. After the registration, registrants that are approved will be able to view the recording.\n\nAn account owner, a host of the meeting/webinar or a user with admin privileges can customize the cloud recording [registration approval settings](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings). If the **Automatically Approve** setting is enabled, registrants can view the recording automatically after a successful registration. If the **Manually Approve** setting is enabled, the registrants must be manually approved before they can view the recording.\n\nRegistrants can also be approved programmatically using the [**Update registrant status**](/api-reference/zoom-api/ma#operation/meetingRecordingRegistrantStatus) API.\n\n## Prerequisites\n\n* A Pro or higher plan.\n* Cloud recording must be enabled on the users' account.\n* The [approval setting](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings) for the cloud recording registration must be set to **Manually Approve**.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **View registrant has approved for this recording** subscription enabled under the **Recording** event.\n\n\n\n**Event type**: `recording.registration_approved`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "recording.registration_approved"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "operator",
                      "operator_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the host that recorded the meeting or webinar."
                      },
                      "operator": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user that approved registration for the meeting or webinar recording."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user that approved registration for the meeting or webinar recording."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the recording registration.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "registrant"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The ID of the recorded meeting (meetingId) or webinar (webinarId)."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The universally unique identifier (UUID) of the recorded meeting or webinar instance."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The ID of the user set as the host of the meeting or webinar."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting or webinar topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The type of recorded meeting or webinar: \n\n If the recording is of a meeting: \n* 1 — Instant meeting. \n* 2 — Scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A meeting created via PMI (Personal Meeting ID). \n* 7 — A [Personal Audio Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) (PAC). \n* 8 - Recurring meeting with a fixed time. \n\n If the recording is of a webinar: \n* 5 — A webinar. \n* 6 — A recurring webinar without a fixed time. \n* 9 — A recurring webinar with a fixed time. \n\n If the recording is **not** from a meeting or webinar: \n\n* 99 — A recording uploaded via the [**Recordings**](https://zoom.us/recording) interface on the Zoom Web Portal.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9,
                              99
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting or webinar's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting or webinar's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The meeting or webinar's scheduled duration."
                          },
                          "registrant": {
                            "type": "object",
                            "description": "Information about the recording registrant.",
                            "required": [
                              "email",
                              "first_name",
                              "last_name"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The registrant's ID."
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "description": "The registrant's email address."
                              },
                              "first_name": {
                                "type": "string",
                                "description": "The registrant's first name."
                              },
                              "last_name": {
                                "type": "string",
                                "description": "The registrant's last name."
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "recording.registration_approved",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "operator": "admin@example.com",
                      "operator_id": "I7zp-pYbTl22Z29H796Ixg",
                      "object": {
                        "id": 1234567890,
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Personal Recording",
                        "type": 4,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "occurrences": {
                          "occurrence_id": "ABCDE12345",
                          "start_time": "2021-07-13T21:44:51Z"
                        },
                        "registrant": {
                          "id": "iFxeBPYun6SAiWUzBcEkX",
                          "email": "jchill@example.com",
                          "first_name": "Jill",
                          "last_name": "Chill"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.sharing_started": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.sharing_started",
        "requestBody": {
          "description": "# meeting.sharing_started\n\nThe **Meeting Sharing Started** event is triggered every time an attendee or a host begins sharing their screen during a Zoom meeting. The meeting host must be a user in your account or a user in any other accounts that have installed your [webhook-enabled](https://marketplace.zoom.us/docs/api-reference/webhook-reference#enable-webhooks) app.\n\nZoom allows [screen sharing](https://support.zoom.us/hc/en-us/articles/201362153-Screen-Sharing-and-Annotations) by host and attendees on desktop, tablet, and mobile devices running Zoom during meetings.\n\n## Prerequisites\n\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Meeting Sharing Started** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.sharing_started`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.sharing_started"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the meeting."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The meeting type: \n* 0 — A prescheduled meeting. \n* 1 — An instant meeting. \n* 2 — A scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 — A [PAC (Personal Audio Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 — A recurring meeting with a fixed time.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "pattern": "(^\\s*$|^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$)",
                            "description": "The meeting's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled meeting duration."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the meeting participant.",
                            "required": [
                              "user_id",
                              "sharing_details"
                            ],
                            "properties": {
                              "user_id": {
                                "type": "string",
                                "description": "The participant's meeting user ID. This value is assigned to a participant upon joining a meeting and is only valid for the duration of the meeting."
                              },
                              "user_name": {
                                "type": "string",
                                "description": "The participant's display name."
                              },
                              "id": {
                                "type": "string",
                                "description": "The participant's universally unique ID (UUID): \n* If the participant joins the meeting by logging into Zoom, this value is the id value in the [**Get a user**](/api-reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the meeting **without** logging into Zoom, this returns an empty string value."
                              },
                              "sharing_details": {
                                "type": "object",
                                "description": "Information about the meeting's screenshare.",
                                "required": [
                                  "content",
                                  "link_source",
                                  "file_link",
                                  "date_time",
                                  "source"
                                ],
                                "properties": {
                                  "content": {
                                    "type": "string",
                                    "description": "The type of shared content: \n* application — An application. For example, a web browser. \n* whiteboard — The [classic whiteboard](https://support.zoom.us/hc/en-us/articles/205677665-Sharing-a-whiteboard). \n* desktop — A user's desktop. \n* airplay — A user's [AirPlay (Apple screen mirroring)](https://support.zoom.us/hc/en-us/articles/204726885-Sharing-screen-using-Apple-screen-mirroring-AirPlay-). \n* camera — A user's camera. \n* unknown — An unrecognized application, such as a third party app.",
                                    "enum": [
                                      "application",
                                      "whiteboard",
                                      "desktop",
                                      "airplay",
                                      "camera",
                                      "unknown"
                                    ]
                                  },
                                  "link_source": {
                                    "type": "string",
                                    "description": "The Dropbox sharing method: \n* deep_link — A [deep link](https://en.wikipedia.org/wiki/Deep_linking). \n* in_meeting — A link shared via Zoom. \n* An empty (””) value if the link source is **not** a Dropbox link.",
                                    "enum": [
                                      "",
                                      "deep_link",
                                      "in_meeting"
                                    ]
                                  },
                                  "file_link": {
                                    "type": "string",
                                    "description": "The Dropbox file's link. This field returns an empty (””) value if the file link is **not** from a Dropbox source."
                                  },
                                  "date_time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The screenshare's date and time."
                                  },
                                  "source": {
                                    "type": "string",
                                    "description": "The source from which the file was shared: \n* dropbox — A Dropbox source. \n* An empty (””) value if the source is **not** Dropbox.",
                                    "enum": [
                                      "",
                                      "dropbox"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.sharing_started",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": "1234567890",
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 8,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "participant": {
                          "user_id": "ABCDE12345",
                          "user_name": "JillChill",
                          "id": "iFxeBPYun6SAiWUzBcEkX",
                          "sharing_details": {
                            "content": "application",
                            "link_source": "in_meeting",
                            "file_link": "",
                            "date_time": "2021-07-13T21:55:52Z",
                            "source": "dropbox"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "webinar.registration_created": {
      "post": {
        "tags": [
          "webinar"
        ],
        "operationId": "webinar.registration_created",
        "requestBody": {
          "description": "# webinar.registration_created\n\nThe **Webinar Registration has been created** event is triggered every time someone registers for a Webinar created by one of your app users or account users.\n\nZoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing Webinars. [Zoom Video Webinar](https://support.zoom.us/hc/en-us/articles/200917029-Getting-Started-With-Webinar) allows users to broadcast a Zoom meeting to up to 1000 attendees. [Scheduling a Webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires your registrants to complete a brief form before receiving the link to join the Webinar.\n\n## Prerequisites\n\n* Pro or a higher plan with Webinar license.\n* **Event Subscriptions** must be enabled for your [Marketplace App](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event notification endpoint URL**\n\t* The **Webinar Registration has been created** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `webinar.registration_created`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "webinar.registration_created"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the webinar."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the webinar registration.",
                        "required": [
                          "uuid",
                          "id",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "timezone",
                          "registrant"
                        ],
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "description": "The webinar's universally unique identifier (UUID). Each webinar instance generates a webinar UUID."
                          },
                          "id": {
                            "type": "integer",
                            "description": "The webinar ID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The webinar host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The webinar's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The webinar type: \n* 5 — A webinar. \n* 6 — A recurring webinar without a fixed time. \n* 9 — A recurring webinar with a fixed time.",
                            "enum": [
                              5,
                              6,
                              9
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The webinar's start time."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled webinar duration."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The webinar's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "occurrences": {
                            "type": "array",
                            "description": "Information about recurring webinar with fixed times and their occurrences. This only returns when the webinar's type value is 9.",
                            "additionalItems": true,
                            "items": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "occurrence_id",
                                    "start_time"
                                  ],
                                  "properties": {
                                    "occurrence_id": {
                                      "type": "string",
                                      "description": "The webinar occurrence's ID."
                                    },
                                    "start_time": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The webinar's start time."
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              ]
                            }
                          },
                          "registrant": {
                            "type": "object",
                            "description": "Information about the webinar registrant.",
                            "required": [
                              "id",
                              "first_name",
                              "email",
                              "status",
                              "join_url"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The registrant's ID."
                              },
                              "first_name": {
                                "type": "string",
                                "description": "The registrant's first name."
                              },
                              "last_name": {
                                "type": "string",
                                "description": "The registrant's last name."
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "description": "The registrant's email address."
                              },
                              "address": {
                                "type": "string",
                                "description": "The registrant's address."
                              },
                              "city": {
                                "type": "string",
                                "description": "The registrant's city."
                              },
                              "country": {
                                "type": "string",
                                "description": "The registrant's two-letter [country code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries)."
                              },
                              "zip": {
                                "type": "string",
                                "description": "The registrant's ZIP or postal code."
                              },
                              "state": {
                                "type": "string",
                                "description": "The registrant's state or province."
                              },
                              "phone": {
                                "type": "string",
                                "description": "The registrant's phone number."
                              },
                              "industry": {
                                "type": "string",
                                "description": "The registrant's industry."
                              },
                              "org": {
                                "type": "string",
                                "description": "The registrant's organization."
                              },
                              "job_title": {
                                "type": "string",
                                "description": "The registrant's job title."
                              },
                              "purchasing_time_frame": {
                                "type": "string",
                                "description": "The registrant's purchasing time frame: \n* Within a month \n* 1-3 months \n* 4-6 months \n* More than 6 months \n* No timeframe",
                                "enum": [
                                  "",
                                  "Within a month",
                                  "1-3 months",
                                  "4-6 months",
                                  "More than 6 months",
                                  "No timeframe"
                                ]
                              },
                              "role_in_purchase_process": {
                                "type": "string",
                                "description": "The registrant's role in the purchase process: \n* Decision Maker \n* Evaluator/Recommender \n* Influencer \n* Not involved",
                                "enum": [
                                  "",
                                  "Decision Maker",
                                  "Evaluator/Recommender",
                                  "Influencer",
                                  "Not involved"
                                ]
                              },
                              "no_of_employees": {
                                "type": "string",
                                "description": "The registrant's number of employees: \n* 1-20 \n* 21-50 \n* 51-100 \n* 101-250 \n* 251-500 \n* 501-1,000 \n* 1,001-5,000 \n* 5,001-10,000 \n* More than 10,000",
                                "enum": [
                                  "",
                                  "1-20",
                                  "21-50",
                                  "51-100",
                                  "101-250",
                                  "251-500",
                                  "501-1,000",
                                  "1,001-5,000",
                                  "5,001-10,000",
                                  "More than 10,000"
                                ]
                              },
                              "comments": {
                                "type": "string",
                                "description": "The registrant's questions and comments."
                              },
                              "custom_questions": {
                                "type": "array",
                                "description": "Information about custom questions.",
                                "additionalItems": true,
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "title",
                                        "value"
                                      ],
                                      "properties": {
                                        "title": {
                                          "type": "string",
                                          "description": "The title of the custom question."
                                        },
                                        "value": {
                                          "type": "string",
                                          "maxLength": 128,
                                          "description": "The custom question's response value. This has a limit of 128 characters."
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  ]
                                }
                              },
                              "status": {
                                "type": "string",
                                "description": "The registrant's registration approval status: \n* approve — Approved registrant. \n* pending — Registration approval pending.",
                                "enum": [
                                  "approved",
                                  "pending"
                                ]
                              },
                              "join_url": {
                                "type": "string",
                                "description": "The URL to join the webinar."
                              },
                              "tracking_source": {
                                "type": "object",
                                "description": "Information about the source tracking. See [Creating webinar registration tracking links](https://support.zoom.us/hc/en-us/articles/360000315683-Creating-webinar-registration-tracking-links) for details.",
                                "required": [
                                  "id",
                                  "source_name",
                                  "tracking_url"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Unique Identifier of the tracking source."
                                  },
                                  "source_name": {
                                    "type": "string",
                                    "description": "Name of the source (platform) where the registration URL was shared."
                                  },
                                  "tracking_url": {
                                    "type": "string",
                                    "description": "Tracking URL. The URL that was shared for the registration."
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "webinar.registration_created",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "id": 1234567890,
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Webinar",
                        "type": 9,
                        "start_time": "2021-07-13T21:44:51Z",
                        "duration": 60,
                        "timezone": "America/Los_Angeles",
                        "occurrences": [
                          {
                            "occurrence_id": "ABCDE12345",
                            "start_time": "2021-07-13T21:44:51Z"
                          }
                        ],
                        "registrant": {
                          "id": "iFxeBPYun6SAiWUzBcEkX",
                          "first_name": "Jill",
                          "last_name": "Chill",
                          "email": "jchill@example.com",
                          "address": "1800 Amphibious Blvd.",
                          "city": "Mountain View",
                          "country": "US",
                          "zip": "94045",
                          "state": "CA",
                          "phone": "5550100",
                          "industry": "Food",
                          "org": "Cooking Org",
                          "job_title": "Chef",
                          "purchasing_time_frame": "1-3 months",
                          "role_in_purchase_process": "Influencer",
                          "no_of_employees": "1-20",
                          "comments": "Looking forward to the Webinar",
                          "custom_questions": [
                            {
                              "title": "What do you hope to learn from this Webinar?",
                              "value": "Look forward to learning how you come up with new recipes and what other services you offer."
                            }
                          ],
                          "status": "approved",
                          "join_url": "https://example.com",
                          "tracking_source": {
                            "id": "5516482804110",
                            "source_name": "general",
                            "tracking_url": "https://example.com/webinar/register/5516482804110/WN_juM2BGyLQMyQ_ZrqiGRhLg"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.chat_message_sent": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.chat_message_sent",
        "requestBody": {
          "description": "# meeting.chat_message_sent\nThe **In-meeting chat message received** event is triggered when a user sends a public or private chat message during a meeting using the [in-meeting Zoom chat feature](https://support.zoom.us/hc/en-us/articles/203650445-Chatting-in-a-Zoom-meeting). The event is sent to the configured endpoint in your Marketplace app.\n\n## Prerequisites\n\n* Have Zoom enable the DLP for in-meeting chat feature to use this webhook.\n* Enable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with:\n  * Enable the **In-meeting chat message received** subscription under the **Meeting** event category.\n* This feature is **only** enabled upon request approval. Contact the [Zoom support team](https://support.zoom.us/hc/en-us/articles/201362003) for more information.\n\n\n\n**Event type**: `meeting.chat_message_sent`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.chat_message_sent"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the meeting."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the chat message.",
                        "required": [
                          "id",
                          "uuid",
                          "chat_message"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "chat_message": {
                            "type": "object",
                            "description": "Information about the chat message.",
                            "required": [
                              "date_time",
                              "sender_session_id",
                              "sender_name",
                              "sender_type",
                              "recipient_type",
                              "message_id",
                              "message_content"
                            ],
                            "properties": {
                              "date_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time when the chat message was sent."
                              },
                              "sender_session_id": {
                                "type": "string",
                                "description": "The message sender's session ID."
                              },
                              "sender_name": {
                                "type": "string",
                                "description": "The message sender's name."
                              },
                              "sender_email": {
                                "type": "string",
                                "format": "email",
                                "description": "The message sender's email address."
                              },
                              "sender_type": {
                                "type": "string",
                                "description": "The type of user that sent the message: \n* host — The meeting host. \n* guest — A meeting guest.",
                                "enum": [
                                  "host",
                                  "guest"
                                ]
                              },
                              "recipient_session_id": {
                                "type": "string",
                                "description": "The message recipient's session ID."
                              },
                              "recipient_name": {
                                "type": "string",
                                "description": "The message recipient's name."
                              },
                              "recipient_email": {
                                "type": "string",
                                "format": "email",
                                "description": "The message recipient's email address. Optional only included if it is a private message."
                              },
                              "recipient_type": {
                                "type": "string",
                                "description": "The type of message recipient: \n* host — The meeting host. \n* guest — A meeting guest.",
                                "enum": [
                                  "everyone",
                                  "host",
                                  "guest"
                                ]
                              },
                              "message_id": {
                                "type": "string",
                                "description": "The chat message's UUID."
                              },
                              "message_content": {
                                "type": "string",
                                "description": "The content of the chat message."
                              },
                              "file_ids": {
                                "type": "array",
                                "description": "The live webinar chat file's UUID, in base64-encoded format.",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.chat_message_sent",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": 1234567890,
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "chat_message": {
                          "date_time": "GMT20220110-072010",
                          "sender_session_id": "26219520",
                          "sender_name": "Jill Chill",
                          "sender_email": "dlp.user@example.com",
                          "sender_type": "host",
                          "recipient_session_id": "38681600",
                          "recipient_name": "John Smith",
                          "recipient_email": "guest.user@example",
                          "recipient_type": "guest",
                          "message_id": "MS17MDQ5NjE4QjYtRjk4Ny00REEwLUFBQUItMTg3QTY0RjU2MzhFfQ==",
                          "message_content": "This is a test message",
                          "file_ids": [
                            "MS17RDk0QTY3QUQtQkFGQy04QTJFLTI2RUEtNkYxQjRBRTU1MTk5fQ==",
                            "MS17NDQ0OEU5MjMtM0JFOS1CMDA1LTQ0NDAtQjdGOTU0Rjk5MTkyfQ=="
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.participant_role_changed": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.participant_role_changed",
        "requestBody": {
          "description": "# meeting.participant_role_changed\n\nThe **Participant role changed** event is triggered every time a host or meeting attendee changes their [role](https://support.zoom.us/hc/en-us/articles/360040324512-Roles-in-a-meeting) during the meeting. A meeting host must be a user in your account or a user in any other accounts that have installed your [webhook-enabled](https://marketplace.zoom.us/docs/api-reference/webhook-reference#enable-webhooks) app.\n\n## Prerequisites\n\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Participant role changed** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.participant_role_changed`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The event's name.",
                    "enum": [
                      "meeting.participant_role_changed"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the meeting."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "uuid",
                          "host_id",
                          "type",
                          "duration",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The meeting type. \n* 0 - A prescheduled meeting. \n* 1 - An instant meeting. \n* 2 - A scheduled meeting. \n* 3 - A recurring meeting with no fixed time. \n* 4 - A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 - A [PAC (personal audio conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 - A recurring meeting with a fixed time.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "pattern": "(^\\s*$|^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$)",
                            "description": "The meeting's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting's [timezone](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled meeting duration."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the meeting participant.",
                            "required": [
                              "user_id",
                              "user_name",
                              "email",
                              "date_time",
                              "old_role",
                              "new_role"
                            ],
                            "properties": {
                              "user_id": {
                                "type": "string",
                                "description": "The participant's meeting user ID. This value is assigned to a participant when they join a meeting, and is only valid for the duration of the meeting."
                              },
                              "user_name": {
                                "type": "string",
                                "description": "The participant's display name."
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "description": "The participant's email address. This response only returns if the participant joined the meeting by logging into Zoom. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. For more information, read our [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) documentation."
                              },
                              "registrant_id": {
                                "type": "string",
                                "description": "The participant's registrant ID. A host or a user with administrative permissions can require [registration for Zoom meetings](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0065026)."
                              },
                              "participant_user_id": {
                                "type": "string",
                                "description": "The participant's universally unique ID (UUID).\n* If the participant joins the meeting by logging into Zoom, this value is the id value in the [**Get a user**](/api-reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the meeting **without** logging into Zoom, this returns an empty string value.\n\nThis value returns blank for external users."
                              },
                              "participant_uuid": {
                                "type": "string",
                                "description": "The participant's UUID for this specific meeting and any breakout rooms created in this meeting. This value is assigned to a participant when they join a meeting, and is only valid for the duration of that meeting."
                              },
                              "date_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time at which the participant changed the [role](https://support.zoom.us/hc/en-us/articles/360040324512-Roles-in-a-meeting)."
                              },
                              "old_role": {
                                "type": "string",
                                "description": "The participant's previous role: \n* host — Host. \n* co-host — Co-host. \n* attendee — Attendee.",
                                "enum": [
                                  "host",
                                  "co-host",
                                  "attendee"
                                ]
                              },
                              "new_role": {
                                "type": "string",
                                "description": "The participant's new role: \n* host — Host. \n* co-host — Co-host. \n* attendee — Attendee.",
                                "enum": [
                                  "host",
                                  "co-host",
                                  "attendee"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.participant_role_changed",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": "1234567890",
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 8,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "participant": {
                          "user_id": "1234567890",
                          "participant_uuid": "55555AAAiAAAAAiAiAiiAii",
                          "user_name": "JillChill",
                          "email": "jchill@example.com",
                          "registrant_id": "abcdefghij0-klmnopq23456",
                          "participant_user_id": "rstuvwxyza789-cde",
                          "date_time": "2021-07-13T21:44:51Z",
                          "old_role": "host",
                          "new_role": "co-host"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.risk_alert": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.risk_alert",
        "requestBody": {
          "description": "# meeting.risk_alert\n\nThe **At-Risk Meeting Notifier** event is triggered every time someone posts a Zoom meeting link to a social media account, such as Reddit or Twitter. The webhook sends the event to an authorized [OAuth app](https://marketplace.zoom.us/docs/api-reference/webhook-reference#oauth-app).\n\nThe [**At-Risk Meeting Notifier (ARMN)**](https://support.zoom.us/hc/en-us/articles/360052087972-At-Risk-Meeting-Notifier) scans public posts on social media sites and other public online resources for Zoom meeting links. When it finds publicly-posted meeting information indicating that a given meeting may be at high risk of being disrupted, Zoom notifies account owners and admins via email.\n\n## Prerequisites\n\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **At-Risk Meeting Notifier** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.risk_alert`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.risk_alert"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the meeting."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "host_email",
                          "type",
                          "armn_details"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "host_email": {
                            "type": "string",
                            "format": "email",
                            "description": "The meeting host's email address."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The meeting type: \n* 0 — A prescheduled meeting. \n* 1 — An instant meeting. \n* 2 — A scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 — A [PAC (Personal Audio Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 — A recurring meeting with a fixed time.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "armn_details": {
                            "type": "object",
                            "description": "Information about the at-risk meeting notifier (ARMN).",
                            "properties": {
                              "post_platform": {
                                "type": "string",
                                "description": "The post's social media platform. For example, Twitter, Reddit, or Facebook."
                              },
                              "social_link": {
                                "type": "string",
                                "description": "The link to the social media post."
                              },
                              "post_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The post's timestamp."
                              },
                              "post_user": {
                                "type": "string",
                                "description": "The user who created the social media post."
                              },
                              "meeting_url": {
                                "type": "string",
                                "description": "The meeting's URL."
                              },
                              "recommended_enable_settings": {
                                "type": "array",
                                "description": "A comma-separated list of the recommended settings to enable: \n* enablePassword \n* enableWaitingRoom \n* enableOnlyAuthenticated \n* enableRegistration \n* enableScreenShareLock \n* enableScreenShareHostOnly \n* enableSpecifiedDomain",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "enablePassword",
                                    "enableWaitingRoom",
                                    "enableOnlyAuthenticated",
                                    "enableRegistration",
                                    "enableScreenShareLock",
                                    "enableScreenShareHostOnly",
                                    "enableSpecifiedDomain"
                                  ]
                                }
                              },
                              "recommended_disable_settings": {
                                "type": "array",
                                "description": "A comma-separated list of the recommended settings to disable: \n* enableAnnotation \n* enableMeetingChat \n* enableScreenShare \n* enableMultipleShare",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "enableAnnotation",
                                    "enableMeetingChat",
                                    "enableScreenShare",
                                    "enableMultipleShare"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": true
                          }
                        },
                        "additionalProperties": true
                      }
                    },
                    "additionalProperties": true
                  }
                },
                "additionalProperties": true
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.risk_alert",
                    "event_ts": 1620872887470,
                    "payload": {
                      "account_id": "XTYf8rirS_W0emt2TlxsYQ",
                      "object": {
                        "id": 1234567890,
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "host_email": "jchill@example.com",
                        "topic": "My Meeting",
                        "type": 2,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "armn_details": {
                          "post_platform": "twitter",
                          "social_link": "https://example.com/user/status/1372556404872069120",
                          "post_time": "2021-05-15T02:28:00Z",
                          "post_user": "user",
                          "meeting_url": "https://example.com/j/82390661051",
                          "recommended_enable_settings": [
                            "enablePassword",
                            "enableWaitingRoom"
                          ],
                          "recommended_disable_settings": [
                            "enableScreenShareHostOnly",
                            "enableMeetingChat"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.permanently_deleted": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.permanently_deleted",
        "requestBody": {
          "description": "# meeting.permanently_deleted\n\nThe **Meeting has been permanently deleted** event is triggered every time a meeting scheduled by one of your app users or account users, is permanently deleted.\n\nA meeting host or a user with admin privileges [permanently delete a meeting](https://support.zoom.us/hc/en-us/articles/360048488451-Deleting-local-or-cloud-recordings#h_b35c92a6-ec9e-4025-ab77-f0b52168aed2) via the [Zoom web portal](https://zoom.us). You can also programmatically delete a meet via the [**Delete a meeting**](/docs/api-reference/zoom-api/methods#operation/meetingDelete) API.\n\n## Prerequisites\n\n* A Pro or higher plan.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Meeting has been permanently deleted** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.permanently_deleted`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.permanently_deleted"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "operator",
                      "operator_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who permanently deleted the meeting."
                      },
                      "operator": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user who permanently deleted the meeting."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who permanently deleted the meeting."
                      },
                      "operation": {
                        "type": "string",
                        "description": "The type of operation performed: \n* all — The change was applied to all meetings. \n* single — The change was applied only to a single meeting.",
                        "enum": [
                          "all",
                          "single"
                        ]
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "uuid",
                          "id",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "timezone"
                        ],
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The meeting ID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The meeting type: \n* 0 — A prescheduled meeting. \n* 1 — An instant meeting. \n* 2 — A scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 — A [PAC (Personal Audio Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 — A recurring meeting with a fixed time.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting's start time."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled meeting duration."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "occurrences": {
                            "type": "array",
                            "description": "Information about recurring meetings with fixed times and their occurrences. This only returns when the meeting's type value is 8.",
                            "additionalItems": true,
                            "items": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "occurrence_id",
                                    "start_time"
                                  ],
                                  "properties": {
                                    "occurrence_id": {
                                      "type": "string",
                                      "description": "The meeting occurrence's ID."
                                    },
                                    "start_time": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The meeting's start time."
                                    }
                                  },
                                  "additionalProperties": true
                                }
                              ]
                            }
                          }
                        },
                        "additionalProperties": true
                      }
                    },
                    "additionalProperties": true
                  }
                },
                "additionalProperties": true
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.permanently_deleted",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "operator": "admin@example.com",
                      "operator_id": "z8yCxjabcdEFGHfp8uQ",
                      "operation": "single",
                      "object": {
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "id": 1234567890,
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 8,
                        "start_time": "2021-07-13T21:44:51Z",
                        "duration": 60,
                        "timezone": "America/Los_Angeles",
                        "occurrences": [
                          {
                            "occurrence_id": "ABCDE12345",
                            "start_time": "2021-07-13T21:44:51Z"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "webinar.participant_feedback": {
      "post": {
        "tags": [
          "webinar"
        ],
        "operationId": "webinar.participant_feedback",
        "requestBody": {
          "description": "# webinar.participant_feedback\n\nThe **Get participant survey feedback for webinars** event is triggered every time an attendee completes an end-of-webinar [feedback survey](https://support.zoom.us/hc/en-us/articles/115005855266-End-of-meeting-experience-feedback-survey) for a webinar. A webinar attendee is a webinar participant or the host.\n\n## Prerequisites\n\nEnable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with:\n* A valid **Event Notification Endpoint URL**.\n* The **Get participant survey feedback for webinars** subscription must be enabled under the **Webinar** event.\n\n\n\n**Event type**: `webinar.participant_feedback`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "webinar.participant_feedback"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who commits the feedback."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the webinar.",
                        "required": [
                          "id",
                          "uuid",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The webinar ID. "
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The webinar's universally unique identifier (UUID). Each webinar instance generates a webinar UUID."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the webinar participant.",
                            "required": [
                              "participant_uuid",
                              "participant_user_id",
                              "user_name",
                              "feedback"
                            ],
                            "properties": {
                              "participant_uuid": {
                                "type": "string",
                                "description": "The participant's meeting universally unique ID (UUID). This value is assigned to a participant when they join a meeting, and is only valid for the duration of the meeting. This value will not be changed when the participant joins/leaves a breakout room."
                              },
                              "participant_user_id": {
                                "type": "string",
                                "description": "The participant's universally unique ID (UUID). This value returns blank for external users."
                              },
                              "user_name": {
                                "type": "string",
                                "description": "The participant's display name."
                              },
                              "feedback": {
                                "type": "object",
                                "description": "Information about the feedback.",
                                "required": [
                                  "satisfied"
                                ],
                                "properties": {
                                  "satisfied": {
                                    "type": "boolean",
                                    "description": "Whether the participant is satisfied."
                                  },
                                  "feedback_details": {
                                    "type": "array",
                                    "description": "The feedback details. This returns null if the satisfied field is true.",
                                    "additionalItems": false,
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "name"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "The feedback ID. \n* 1 — Poor video quality. \n* 2 — Poor audio quality. \n* 5 — Unable to present using share.zoom.us. \n* 7 — Unable to make phone call. \n* 8 — They could not hear us. \n* 9 — We could not hear them. \n* 10 — They could not see us. \n* 11 — We could not see them. \n* 12 — Could not present computer screen. \n* 999 — Others."
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The feedback name."
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "comments": {
                                    "type": "string",
                                    "description": "The participant's comments. This returns null if the satisfied field is true."
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "webinar.participant_feedback",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "q6gBJVO5TzexKYTb_I2rpg",
                      "object": {
                        "id": "7357282288",
                        "uuid": "0AErJTQBTI2bSXKyAxIq5A==",
                        "participant": {
                          "participant_uuid": "I2rpg_q6gBJVO5TzexKYTb",
                          "participant_user_id": "zJKyaiAyTNC-MWjiWC18KQ",
                          "user_name": "jchill",
                          "feedback": {
                            "satisfied": true,
                            "feedback_details": [
                              {
                                "id": "2",
                                "name": "Poor audio quality"
                              }
                            ],
                            "comments": "good enough"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "recording.registration_created": {
      "post": {
        "tags": [
          "recording"
        ],
        "operationId": "recording.registration_created",
        "requestBody": {
          "description": "# recording.registration_created\n\nThe **View registrant has registered for this recording** event is triggered every time a user registers for an on-demand cloud recording.\n\n[Cloud recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording) of Zoom meetings and webinars can be made [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings). With on-demand recordings, users can view the recordings of past meetings and webinars at any time as long as they have not been removed. To view cloud recordings, users can register manually by filling out the registration form that pops up when users click on the **Recording URL**.\n\nUsers can also be programmatically registered via the [**Create a recording registrant**](/api-reference/zoom-api/ma#operation/meetingRecordingRegistrantCreate) API.\nOnce they complete the registration they can view the recording.\n\n## Prerequisites\n\n* A Pro or higher plan.\n* Cloud recording must be enabled on the users' account.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **View registrant has registered for this recording** subscription enabled under the **Recording** event.\n\n\n\n**Event type**: `recording.registration_created`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "recording.registration_created"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the host that recorded the meeting or webinar."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the recording registration.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "registrant"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The ID of the recorded meeting (meetingId) or webinar (webinarId)."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The universally unique identifier (UUID) of the recorded meeting or webinar instance."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The webinar or meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting or webinar topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The type of recorded meeting or webinar: \n\n If the recording is of a meeting: \n* 1 — Instant meeting. \n* 2 — Scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A meeting created via PMI (Personal Meeting ID). \n* 7 — A [Personal Audio Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) (PAC). \n* 8 - Recurring meeting with a fixed time. \n\n If the recording is of a webinar: \n* 5 — A webinar. \n* 6 — A recurring webinar without a fixed time. \n* 9 — A recurring webinar with a fixed time. \n\n If the recording is **not** from a meeting or webinar: \n\n* 99 — A recording uploaded via the [**Recordings**](https://zoom.us/recording) interface on the Zoom Web Portal.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9,
                              99
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting or webinar's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting or webinar's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled meeting or webinar duration."
                          },
                          "registrant": {
                            "type": "object",
                            "description": "Information about the recording registrant.",
                            "required": [
                              "email",
                              "status",
                              "first_name",
                              "last_name",
                              "address",
                              "city",
                              "country",
                              "zip",
                              "state",
                              "phone",
                              "industry",
                              "org",
                              "job_title",
                              "purchasing_time_frame",
                              "role_in_purchase_process",
                              "no_of_employees",
                              "comments"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The registrant's ID."
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "description": "The registrant's email address."
                              },
                              "status": {
                                "type": "string",
                                "default": "all",
                                "description": "The registrant's status: \n* approved — Registrant is approved. \n* denied — Registrant is denied. \n* pending — Registrant is waiting for approval. \n* all — The default status code.",
                                "enum": [
                                  "approved",
                                  "denied",
                                  "pending",
                                  "all"
                                ]
                              },
                              "first_name": {
                                "type": "string",
                                "description": "The registrant's first name."
                              },
                              "last_name": {
                                "type": "string",
                                "description": "The registrant's last name."
                              },
                              "address": {
                                "type": "string",
                                "description": "The registrant's address."
                              },
                              "city": {
                                "type": "string",
                                "description": "The registrant's city."
                              },
                              "country": {
                                "type": "string",
                                "description": "The registrant's two-letter [country code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries)."
                              },
                              "zip": {
                                "type": "string",
                                "description": "The registrant's ZIP or postal code."
                              },
                              "state": {
                                "type": "string",
                                "description": "The registrant's state or province."
                              },
                              "phone": {
                                "type": "string",
                                "description": "The registrant's phone number."
                              },
                              "industry": {
                                "type": "string",
                                "description": "The registrant's industry."
                              },
                              "org": {
                                "type": "string",
                                "description": "The registrant's organization."
                              },
                              "job_title": {
                                "type": "string",
                                "description": "The registrant's job title."
                              },
                              "purchasing_time_frame": {
                                "type": "string",
                                "description": "The registrant's purchasing time frame: \n* Within a month \n* 1-3 months \n* 4-6 months \n* More than 6 months \n* No timeframe",
                                "enum": [
                                  "",
                                  "Within a month",
                                  "1-3 months",
                                  "4-6 months",
                                  "More than 6 months",
                                  "No timeframe"
                                ]
                              },
                              "role_in_purchase_process": {
                                "type": "string",
                                "description": "The registrant's role in the purchase process: \n* Decision Maker \n* Evaluator/Recommender \n* Influencer \n* Not involved",
                                "enum": [
                                  "",
                                  "Decision Maker",
                                  "Evaluator/Recommender",
                                  "Influencer",
                                  "Not involved"
                                ]
                              },
                              "no_of_employees": {
                                "type": "string",
                                "description": "The registrant's number of employees: \n* 1-20 \n* 21-50 \n* 51-100 \n* 101-250 \n* 251-500 \n* 501-1,000 \n* 1,001-5,000 \n* 5,001-10,000 \n* More than 10,000",
                                "enum": [
                                  "",
                                  "1-20",
                                  "21-50",
                                  "51-100",
                                  "101-250",
                                  "251-500",
                                  "501-1,000",
                                  "1,001-5,000",
                                  "5,001-10,000",
                                  "More than 10,000"
                                ]
                              },
                              "comments": {
                                "type": "string",
                                "description": "The registrant's questions and comments."
                              },
                              "custom_questions": {
                                "type": "array",
                                "description": "Information about custom questions.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "title": {
                                      "type": "string",
                                      "description": "The title of the custom question."
                                    },
                                    "value": {
                                      "type": "string",
                                      "maxLength": 128,
                                      "description": "The custom question's response value. This has a limit of 128 characters."
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "recording.registration_created",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": 1234567890,
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Personal Recording",
                        "type": 4,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "occurrences": {
                          "occurrence_id": "ABCDE12345",
                          "start_time": "2021-07-13T21:44:51Z"
                        },
                        "registrant": {
                          "id": "iFxeBPYun6SAiWUzBcEkX",
                          "email": "jchill@example.com",
                          "first_name": "Jill",
                          "last_name": "Chill",
                          "address": "1800 Amphibious Blvd.",
                          "city": "Mountain View",
                          "country": "US",
                          "zip": "94045",
                          "state": "CA",
                          "phone": "5550100",
                          "industry": "Food",
                          "org": "Cooking Org",
                          "job_title": "Chef",
                          "purchasing_time_frame": "1-3 months",
                          "role_in_purchase_process": "Influencer",
                          "no_of_employees": "1-20",
                          "comments": "Looking forward to the Webinar",
                          "custom_questions": [
                            {
                              "title": "What do you hope to learn from this Webinar?",
                              "value": "Look forward to learning how you come up with new recipes and what other services you offer."
                            }
                          ],
                          "status": "approved"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.participant_joined_waiting_room": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.participant_joined_waiting_room",
        "requestBody": {
          "description": "# meeting.participant_joined_waiting_room\n\nThe **Participant joined a waiting room** event is triggered every time an attendee joins a waiting room prior to being admitted to the meeting. The meeting host must be a user in your account or a user in any other accounts that have installed your [webhook-enabled](https://developers.zoom.us/docs/api/rest/webhook-reference/#enable-webhooks) app.\n\nThe [**waiting room**](https://support.zoom.us/hc/en-us/articles/115000332726-Waiting-Room) feature allows the host to control when participants join a meeting. When a participant attempts to join a meeting with this feature enabled, the participant is first admitted to the waiting room.\nThe meeting host can then admit attendees one by one or hold all attendees in the waiting room and admit them all at once.\n\n## Prerequisites\n\n* Enable the [**waiting room**](https://support.zoom.us/hc/en-us/articles/115000332726-Waiting-Room) feature for the meeting.\n* Enable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Participant joined a waiting room** subscription must be enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.participant_joined_waiting_room`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.participant_joined_waiting_room"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the main meeting."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The meeting type. \n* 0 - A prescheduled meeting. \n* 1 - An instant meeting. \n* 2 - A scheduled meeting. \n* 3 - A recurring meeting with no fixed time. \n* 4 - A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 - A [PAC (Personal Audio Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 - A recurring meeting with a fixed time.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "pattern": "(^\\s*$|^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$)",
                            "description": "The meeting's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting's [timezone](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled meeting duration."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the meeting participant. If the participant is **not** part of the host's account, email returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details.",
                            "required": [
                              "user_id",
                              "email",
                              "date_time"
                            ],
                            "properties": {
                              "user_id": {
                                "type": "string",
                                "description": "The participant's meeting user ID. This value is assigned to a participant when they join a meeting, and is only valid for the duration of the meeting."
                              },
                              "user_name": {
                                "type": "string",
                                "description": "The participant's display name."
                              },
                              "id": {
                                "type": "string",
                                "description": "The participant's universally unique ID (UUID). \n* If the participant joins the meeting by logging into Zoom, this value is the id value in the [**Get a user**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the meeting **without** logging into Zoom, this returns an empty string value. \n\n**Note:** Use the participant_user_id value instead of this value. We will remove this response in a future release."
                              },
                              "participant_uuid": {
                                "type": "string",
                                "description": "The participant's UUID for this specific meeting and any breakout rooms created in this meeting. This value is assigned to a participant when they join a meeting, and is only valid for the duration of that meeting."
                              },
                              "date_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time when the participant joined the meeting."
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "description": "The participant's email address. This response only returns if the participant joined the meeting by logging into Zoom. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details."
                              },
                              "phone_number": {
                                "type": "string",
                                "description": "Phone number of participant joined via PSTN.",
                                "example": "8615250064084"
                              },
                              "participant_user_id": {
                                "type": "string",
                                "description": "The participant's universally unique ID (UUID). \n* If the participant joins the meeting by logging into Zoom, this value is the id value in the [**Get a user**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the meeting **without** logging into Zoom, this returns an empty string value."
                              },
                              "customer_key": {
                                "type": "string",
                                "description": "The participant's SDK identifier. This value can be alphanumeric."
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.participant_joined_waiting_room",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": "1234567890",
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 8,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "participant": {
                          "user_id": "1234567890",
                          "user_name": "Jill Chill",
                          "id": "iFxeBPYun6SAiWUzBcEkX",
                          "participant_uuid": "55555AAAiAAAAAiAiAiiAii",
                          "date_time": "2021-07-13T21:44:51Z",
                          "email": "jchill@example.com",
                          "phone_number": "8615250064084",
                          "participant_user_id": "iFxeBPYun6SAiWUzBcEkX",
                          "customer_key": "349589LkJyeW"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.participant_phone_callout_ringing": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.participant_phone_callout_ringing",
        "requestBody": {
          "description": "# meeting.participant_phone_callout_ringing\n\nThe **Invited party's phone (call out) ringing** event is triggered every time a user's phone rings when they are invited to [join a meeting through phone (call out)](https://support.zoom.us/hc/en-us/articles/4404535651085).\n\n## Prerequisites\n\nEnable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with these configurations.\n* A valid **Event Notification Endpoint URL**.\n* The **Invited party's phone (call out) ringing** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.participant_phone_callout_ringing`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.participant_phone_callout_ringing"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The meeting host's account ID."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the invited participant.",
                            "required": [
                              "invitee_name",
                              "phone_number"
                            ],
                            "properties": {
                              "invitee_name": {
                                "type": "string",
                                "description": "The user's name to display in the meeting."
                              },
                              "phone_number": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The user's phone number."
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.participant_phone_callout_ringing",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "dzVA4QmMQfyISoRcpFO8CA",
                      "object": {
                        "id": 713592696,
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "ICuPoX4ERtikRcKqkVxunQ",
                        "participant": {
                          "invitee_name": "Jill Chill",
                          "phone_number": 1800000000
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.live_streaming_started": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.live_streaming_started",
        "requestBody": {
          "description": "# meeting.live_streaming_started\n\nThe **Meeting Live Streaming Started** event is triggered every time a meeting's live stream begins on a streaming platform. The host that begins the live stream must be a user in your account or a user in any other accounts that have installed your [webhook-enabled](https://marketplace.zoom.us/docs/api-reference/webhook-reference#enable-webhooks) app.\n\nZoom lets users live stream their Zoom meetings on [YouTube Live](https://support.zoom.us/hc/en-us/articles/360028478292-Streaming-a-Meeting-or-Webinar-on-YouTube-Live), [Facebook](https://support.zoom.us/hc/en-us/articles/115000350406-Streaming-a-meeting-or-webinar-on-Facebook-Live), [Workplace by Facebook](https://support.zoom.us/hc/en-us/articles/115005460286-Live-Stream-Meetings-or-Webinars-on-Workplace-by-Facebook), and via a [custom live streaming services](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service).\n\n## Prerequisites\n\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Meeting Live Streaming Started** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.live_streaming_started`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.live_streaming_started"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "operator",
                      "operator_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the meeting."
                      },
                      "operator": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user who updated the meeting."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who updated the meeting."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "live_streaming"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The meeting type: \n* 0 — A prescheduled meeting. \n* 1 — An instant meeting. \n* 2 — A scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 — A [PAC (Personal Audio Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 — A recurring meeting with a fixed time.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled meeting duration."
                          },
                          "live_streaming": {
                            "type": "object",
                            "description": "Information about the live stream.",
                            "required": [
                              "service",
                              "date_time"
                            ],
                            "properties": {
                              "service": {
                                "type": "string",
                                "description": "The name of the live streaming service: \n* Facebook \n* Workplace_by_Facebook \n* YouTube \n* Twitch \n* Custom_Live_Streaming_Service",
                                "enum": [
                                  "Facebook",
                                  "Workplace_by_Facebook",
                                  "YouTube",
                                  "Twitch",
                                  "Custom_Live_Streaming_Service"
                                ]
                              },
                              "custom_live_streaming_settings": {
                                "type": "object",
                                "description": "Information about the custom live stream.",
                                "required": [
                                  "stream_url",
                                  "stream_key",
                                  "page_url"
                                ],
                                "properties": {
                                  "stream_url": {
                                    "type": "string",
                                    "description": "The live stream's URL."
                                  },
                                  "stream_key": {
                                    "type": "string",
                                    "description": "The live stream's key."
                                  },
                                  "page_url": {
                                    "type": "string",
                                    "description": "The live stream's page URL."
                                  },
                                  "resolution": {
                                    "type": "string",
                                    "description": "The number of pixels in each dimension that the video camera can display."
                                  }
                                }
                              },
                              "date_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the live stream started."
                              }
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.live_streaming_started",
                    "event_ts": 1627906965803,
                    "payload": {
                      "account_id": "D8cJuqWVQ623CI4Q8yQK0Q",
                      "operator": "admin@example.com",
                      "operator_id": "z8yCxjabcdEFGHfp8uQ",
                      "object": {
                        "id": 1234567890,
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 2,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "live_streaming": {
                          "service": "Custom_Live_Streaming_Service",
                          "custom_live_streaming_settings": {
                            "stream_url": "https://example.com/livestream",
                            "stream_key": "ABCDEFG12345HIJ6789",
                            "page_url": "https://example.com/livestream/123",
                            "resolution": "1080p"
                          },
                          "date_time": "2021-08-02T12:22:45Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.created": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.created",
        "requestBody": {
          "description": "# meeting.created\n\nThe **Meeting has been created** event is triggered every time a meeting is created by one of your app users or account users.\n\nZoom offers multiple methods for users to schedule new meetings. Users can manually create meetings through the Zoom client or the [Zoom web portal](https://zoom.us/). Users can also programmatically create meetings through the [**Create a meeting**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods/#operation/meetingCreate) API.\n\n## Prerequisites\n\nEnable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with:\n* A valid **Event Notification Endpoint URL**.\n* The **Meeting has been created** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.created`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.created"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "operator",
                      "operator_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the meeting."
                      },
                      "operator": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user who created the meeting."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who created the meeting."
                      },
                      "operation": {
                        "type": "string",
                        "description": "The type of operation performed. \n* all - The change was applied to all meetings. \n* single - The change was applied only to a single meeting.",
                        "enum": [
                          "all",
                          "single"
                        ]
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "uuid",
                          "id",
                          "host_id",
                          "topic",
                          "type",
                          "duration",
                          "join_url",
                          "settings"
                        ],
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The meeting ID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The meeting type. \n* 0 - A prescheduled meeting. \n* 1 - An instant meeting. \n* 2 - A scheduled meeting. \n* 3 - A recurring meeting with no fixed time. \n* 4 - A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 - A [PAC (Personal Audio Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 - A recurring meeting with a fixed time. \n* 10 - A screen share only meeting.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8,
                              10
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting's start time."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled meeting duration."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "join_url": {
                            "type": "string",
                            "description": "The URL to join the meeting."
                          },
                          "password": {
                            "type": "string",
                            "description": "The password required to join the meeting."
                          },
                          "pmi": {
                            "type": "string",
                            "description": "The [Personal Meeting ID (PMI)](https://support.zoom.us/hc/en-us/articles/201362843-What-is-Personal-Meeting-ID-PMI-and-Personal-Link-)."
                          },
                          "occurrences": {
                            "type": "array",
                            "description": "Information about recurring meetings with fixed times and their occurrences. This only returns when the meeting's type value is 8.",
                            "items": {
                              "type": "object",
                              "required": [
                                "occurrence_id",
                                "start_time"
                              ],
                              "properties": {
                                "occurrence_id": {
                                  "type": "string",
                                  "description": "The meeting occurrence's ID."
                                },
                                "start_time": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The meeting's start time."
                                },
                                "duration": {
                                  "type": "integer",
                                  "description": "The scheduled meeting duration."
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The meeting occurrence status: \n* available \n* deleted",
                                  "enum": [
                                    "available",
                                    "deleted"
                                  ]
                                }
                              },
                              "additionalProperties": true
                            }
                          },
                          "settings": {
                            "type": "object",
                            "description": "Information about the meeting's settings.",
                            "required": [
                              "use_pmi",
                              "alternative_hosts"
                            ],
                            "properties": {
                              "use_pmi": {
                                "type": "boolean",
                                "description": "Whether the use of PMI is enabled."
                              },
                              "alternative_hosts": {
                                "type": "string",
                                "description": "A semicolon-separated list of the meeting's alternative hosts' email addresses or IDs."
                              },
                              "meeting_invitees": {
                                "type": "array",
                                "description": "A list of the meeting's invitees.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "email": {
                                      "type": "string",
                                      "description": "The invitee's email address.",
                                      "format": "email"
                                    }
                                  }
                                }
                              }
                            },
                            "additionalProperties": true
                          },
                          "recurrence": {
                            "type": "object",
                            "description": "Information about [recurring meetings](https://marketplace.zoom.us/docs/api-reference/other-references/recurrence-object-definitions).",
                            "properties": {
                              "type": {
                                "type": "integer",
                                "description": "The type of recurring meeting. \n* 1 - Daily. \n* 2 - Weekly. \n* 3 - Monthly.",
                                "enum": [
                                  1,
                                  2,
                                  3
                                ]
                              },
                              "repeat_interval": {
                                "type": "integer",
                                "description": "The meeting's repeat interval. \n* For daily intervals, a max of 90 days. \n* For a weekly interval, a max of 12 weeks. \n* For monthly intervals, a max of 3 months."
                              },
                              "weekly_days": {
                                "type": "string",
                                "description": "A comma-separated list of the days of the week when the recurring weekly meeting occurs. \n* 1 - Sunday \n* 2 - Monday \n* 3 - Tuesday \n* 4 - Wednesday \n* 5 - Thursday \n* 6 - Friday \n* 7 - Saturday"
                              },
                              "monthly_day": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 31,
                                "description": "The day of the month when the recurring monthly meeting occurs. The value ranges from 1 to 31."
                              },
                              "monthly_week_day": {
                                "type": "integer",
                                "description": "The day of the week when the recurring monthly meeting is scheduled. \n* 1 - Sunday \n* 2 - Monday \n* 3 - Tuesday \n* 4 - Wednesday \n* 5 - Thursday \n* 6 - Friday \n* 7 - Saturday",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6,
                                  7
                                ]
                              },
                              "end_times": {
                                "type": "integer",
                                "description": "The number of times the recurring meeting will occur before it is canceled."
                              },
                              "end_date_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The recurring meeting's final ending date and time before it is canceled, in UTC format."
                              },
                              "monthly_week": {
                                "type": "integer",
                                "description": "The week of the month when a recurring meeting occurs. \n* -1 - The last week of the month. \n* 1 - The first week. \n* 2 - The second week. \n* 3 - The third week. \n* 4 - The fourth week.",
                                "enum": [
                                  -1,
                                  1,
                                  2,
                                  3,
                                  4
                                ]
                              }
                            },
                            "additionalProperties": true
                          },
                          "tracking_fields": {
                            "type": "array",
                            "description": "Information about the meeting's [tracking fields](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields).",
                            "items": {
                              "type": "object",
                              "properties": {
                                "field": {
                                  "type": "string",
                                  "description": "The tracking field's label."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The tracking field's value."
                                },
                                "visible": {
                                  "type": "boolean",
                                  "description": "Whether the tracking field is visible in the meeting scheduling options in the Zoom web portal. When the tracking field is disabled, the field can be only be set by users via API."
                                }
                              },
                              "additionalProperties": true
                            }
                          }
                        },
                        "additionalProperties": true
                      }
                    },
                    "additionalProperties": true
                  }
                },
                "additionalProperties": true
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.created",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "operator": "admin@example.com",
                      "operator_id": "z8yCxjabcdEFGHfp8uQ",
                      "operation": "single",
                      "object": {
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "id": 1234567890,
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 8,
                        "start_time": "2021-07-13T21:44:51Z",
                        "duration": 60,
                        "timezone": "America/Los_Angeles",
                        "join_url": "https://example.com",
                        "password": "XYz@BC!D1087",
                        "pmi": "ABc$DE@F234",
                        "occurrences": [
                          {
                            "occurrence_id": "ABCDE12345",
                            "start_time": "2021-07-13T21:44:51Z",
                            "duration": 60,
                            "status": "available"
                          }
                        ],
                        "settings": {
                          "use_pmi": true,
                          "alternative_hosts": "althost1@example.com;althost2@example.com",
                          "meeting_invitees": [
                            {
                              "email": "jchill@example.com"
                            }
                          ]
                        },
                        "recurrence": {
                          "type": 1,
                          "repeat_interval": 2,
                          "end_times": 5
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.participant_room_system_callout_accepted": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.participant_room_system_callout_accepted",
        "requestBody": {
          "description": "# meeting.participant_room_system_callout_accepted\n\nThe **Invited party answered a meeting invitation through phone (call out) via Zoom room** event is triggered every time a user [joins a meeting through phone (call out) from a Zoom room](https://support.zoom.us/hc/en-us/articles/205369035).\n\n## Prerequisites\n\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n* A valid **Event Notification Endpoint URL**.\n* The **Invited party answered a meeting invitation through phone (call out) via Zoom room** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.participant_room_system_callout_accepted`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.participant_room_system_callout_accepted"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the meeting host."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "message_id",
                          "inviter_name",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The user ID of the meeting host."
                          },
                          "message_id": {
                            "type": "string",
                            "description": "The request unique identifier (UUID)."
                          },
                          "inviter_name": {
                            "type": "string",
                            "description": "The user name of the event's trigger."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the invited participant.",
                            "required": [
                              "call_type",
                              "device_ip"
                            ],
                            "properties": {
                              "call_type": {
                                "type": "string",
                                "description": "The type of call out. Use a value of h323 or sip."
                              },
                              "device_ip": {
                                "type": "string",
                                "description": "The user's device IP address."
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.participant_room_system_callout_accepted",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "dzVA4QmMQfyISoRcpFO8CA",
                      "object": {
                        "id": 713592696,
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "ICuPoX4ERtikRcKqkVxunQ",
                        "message_id": "atsXxhSEQWit9t+U02HXNQ==",
                        "inviter_name": "Jill Chill",
                        "participant": {
                          "call_type": "h323",
                          "device_ip": "10.100.111.237"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "webinar.registration_approved": {
      "post": {
        "tags": [
          "webinar"
        ],
        "operationId": "webinar.registration_approved",
        "requestBody": {
          "description": "# webinar.registration_approved\n\nThe **Webinar Registration has been approved** event is triggered every time one of your app users or account users approve a user's registration.\n\n[Scheduling a Webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires registrants to complete a brief form before receiving the link to join a Webinar. [Webinar Registration options](https://support.zoom.us/hc/en-us/articles/202835649-Webinar-Registration-Customization#h_b74e0e26-5f3f-40d4-a3de-949dbfd85882) can be customized by a Zoom admin or a Webinar host. This customization allows them to choose whether to approve attendees automatically or manually.\n\nWhen the registration is set to be approved manually, a pending registrant can either be approved or denied from joining the Webinar.\n\nTo approve a registrant manually, navigate to the [Webinars](https://zoom.us/webinar/list) page and click on the name of the webinar. Click **Edit** to the right of **Manage Attendees** option, select the registrant and click **Approve**. Alternatively, use the [**Update registrant's status**](/docs/api-reference/zoom-api/methods#operation/webinarRegistrantStatus) API to approve the registrant programmatically.\n\n## Prerequisites\n\n* Pro or a higher plan with Webinar license.\n* **Manual Approval** enabled for [Webinar Registrations](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**\n\t* The **Webinar Registration has been approved** subscription enabled under the **Webinar** event.\n\n\n\n**Event type**: `webinar.registration_approved`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "webinar.registration_approved"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "operator",
                      "operator_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who approved the registration."
                      },
                      "operator": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user who approved the webinar registration."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who approved the webinar registration."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the webinar registration.",
                        "required": [
                          "uuid",
                          "id",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "timezone",
                          "registrant"
                        ],
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "description": "The webinar's universally unique identifier (UUID). Each webinar instance generates a webinar UUID."
                          },
                          "id": {
                            "type": "integer",
                            "description": "The webinar ID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The webinar host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The webinar's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The webinar type: \n* 5 — A webinar. \n* 6 — A recurring webinar without a fixed time. \n* 9 — A recurring webinar with a fixed time.",
                            "enum": [
                              5,
                              6,
                              9
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The webinar's start time."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled webinar duration."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The webinar's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "occurrences": {
                            "type": "array",
                            "description": "Information about recurring webinar with fixed times and their occurrences. This only returns when the webinar's type value is 9.",
                            "additionalItems": true,
                            "items": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "occurrence_id",
                                    "start_time"
                                  ],
                                  "properties": {
                                    "occurrence_id": {
                                      "type": "string",
                                      "description": "The webinar occurrence's ID."
                                    },
                                    "start_time": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The webinar's start time."
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              ]
                            }
                          },
                          "registrant": {
                            "type": "object",
                            "description": "Information about the webinar registrant.",
                            "required": [
                              "id",
                              "first_name",
                              "email",
                              "join_url"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The registrant's ID."
                              },
                              "first_name": {
                                "type": "string",
                                "description": "The registrant's first name."
                              },
                              "last_name": {
                                "type": "string",
                                "description": "The registrant's last name."
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "description": "The registrant's email address."
                              },
                              "join_url": {
                                "type": "string",
                                "description": "The URL to join the webinar."
                              },
                              "tracking_source": {
                                "type": "object",
                                "description": "Information about the source tracking. See [Creating webinar registration tracking links](https://support.zoom.us/hc/en-us/articles/360000315683-Creating-webinar-registration-tracking-links) for details.",
                                "required": [
                                  "id",
                                  "source_name",
                                  "tracking_url"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Unique Identifier of the tracking source."
                                  },
                                  "source_name": {
                                    "type": "string",
                                    "description": "Name of the source (platform) where the registration URL was shared."
                                  },
                                  "tracking_url": {
                                    "type": "string",
                                    "description": "Tracking URL. The URL that was shared for the registration."
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "webinar.registration_approved",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "operator": "admin@example.com",
                      "operator_id": "z8yCxjabcdEFGHfp8uQ",
                      "object": {
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "id": 1234567890,
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Webinar",
                        "type": 9,
                        "start_time": "2021-07-13T21:44:51Z",
                        "duration": 60,
                        "timezone": "America/Los_Angeles",
                        "occurrences": [
                          {
                            "occurrence_id": "ABCDE12345",
                            "start_time": "2021-07-13T21:44:51Z"
                          }
                        ],
                        "registrant": {
                          "id": "iFxeBPYun6SAiWUzBcEkX",
                          "first_name": "Jill",
                          "last_name": "Chill",
                          "email": "jchill@example.com",
                          "join_url": "https://example.com",
                          "tracking_source": {
                            "id": "5516482804110",
                            "source_name": "general",
                            "tracking_url": "https://example.com/webinar/register/5516482804110/WN_juM2BGyLQMyQ_ZrqiGRhLg"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.participant_jbh_joined": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.participant_jbh_joined",
        "requestBody": {
          "description": "# meeting.participant_jbh_joined\n\nThe **Participant joined meeting before host** event is triggered every time an attendee joins a meeting before the host. The host of the meeting must be a user in your account or a user in any other accounts that have installed your [webhook-enabled](https://marketplace.zoom.us/docs/api-reference/webhook-reference#enable-webhooks) app.\n\nWhen scheduling a meeting, the organizer or host of the meeting can enable the **Enable join before host** option. This allows attendees to join the meeting before the host of the meeting arrives. This meeting also starts as soon as the first meeting participant joins.\n\nIf this option is **disabled**, participants are prompted to wait for the host to arrive before joining the meeting.\n\n## Prerequisites\n\n* A Pro or a higher plan.\n* Enable the **Enable join before host** option for the scheduled meeting.\n* Enable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Participant joined meeting before host** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.participant_jbh_joined`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.participant_jbh_joined"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the meeting."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "duration",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The meeting type. \n* 0 - A prescheduled meeting. \n* 1 - An instant meeting. \n* 2 - A scheduled meeting. \n* 3 - A recurring meeting with no fixed time. \n* 4 - A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 - A [PAC (personal audio conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 - A recurring meeting with a fixed time.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting's [timezone](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled meeting duration."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the meeting participant.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The participant's universally unique ID (UUID). \n* If the participant joins the meeting by logging into Zoom, this value is the id value in the [**Get a user**](/api-reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the meeting **without** logging into Zoom, this returns an empty string value."
                              },
                              "user_name": {
                                "type": "string",
                                "description": "The participant's display name."
                              },
                              "customer_key": {
                                "type": "string",
                                "description": "The participant's SDK identifier. This value can be alphanumeric."
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.participant_jbh_joined",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": "1234567890",
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 8,
                        "start_time": "2021-07-13T21:44:51Z",
                        "duration": 60,
                        "timezone": "America/Los_Angeles",
                        "participant": {
                          "id": "iFxeBPYun6SAiWUzBcEkX",
                          "user_name": "JillChill",
                          "customer_key": "349589LkJyeW"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "recording.archive_files_completed": {
      "post": {
        "tags": [
          "recording"
        ],
        "operationId": "recording.archive_files_completed",
        "requestBody": {
          "description": "# recording.archive_files_completed\n\nThe **Recording Archive Files Completed** event is triggered every time the archived files of a meeting or webinar become available to download.\n\nZoom's [meeting and webinar archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-Meeting-and-Webinar-data) allows account administrators to set up an automated mechanism to collect and archive meeting data to a 3rd party platform of their choice. This helps to satisfy FINRA or other compliance requirements.\n\nThe archiving process begins once a meeting or webinar, hosted by an account that has enabled the archiving feature, begins. The archiving of the meeting data completes after a meeting or webinar ends.\n\nThis feature is **only** enabled upon request approval. Contact the [Zoom support team](https://support.zoom.us/hc/en-us/articles/201362003) for more information.\n\n## Prerequisites\n\n* The **Archiving** feature must be enabled on the user's account.\n* Enable **Event Subscriptions** in your [Marketplace app](https://marketplace.zoom.us/user/build) with these configurations.\n  * A valid Event notification endpoint URL.\n  * The **Recording Archive Files Completed** subscription enabled under the **Recording** event.\n\n\n\n**Event type**: `recording.archive_files_completed`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload",
                  "download_token"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "recording.archive_files_completed"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "download_token": {
                    "type": "string",
                    "description": "Use the generated token value with the download_url value to download the cloud recording via an [OAuth app](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app). The download token only lasts for 24 hours after its creation, and you can only download the file within 24 hours of receiving the event notification. You can either include the download_token as a query parameter or pass it as a Bearer token in the Authorization header of your HTTP request. \n\n **Using an Authorization header (Recommended)** \n\n \ncurl --request GET \\\n  --url {download_url} \\\n  --header 'authorization: Bearer {download_token} \\\n  --header 'content-type: application/json'\n \n\n**Using a query parameter** \n\n \n{download_url}/?access_token={download_token}\n \n\n For example: https://zoom.us/recording/download/123456?access_token=abcdefgh"
                  },
                  "payload": {
                    "type": "object",
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who hosted the meeting or the webinar."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the webinar or meeting recording.",
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "description": "The universally unique identifier (UUID) of the recorded meeting or webinar instance. Each meeting or webinar instance generates its own meeting UUID."
                          },
                          "id": {
                            "type": "integer",
                            "description": "The ID of the meeting (meetingId) or the webinar (webinarId)."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The ID of the user set as the host of the archived meeting or webinar."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting or webinar topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The type of archived meeting or webinar. \n\n If the recording is of a meeting: \n* 1 - Instant meeting. \n* 2 - Scheduled meeting. \n* 3 - A recurring meeting with no fixed time. \n* 4 - A meeting created via PMI (Personal Meeting ID). \n* 7 - A [Personal Audio Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) (PAC). \n* 8 - Recurring meeting with a fixed time. \n\n If the recording is of a webinar: \n* 5 - A webinar. \n* 6 - A recurring webinar without a fixed time. \n* 9 - A recurring webinar with a fixed time. \n\n If the recording is **not** from a meeting or webinar: \n\n* 100 - A [breakout room](https://support.zoom.us/hc/en-us/articles/115005769646-Participating-in-breakout-rooms).",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9,
                              100
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "description": "The meeting or webinar's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting or webinar's [timezone](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The meeting or webinar's scheduled duration."
                          },
                          "duration_in_second": {
                            "description": "The meeting or webinar's duration, in seconds.",
                            "example": 1800,
                            "type": "integer"
                          },
                          "total_size": {
                            "type": "integer",
                            "description": "The total size of the archive file, in bytes."
                          },
                          "recording_count": {
                            "type": "integer",
                            "description": "The number of archived files returned in the API call response."
                          },
                          "meeting_type": {
                            "type": "string",
                            "description": "Whether the meeting or webinar is internal or external. \n* internal - An internal meeting or webinar. \n* external - An external meeting or webinar. \n\n The id, host_id, and topic PII (Personal Identifiable Information) values in this response are removed when this value is external.",
                            "enum": [
                              "internal",
                              "external"
                            ]
                          },
                          "account_name": {
                            "type": "string",
                            "description": "The user's account name."
                          },
                          "complete_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting or webinar's archive completion time.",
                            "anyOf": [
                              {
                                "format": "date-time",
                                "minLength": 1
                              },
                              {
                                "enum": [
                                  ""
                                ]
                              }
                            ]
                          },
                          "is_breakout_room": {
                            "type": "boolean",
                            "description": "Whether the room is a [breakout room](https://support.zoom.us/hc/en-us/articles/115005769646-Participating-in-breakout-rooms)."
                          },
                          "parent_meeting_id": {
                            "type": "string",
                            "description": "The parent meeting's universally unique ID (UUID). Each meeting or webinar instance generates its own meeting UUID. If the is_breakout_room value is true, the API returns this value."
                          },
                          "archive_files": {
                            "type": "array",
                            "description": "Information about the archive files.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The archived file's ID."
                                },
                                "file_type": {
                                  "type": "string",
                                  "description": "The archived file's type. \n* MP4 - Video file. \n* M4A - Audio-only file. \n* TRANSCRIPT - A transcription file, in VTT format. \n* CHAT - A TXT file containing in-meeting chat messages. \n* CC - A file containing the closed captions of the recording, in VTT file format. \n* CHAT_MESSAGE - A JSON file encoded in base64 format containing chat messages. The file also includes waiting room chats, deleted messages, meeting emojis and non-verbal feedback.",
                                  "enum": [
                                    "MP4",
                                    "M4A",
                                    "TRANSCRIPT",
                                    "CHAT",
                                    "CC",
                                    "CHAT_MESSAGE"
                                  ]
                                },
                                "file_extension": {
                                  "type": "string",
                                  "description": "The archived file's extension."
                                },
                                "file_name": {
                                  "type": "string",
                                  "description": "The archived file's name."
                                },
                                "file_size": {
                                  "type": "integer",
                                  "description": "The archived file's size, in bytes."
                                },
                                "download_url": {
                                  "type": "string",
                                  "description": "The URL to download the archived file. To download the archived file of a meeting or a webinar, use the download_token value included in the webhook as the access_token query parameter value and include this query parameter at the end of the URL. For example: \n\n https://{{base-domain}}/rec/archive/download/xxx?access_token={{your-download_token-value}}"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The archived file's processing status. \n* completed - The processing of the file is complete. \n* processing - The file is processing. \n* failed - The file processing failed.",
                                  "enum": [
                                    "completed",
                                    "processing",
                                    "failed"
                                  ]
                                },
                                "recording_type": {
                                  "type": "string",
                                  "description": "The archive file's recording type. \n* shared_screen_with_speaker_view \n* audio_only \n* chat_file \n* closed_caption \n* chat_message \n\n For more information, read our [Managing and sharing cloud recordings](https://support.zoom.us/hc/en-us/articles/205347605-Managing-and-sharing-cloud-recordings#h_9898497b-e736-4980-a749-d55608f10773) documentation.",
                                  "enum": [
                                    "shared_screen_with_speaker_view",
                                    "audio_only",
                                    "chat_file",
                                    "closed_caption",
                                    "chat_message"
                                  ]
                                },
                                "individual": {
                                  "type": "boolean",
                                  "description": "Whether the recording file is an individual recording file: \n* true - An individual recording file. \n * false - An entire meeting file."
                                },
                                "participant_email": {
                                  "type": "string",
                                  "format": "email",
                                  "description": "The individual recording file's participant email address. This value is returned when the individual value is true. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details."
                                },
                                "participant_join_time": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The join time for the generated recording file. If this value is returned when the individual value is true, then it is the recording file's participant join time. When the individual value is false, it returns the join time for the archiving gateway.",
                                  "anyOf": [
                                    {
                                      "format": "date-time",
                                      "minLength": 1
                                    },
                                    {
                                      "enum": [
                                        ""
                                      ]
                                    }
                                  ]
                                },
                                "participant_leave_time": {
                                  "type": "string",
                                  "description": "The leave time for the generated recording file. If this value is returned when the individual value is true, then it is the recording file's participant leave time. When the individual value is false, it returns the leave time for the archiving gateway.",
                                  "anyOf": [
                                    {
                                      "format": "date-time",
                                      "minLength": 1
                                    },
                                    {
                                      "enum": [
                                        ""
                                      ]
                                    }
                                  ]
                                },
                                "encryption_fingerprint": {
                                  "description": "The archived file's encryption fingerprint, using the SHA256 hash algorithm.",
                                  "example": "abf85f0fe6a4db3cdd8c37e505e1dd18a34d9696170a14b5bc6395677472cf43",
                                  "type": "string"
                                },
                                "number_of_messages": {
                                  "description": "The number of TXT or JSON file messages. This field will return only when the file_extension is JSON or TXT",
                                  "example": 150,
                                  "type": "integer"
                                },
                                "storage_location": {
                                  "type": "string",
                                  "description": "The region where the file is stored. This field returns only Enable Distributed Compliance Archiving op feature is enabled.",
                                  "example": "US",
                                  "enum": [
                                    "US",
                                    "AU",
                                    "BR",
                                    "CA",
                                    "EU",
                                    "IN",
                                    "JP",
                                    "SG",
                                    "CH"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "status": {
                            "description": "The archive's processing status: \n* completed - The archive's processing is complete. \n* processing - The archive is processing.",
                            "example": "completed",
                            "type": "string",
                            "enum": [
                              "completed",
                              "processing"
                            ]
                          },
                          "group_id": {
                            "description": "Primary group IDs of participants who belong to your account. Each group ID is separated by a comma.",
                            "example": "pvFIYKSDTum9iCDOOtQL4w,_FsqLyI0RlO6LVPeUVWi8g",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "recording.archive_files_completed",
                    "event_ts": 1626230691572,
                    "download_token": "abJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJodHRwczovL2V2ZW50Lnpvb20udXMiLCJhY2NvdW50SWQiOiJNdDZzdjR1MFRBeVBrd2dzTDJseGlBIiwiYXVkIjoiaHR0cHM6Ly9vYXV0aC56b29tLnVzIiwibWlkIjoieFp3SEc0c3BRU2VuekdZWG16dnpiUT09IiwiZXhwIjoxNjI2MTM5NTA3LCJ1c2VySWQiOiJEWUhyZHBqclMzdWFPZjdkUGtrZzh3In0.a6KetiC6BlkDhf1dP4KBGUE1bb2brMeraoD45yhFx0eSSSTFdkHQnsKmlJQ-hdo9Zy-4vQw3rOxlyoHv583JyZ",
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "id": 1234567890,
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Personal Recording",
                        "type": 4,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "duration_in_second": 3602,
                        "total_size": 3328371,
                        "recording_count": 2,
                        "meeting_type": "internal",
                        "account_name": "account_01",
                        "complete_time": "2021-03-12T02:57:27Z",
                        "is_breakout_room": false,
                        "archive_files": [
                          {
                            "id": "ed6c2f27-2ae7-42f4-b3d0-835b493e4fa8",
                            "file_type": "M4A",
                            "file_extension": "M4A",
                            "file_size": 1547842,
                            "download_url": "https://example.com/recording/download/Qg75t7xZBtEbAkjdlgbfdngBBBB",
                            "status": "completed",
                            "recording_type": "audio_only",
                            "individual": true,
                            "participant_email": "jchill@example.com",
                            "participant_join_time": "2021-03-12T02:07:27Z",
                            "participant_leave_time": "2021-03-12T02:12:27Z",
                            "encryption_fingerprint": "2123150b921fb1babda81c6156d2711659d37b5d3cbe6957e22e51fbb87e7a87",
                            "storage_location": "US"
                          },
                          {
                            "id": "388ffb46-1541-460d-8447-4624451a1db7",
                            "file_type": "MP4",
                            "file_extension": "MP4",
                            "file_size": 1780529,
                            "download_url": "https://example.com/recording/download/Qg75t7xZBtEbAkjdlgbfdngCCCC",
                            "status": "completed",
                            "recording_type": "shared_screen_with_speaker_view",
                            "individual": true,
                            "participant_email": "thill@example.com",
                            "participant_join_time": "2021-03-12T02:07:27Z",
                            "participant_leave_time": "2021-03-12T02:12:27Z",
                            "encryption_fingerprint": "abf85f0fe6a4db3cdd8c37e505e1dd18a34d9696170a14b5bc6395677472cf43",
                            "storage_location": "US"
                          }
                        ],
                        "status": "completed",
                        "group_id": "pvFIYKSDTum9iCDOOtQL4w,_FsqLyI0RlO6LVPeUVWi8g"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.breakout_room_sharing_started": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.breakout_room_sharing_started",
        "requestBody": {
          "description": "# meeting.breakout_room_sharing_started\n\nThe **User in breakout room started sharing** event is triggered when a user in a [breakout room](https://support.zoom.us/hc/en-us/articles/115005769646-Participating-in-breakout-rooms) begins [sharing content](https://support.zoom.us/hc/en-us/articles/201362153-Sharing-your-screen-or-desktop-on-Zoom), such as their desktop or the [classic whiteboard](https://support.zoom.us/hc/en-us/articles/205677665-Sharing-a-whiteboard).\n\nBreakout rooms are sessions that are split off from the main Zoom meeting. They allow the participants to meet in smaller groups and are completely isolated in terms of audio and video from the main session.\n\n## Prerequisites\n\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **User in breakout room started sharing** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.breakout_room_sharing_started`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.breakout_room_sharing_started"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The main meeting host's account ID."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "breakout_room_uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The main meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The main meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "breakout_room_uuid": {
                            "type": "string",
                            "description": "The breakout room's universally unique identifier (UUID). Each breakout room instance generates a breakout room UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The main meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The main meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The main meeting type: \n* 0 — A prescheduled meeting. \n* 1 — An instant meeting. \n* 2 — A scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 — A [PAC (Personal Audio Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 — A recurring meeting with a fixed time.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "pattern": "(^\\s*$|^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$)",
                            "description": "The main meeting's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The main meeting's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The main scheduled meeting duration."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the meeting participant.",
                            "required": [
                              "user_id",
                              "sharing_details"
                            ],
                            "properties": {
                              "user_id": {
                                "type": "string",
                                "description": "The participant's ID. This is a unique ID assigned to the participant upon joining the meeting and is only valid for that meeting."
                              },
                              "parent_user_id": {
                                "type": "string",
                                "description": "The participant's main meeting user ID (user_id)."
                              },
                              "user_name": {
                                "type": "string",
                                "description": "The participant's username."
                              },
                              "id": {
                                "type": "string",
                                "description": "The participant's user ID. This is the same value used in the [**Users**](/api-reference/zoom-api/methods#tag/Users) APIs if the participant logged in to join the meeting."
                              },
                              "sharing_details": {
                                "type": "object",
                                "description": "Information about the meeting's screenshare.",
                                "required": [
                                  "content",
                                  "link_source",
                                  "file_link",
                                  "date_time",
                                  "source"
                                ],
                                "properties": {
                                  "content": {
                                    "type": "string",
                                    "description": "The type of shared content: \n* application — An application. For example, a web browser. \n* whiteboard — The [Zoom Whiteboard](https://support.zoom.us/hc/en-us/articles/4410916881421). \n* desktop — A user's desktop. \n* airplay — A user's airplay. \n* camera — A user's camera. \n* unknown — An unrecognized application, such as a third party app.",
                                    "enum": [
                                      "application",
                                      "whiteboard",
                                      "desktop",
                                      "airplay",
                                      "camera",
                                      "unknown"
                                    ]
                                  },
                                  "link_source": {
                                    "type": "string",
                                    "description": "The Dropbox sharing method: \n* deep_link — A [deep link](https://en.wikipedia.org/wiki/Deep_linking). \n* in_meeting — A link shared via Zoom. \n* An empty string value if the link source is **not** a Dropbox link.",
                                    "enum": [
                                      "",
                                      "deep_link",
                                      "in_meeting"
                                    ]
                                  },
                                  "file_link": {
                                    "type": "string",
                                    "description": "The Dropbox file's link. This field returns an empty string value if the file link is **not** from a Dropbox source."
                                  },
                                  "date_time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The screenshare's date and time."
                                  },
                                  "source": {
                                    "type": "string",
                                    "description": "The source from which the file was shared: \n* dropbox — A Dropbox source. \n* An empty string value if the source is **not** Dropbox.",
                                    "enum": [
                                      "",
                                      "dropbox"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.breakout_room_sharing_started",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": "1234567890",
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "breakout_room_uuid": "FkQbpP2UR028mDrwzEahqw==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 8,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "participant": {
                          "user_id": "31228928",
                          "parent_user_id": "ABCDE12345",
                          "user_name": "JillChill",
                          "id": "iFxeBPYun6SAiWUzBcEkX",
                          "sharing_details": {
                            "content": "application",
                            "link_source": "in_meeting",
                            "file_link": "",
                            "date_time": "2021-07-13T21:55:52Z",
                            "source": "dropbox"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.alert": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.alert",
        "requestBody": {
          "description": "# meeting.alert\n\nThe **Meeting issues alert** event is triggered every time a service issue is encountered during a meeting scheduled by a user in your account or in accounts that have installed your [webhook-enabled](https://marketplace.zoom.us/docs/api-reference/webhook-reference#enable-webhooks) app.\n\nZoom monitors [meeting statistics](https://support.zoom.us/hc/en-us/articles/202920719-Meeting-Statistics) in regards to the quality of service for each meeting. The following quality metrics can trigger an alert:\n\n* Unstable audio.\n* Unstable video.\n* Poor screen share quality.\n* High CPU usage.\n* Call reconnection problems.\n\n## Prerequisites\n\n* The account **must** hold a [Business or a higher plan](https://zoom.us/pricing) to request this feature,\n* In account settings, the **Meeting quality scores and network alerts on Dashboard** option must be enabled on the dashboard.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n  * A valid **Event Notification Endpoint URL**.\n  * The **Meeting issues alert** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.alert`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.alert"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the meeting."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "issues"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The meeting type: \n* 0 — A prescheduled meeting. \n* 1 — An instant meeting. \n* 2 — A scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 — A [PAC (Personal Audio Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 — A recurring meeting with a fixed time.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "pattern": "(^\\s*$|^\\d{4}-\\d{1,2}-\\d{1,2}T\\d{1,2}:\\d{1,2}:\\d{1,2}Z$)",
                            "description": "The meeting's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled meeting duration."
                          },
                          "issues": {
                            "type": "array",
                            "description": "A list of issues that occurred during the meeting: \n* Unstable audio quality \n* Unstable video quality \n* Unstable screen share quality \n* High CPU occupation \n* Call Reconnection",
                            "items": {
                              "type": "string",
                              "enum": [
                                "Unstable audio quality",
                                "Unstable video quality",
                                "Unstable screen share quality",
                                "High CPU occupation",
                                "Call Reconnection"
                              ]
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.alert",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": "1234567890",
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 2,
                        "join_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "issues": [
                          "Unstable audio quality"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.chat_message_file_sent": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.chat_message_file_sent",
        "requestBody": {
          "description": "# meeting.chat_message_file_sent\nThe **In-meeting chat message file received** event is triggered when a meeting's message file is available to view or download. The event is sent to the configured endpoint in your Marketplace app.\n\n## Prerequisites\n\n* Have Zoom enable the DLP for in-meeting chat feature to use this webhook.\n* Enable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with:\n  * Enable the **In-meeting chat message file received** subscription under the **Meeting** event category.\n* This feature is **only** enabled upon request approval. Contact the [Zoom support team](https://support.zoom.us/hc/en-us/articles/201362003) for more information.\n\n**Event type**: `meeting.chat_message_file_sent`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.chat_message_file_sent"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who hosted the meeting."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the chat message file.",
                        "required": [
                          "meeting_id",
                          "meeting_uuid",
                          "chat_message_file"
                        ],
                        "properties": {
                          "meeting_id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The meeting ID."
                          },
                          "meeting_uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates its own meeting UUID."
                          },
                          "chat_message_file": {
                            "type": "object",
                            "description": "Information about the chat message file.",
                            "required": [
                              "date_time",
                              "sender_session_id",
                              "sender_name",
                              "sender_type",
                              "recipient_type",
                              "message_id",
                              "file_id",
                              "file_name",
                              "file_size",
                              "file_type",
                              "download_url"
                            ],
                            "properties": {
                              "date_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time when the chat message was sent."
                              },
                              "sender_session_id": {
                                "type": "string",
                                "description": "The message sender's session ID."
                              },
                              "sender_name": {
                                "type": "string",
                                "description": "The message sender's name."
                              },
                              "sender_email": {
                                "type": "string",
                                "format": "email",
                                "description": "The message sender's email address."
                              },
                              "sender_type": {
                                "type": "string",
                                "description": "The type of user that sent the message. \n* host - The meeting host. \n* guest - A meeting guest.",
                                "enum": [
                                  "host",
                                  "guest"
                                ]
                              },
                              "recipient_session_id": {
                                "type": "string",
                                "description": "The message recipient's session ID."
                              },
                              "recipient_name": {
                                "type": "string",
                                "description": "The message recipient's name."
                              },
                              "recipient_email": {
                                "type": "string",
                                "format": "email",
                                "description": "The message recipient's email address. Optional only included if it is a private message."
                              },
                              "recipient_type": {
                                "type": "string",
                                "description": "The type of message recipient. \n* host - The meeting host. \n* guest - A meeting guest.",
                                "enum": [
                                  "everyone",
                                  "host",
                                  "guest"
                                ]
                              },
                              "message_id": {
                                "type": "string",
                                "description": "The chat message's UUID."
                              },
                              "file_id": {
                                "type": "string",
                                "description": "The live meeting chat file's UUID, in base64-encoded format."
                              },
                              "file_name": {
                                "type": "string",
                                "description": "The live meeting chat file's name."
                              },
                              "file_size": {
                                "type": "integer",
                                "description": "The live meeting chat file's size, in bytes."
                              },
                              "file_type": {
                                "type": "string",
                                "description": "The live meeting chat file's type."
                              },
                              "download_url": {
                                "type": "string",
                                "description": "The live meeting chat file's download URL."
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.chat_message_file_sent",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "meeting_id": 1234567890,
                        "meeting_uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "chat_message_file": {
                          "date_time": "GMT20220110-072010",
                          "sender_session_id": "26219520",
                          "sender_name": "Jill Chill",
                          "sender_email": "dlp.user@example.com",
                          "sender_type": "host",
                          "recipient_session_id": "38681600",
                          "recipient_name": "John Smith",
                          "recipient_email": "guest.user@example",
                          "recipient_type": "guest",
                          "message_id": "MS17MDQ5NjE4QjYtRjk4Ny00REEwLUFBQUItMTg3QTY0RjU2MzhFfQ==",
                          "file_id": "MS17RDk0QTY3QUQtQkFGQy04QTJFLTI2RUEtNkYxQjRBRTU1MTk5fQ==",
                          "file_name": "example.jpg",
                          "file_size": 3966,
                          "file_type": "jpg",
                          "download_url": "https://file.zoomdev.us/file/hsdAXySKRe2KgS-0YNeSXg/attach/format/plain?decryptType=1&filename=example.jpg&jwt=eyJhbGciOiJIUzI1NiJ9.eyJkaWciOiI3Yzg5YzBhYjIzYmZmMjdjNzE3NTQ4YzdjMTc0Njk3MWYzYjNmNjFjMzU5OTliNjE1ZjdjMWJmMzc5YTJiZThlIiwiYXVkIjoiZmlsZSIsImlzcyI6ImNyb3NzZmlsZSIsImV4cCI6MTY0ODI2NDY5N30.2fQxw3F1cEhvFJmnE2zPOdkHnPeZUktv_P0M--e-Tg8&mode=play"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.deleted": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.deleted",
        "requestBody": {
          "description": "# meeting.deleted\n\nThe **Meeting has been deleted** event is triggered every time a meeting scheduled by one of your app users or account users, is deleted.\n\nA meeting host or a user with admin privileges can delete a scheduled meeting. Users can delete a meeting manually using the **Delete** feature for a meeting via the [Zoom web portal](https://zoom.us) or the Zoom client. Users can also programmatically delete meetings through the [**Delete a Meeting**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods/#operation/meetingDelete) API.\n\n## Prerequisites\n\n* A Pro or higher plan.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Meeting has been deleted** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.deleted`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.deleted"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "operator",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who deleted the meeting."
                      },
                      "operator": {
                        "type": "string",
                        "description": "The email address of the user who deleted the meeting."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who deleted the meeting."
                      },
                      "operation": {
                        "type": "string",
                        "description": "The type of operation performed: \n* all — The change was applied to all meetings. \n* single — The change was applied only to a single meeting.",
                        "enum": [
                          "all",
                          "single"
                        ]
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "uuid",
                          "id",
                          "host_id",
                          "type"
                        ],
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The meeting ID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The meeting type: \n* 0 — A prescheduled meeting. \n* 1 — An instant meeting. \n* 2 — A scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 — A [PAC (Personal Audio Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 — A recurring meeting with a fixed time.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting's start time."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled meeting duration."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "occurrences": {
                            "type": "array",
                            "description": "Information about recurring meetings with fixed times and their occurrences. This only returns when the meeting's type value is 8.",
                            "additionalItems": true,
                            "items": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "occurrence_id",
                                    "start_time"
                                  ],
                                  "properties": {
                                    "occurrence_id": {
                                      "type": "string",
                                      "description": "The meeting occurrence's ID."
                                    },
                                    "start_time": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The meeting's start time."
                                    }
                                  },
                                  "additionalProperties": true
                                }
                              ]
                            }
                          }
                        },
                        "additionalProperties": true
                      }
                    },
                    "additionalProperties": true
                  }
                },
                "additionalProperties": true
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.deleted",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "operator": "admin@example.com",
                      "operator_id": "z8yCxjabcdEFGHfp8uQ",
                      "operation": "single",
                      "object": {
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "id": 1234567890,
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 8,
                        "start_time": "2021-07-13T21:44:51Z",
                        "duration": 60,
                        "timezone": "America/Los_Angeles",
                        "occurrences": [
                          {
                            "occurrence_id": "ABCDE12345",
                            "start_time": "2021-07-13T21:44:51Z"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.participant_feedback": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.participant_feedback",
        "requestBody": {
          "description": "# meeting.participant_feedback\n\nThe **Get participant survey feedback for meetings** event is triggered every time an attendee completes an [end-of-meeting experience feedback survey](https://support.zoom.us/hc/en-us/articles/115005855266-End-of-meeting-experience-feedback-survey) for a meeting. A meeting attendee is a meeting participant or the host.\n\n## Prerequisites\n\nEnable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with:\n\t* A valid **Event Notification Endpoint URL**.\n    * The **Get participant survey feedback for meetings** subscription must be enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.participant_feedback`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The event's name.",
                    "enum": [
                      "meeting.participant_feedback"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who commits the feedback."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the meeting participant.",
                            "required": [
                              "participant_uuid",
                              "participant_user_id",
                              "user_name",
                              "feedback"
                            ],
                            "properties": {
                              "participant_uuid": {
                                "type": "string",
                                "description": "The participant's meeting universally unique ID (UUID). This value is assigned to a participant when they join a meeting, and is only valid for the duration of the meeting. This value will not be changed when the participant joins/leaves a breakout room."
                              },
                              "participant_user_id": {
                                "type": "string",
                                "description": "The participant's universally unique ID (UUID). This value returns blank for users who aren't logged into Zoom."
                              },
                              "user_name": {
                                "type": "string",
                                "description": "The participant's display name."
                              },
                              "feedback": {
                                "type": "object",
                                "description": "Information about the feedback.",
                                "required": [
                                  "satisfied"
                                ],
                                "properties": {
                                  "satisfied": {
                                    "type": "boolean",
                                    "description": "Whether the participant is satisfied."
                                  },
                                  "feedback_details": {
                                    "type": "array",
                                    "description": "The feedback details. This returns null if the satisfied field is true.",
                                    "additionalItems": false,
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "name"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "The feedback ID. \n* 1 — Poor video quality. \n* 2 — Poor audio quality. \n* 5 — Unable to present using share.zoom.us. \n* 7 — Unable to make phone call. \n* 8 — They could not hear us. \n* 9 — We could not hear them. \n* 10 — They could not see us. \n* 11 — We could not see them. \n* 12 — Could not present computer screen. \n* 999 — Others."
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The feedback name."
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "comments": {
                                    "type": "string",
                                    "description": "The participant's comments. This returns null if the satisfied field is true."
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.participant_feedback",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "q6gBJVO5TzexKYTb_I2rpg",
                      "object": {
                        "id": "7357282288",
                        "uuid": "0AErJTQBTI2bSXKyAxIq5A==",
                        "participant": {
                          "participant_uuid": "I2rpg_q6gBJVO5TzexKYTb",
                          "participant_user_id": "zJKyaiAyTNC-MWjiWC18KQ",
                          "user_name": "jchill",
                          "feedback": {
                            "satisfied": true,
                            "feedback_details": [
                              {
                                "id": "2",
                                "name": "Poor audio quality"
                              }
                            ],
                            "comments": "good enough"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.participant_joined": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.participant_joined",
        "requestBody": {
          "description": "# meeting.participant_joined\n\nThe **Participant or Host joined meeting** event is triggered every time an attendee joins a meeting. A meeting attendee is a meeting participant or the host. The meeting host must be a user in your account or a user in any other accounts that have installed your [webhook-enabled](https://developers.zoom.us/docs/api/rest/webhook-reference/#enable-webhooks) app.\n\n## Prerequisites\n\n* Enable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Participant or Host joined meeting** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.participant_joined`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The event's name.",
                    "enum": [
                      "meeting.participant_joined"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the meeting."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "uuid",
                          "host_id",
                          "type",
                          "duration",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The meeting type. \n* 0 - A prescheduled meeting. \n* 1 - An instant meeting. \n* 2 - A scheduled meeting. \n* 3 - A recurring meeting with no fixed time. \n* 4 - A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 - A [PAC (Personal Audio Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 - A recurring meeting with a fixed time.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "pattern": "(^\\s*$|^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$)",
                            "description": "The meeting's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting's [timezone](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled meeting duration."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the meeting participant. If the participant is **not** part of the host's account, email returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details.",
                            "required": [
                              "user_id",
                              "user_name",
                              "email",
                              "join_time"
                            ],
                            "properties": {
                              "user_id": {
                                "type": "string",
                                "description": "The participant's meeting user ID. This value is assigned to a participant when they join a meeting, and is only valid for the duration of the meeting."
                              },
                              "user_name": {
                                "type": "string",
                                "description": "The participant's display name."
                              },
                              "id": {
                                "type": "string",
                                "description": "The participant's universally unique ID (UUID). \n* If the participant joins the meeting by logging into Zoom, this value is the id value in the [**Get a user**](/api-reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the meeting **without** logging into Zoom, this returns an empty string value. \n\n This value returns blank for external users.\n\n**Note:** Use the participant_user_id value instead of this value. We will remove this response in a future release."
                              },
                              "participant_uuid": {
                                "type": "string",
                                "description": "The participant's UUID for this specific meeting and any breakout rooms created in this meeting. This value is assigned to a participant when they join a meeting, and is only valid for the duration of that meeting."
                              },
                              "join_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time when the participant joined the meeting."
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "description": "The participant's email address. This response only returns if the participant joined the meeting by logging into Zoom. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details."
                              },
                              "registrant_id": {
                                "type": "string",
                                "description": "The participant's registrant ID. A host or a user with administrative permissions can require [registration for Zoom meetings](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0065026)."
                              },
                              "participant_user_id": {
                                "type": "string",
                                "description": "The participant's universally unique ID (UUID). \n* If the participant joins the meeting by logging into Zoom, this value is the id value in the [**Get a user**](/api-reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the meeting **without** logging into Zoom, this returns an empty string value.\n\n This value returns blank for external users."
                              },
                              "customer_key": {
                                "type": "string",
                                "description": "The participant's SDK identifier. This value can be alphanumeric."
                              },
                              "phone_number": {
                                "type": "string",
                                "description": "Phone number of participant joined via PSTN.",
                                "example": "8615250064084"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.participant_joined",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": "1234567890",
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 8,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "participant": {
                          "user_id": "1234567890",
                          "user_name": "Jill Chill",
                          "id": "iFxeBPYun6SAiWUzBcEkX",
                          "participant_uuid": "55555AAAiAAAAAiAiAiiAii",
                          "date_time": "2021-07-13T21:44:51Z",
                          "email": "jchill@example.com",
                          "registrant_id": "abcdefghij0-klmnopq23456",
                          "participant_user_id": "rstuvwxyza789-cde",
                          "customer_key": "349589LkJyeW",
                          "phone_number": "8615250064084"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "user.tsp_deleted": {
      "post": {
        "tags": [
          "user"
        ],
        "operationId": "user.tsp_deleted",
        "requestBody": {
          "description": "# user.tsp_deleted\n\nThe **A user's TSP account was deleted** event is triggered every time a TSP user account is deleted.\n\nZoom allows certain carrier partners to provision Telephony Service Provider (TSP) audio to users. For users to use TSP audio, carrier partners must create a TSP user account with Zoom for the users. Zoom account owners and admins can [delete an existing TSP user account](/api-reference/zoom-api/methods#operation/userTSPDelete).\n\n## Prerequisites\n\n* A Pro or higher plan with TSP Configurations enabled.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* The **A user's TSP account was deleted** subscription must be enabled under the **TSP** event.\n\n\n\n**Event type**: `user.tsp_deleted`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "user.tsp_deleted"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who deleted the TSP."
                      },
                      "operator": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user who deleted the TSP."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who deleted the TSP."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the deleted user.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The user's ID."
                          },
                          "email": {
                            "type": "string",
                            "description": "The user's email address."
                          },
                          "tsp_credentials": {
                            "type": "object",
                            "description": "Information about the deleted user's TSP credentials.",
                            "properties": {
                              "conference_code": {
                                "type": "string",
                                "description": "The TSP conference code."
                              },
                              "leader_pin": {
                                "type": "string",
                                "description": "The leader PIN."
                              },
                              "tsp_bridge": {
                                "type": "string",
                                "description": "The TSP bridge zone."
                              },
                              "dial_in_numbers": {
                                "type": "array",
                                "description": "Information about the TSP dial-in numbers.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "The country code."
                                    },
                                    "number": {
                                      "type": "string",
                                      "description": "The dial-in phone number."
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The type of the phone number: \n* toll — Toll number. \n* tollfree — Toll free number. \n* media_link — Media link.",
                                      "enum": [
                                        "toll",
                                        "tollfree",
                                        "media_link"
                                      ]
                                    },
                                    "country_label": {
                                      "type": "string",
                                      "description": "The TSP country label: \n* US_TSP_TB \n* EU_TSP_TB",
                                      "enum": [
                                        "US_TSP_TB",
                                        "EU_TSP_TB"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ]
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "user.tsp_deleted",
                    "event_ts": 1234566789900,
                    "payload": {
                      "account_id": "Mtgfdgfgd2lxiA",
                      "operator": "admin@example.com",
                      "operator_id": "DYdgdg64567g8w",
                      "object": {
                        "tsp_credentials": {
                          "id": "2",
                          "conference_code": "123456789",
                          "leader_pin": "123456",
                          "dial_in_numbers": [
                            {
                              "code": "1",
                              "number": "123456789",
                              "type": "toll"
                            },
                            {
                              "code": "93",
                              "number": "980000021",
                              "type": "tollfree"
                            },
                            {
                              "code": "1",
                              "number": "2222456532",
                              "type": "media_link"
                            }
                          ]
                        },
                        "email": "jchill@example.com",
                        "id": "DYbbbbf7dPkkg8w"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "recording.deleted": {
      "post": {
        "tags": [
          "recording"
        ],
        "operationId": "recording.deleted",
        "requestBody": {
          "description": "# recording.deleted\n\nThis event is triggered when a user permanently deletes a cloud recording.\n\nWhen a user initially deletes a recording, it is sent to the trash. At this stage, the recording can still be recovered for up to 30 days after deletion. To permanently delete a recording, users must delete it from the trash.\n\nUsers can permanently delete a recording via the [**Delete meeting recordings**](/api-reference/zoom-api/ma#operation/recordingDelete) API with the `delete` query parameter or in the [Zoom web portal](https://support.zoom.us/hc/en-us/articles/205347605-Recording-Management).\n\n## Prerequisites\n\n* A Pro or higher plan.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Recording files have been permanently deleted** subscription enabled under the **Recording** event.\n\n\n\n**Event type**: `recording.deleted`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "recording.deleted"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object",
                      "operator",
                      "operator_id"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user that completed the meeting or webinar recording."
                      },
                      "operator": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user who deleted the recording."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who deleted the recording."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the webinar or meeting recording.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "account_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "share_url",
                          "total_size",
                          "recording_count",
                          "recording_files"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The ID of the recorded meeting (meetingId) or webinar (webinarId)."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The universally unique identifier (UUID) of the recorded meeting or webinar instance."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The ID of the user set as the host of the meeting or webinar."
                          },
                          "account_id": {
                            "type": "string",
                            "description": "The account ID of the user that completed the meeting or webinar recording."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting or webinar topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The type of recorded meeting or webinar: \n\n If the recording is of a meeting: \n* 1 — Instant meeting. \n* 2 — Scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A meeting created via PMI (Personal Meeting ID). \n* 7 — A [Personal Audio Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) (PAC). \n* 8 - Recurring meeting with a fixed time. \n\n If the recording is of a webinar: \n* 5 — A webinar. \n* 6 — A recurring webinar without a fixed time. \n* 9 — A recurring webinar with a fixed time. \n\n If the recording is **not** from a meeting or webinar: \n\n* 99 — A recording uploaded via the [**Recordings**](https://zoom.us/recording) interface on the Zoom Web Portal.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9,
                              99
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting or webinar's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting or webinar's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The meeting or webinar's scheduled duration."
                          },
                          "share_url": {
                            "type": "string",
                            "description": "The URL at which approved users can view the recording."
                          },
                          "total_size": {
                            "type": "integer",
                            "description": "The recording file's total size, in bytes."
                          },
                          "recording_count": {
                            "type": "integer",
                            "description": "The number of recording files deleted."
                          },
                          "recording_files": {
                            "type": "array",
                            "description": "Information about the deleted recording files.",
                            "items": {
                              "type": "object",
                              "required": [
                                "id",
                                "meeting_id",
                                "recording_start",
                                "recording_end",
                                "file_type",
                                "file_size",
                                "file_extension",
                                "download_url",
                                "status",
                                "recording_type"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The recording file's ID."
                                },
                                "meeting_id": {
                                  "type": "string",
                                  "description": "The meeting's ID."
                                },
                                "recording_start": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The date and time at which recording started."
                                },
                                "recording_end": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The date and time at which recording ended."
                                },
                                "file_type": {
                                  "type": "string",
                                  "description": "The type of the recording file.",
                                  "enum": [
                                    "MP4",
                                    "M4A",
                                    "CHAT",
                                    "TRANSCRIPT",
                                    "CSV",
                                    "TB",
                                    "CC",
                                    "CHAT_MESSAGE",
                                    "SUMMARY",
                                    "TIMELINE"
                                  ]
                                },
                                "file_size": {
                                  "type": "integer",
                                  "description": "The recording file's size, in bytes."
                                },
                                "file_extension": {
                                  "type": "string",
                                  "description": "The file extension type of the recording file.",
                                  "enum": [
                                    "MP4",
                                    "M4A",
                                    "TXT",
                                    "VTT",
                                    "CSV",
                                    "JSON",
                                    "JPG"
                                  ]
                                },
                                "file_name": {
                                  "type": "string",
                                  "description": "The recording file's name."
                                },
                                "play_url": {
                                  "type": "string",
                                  "description": "The URL at which the recording file can be opened and played."
                                },
                                "download_url": {
                                  "type": "string",
                                  "description": "The URL at which to download the the recording. \n\n **JWT apps** \n\n To access a private or password-protected cloud recording of a user in your account, use a [Zoom JWT app](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app). Use the generated JWT token as the value of the access_token query parameter and include this query parameter at the end of the URL. \n\n https://{{base-domain}}/recording/download/{{path-to-file-download}}?access_token={{JWT-token}} \n\n **OAuth apps** \n\n If a user has authorized and installed your OAuth app that contains recording scopes, use the user's [OAuth access token](https://developers.zoom.us/docs/integrations/oauth/) to download the file. For example: \n\n https://{{base-domain}}/rec/archive/download/xxx?access_token={{OAuth-access-token}}. \n\n**Note:** We recommend that you send the access_token as a Bearer token in the Authorization header, for example: \"Authorization\": \"Bearer <ACCESS_TOKEN>”."
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The recording file's processing status: \n* completed — The processing of the file is complete. \n* processing — The file is processing.",
                                  "enum": [
                                    "completed",
                                    "processing"
                                  ]
                                },
                                "recording_type": {
                                  "type": "string",
                                  "description": "The recording file type. \n* shared_screen_with_speaker_view(CC) \n* shared_screen_with_speaker_view \n* shared_screen_with_gallery_view \n* gallery_view \n* shared_screen \n* audio_only \n* audio_transcript \n* chat_file \n* active_speaker \n* host_video \n* audio_only_each_participant \n* cc_transcript \n* closed_caption \n* poll \n* timeline \n* thumbnail \n* audio_interpretation \n* summary \n* summary_next_steps \n* summary_smart_chapters \n*sign_interpretation \n*production_studio \n\n For more information, read our [Managing and sharing cloud recordings](https://support.zoom.us/hc/en-us/articles/205347605-Managing-and-sharing-cloud-recordings#h_9898497b-e736-4980-a749-d55608f10773) documentation.",
                                  "enum": [
                                    "shared_screen_with_speaker_view(CC)",
                                    "shared_screen_with_speaker_view",
                                    "shared_screen_with_gallery_view",
                                    "gallery_view",
                                    "shared_screen",
                                    "audio_only",
                                    "audio_transcript",
                                    "chat_file",
                                    "active_speaker",
                                    "host_video",
                                    "audio_only_each_participant",
                                    "cc_transcript",
                                    "closed_caption",
                                    "poll",
                                    "timeline",
                                    "thumbnail",
                                    "audio_interpretation",
                                    "summary",
                                    "summary_next_steps",
                                    "summary_smart_chapters",
                                    "sign_interpretation",
                                    "production_sutdio"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "participant_audio_files": {
                            "type": "array",
                            "description": "Information about the participants' deleted audio files.",
                            "items": {
                              "type": "object",
                              "required": [
                                "id",
                                "recording_start",
                                "recording_end",
                                "file_type",
                                "file_size",
                                "file_extension",
                                "file_name",
                                "download_url",
                                "status"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The participant audio file's ID."
                                },
                                "recording_start": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The participant audio file's start time."
                                },
                                "recording_end": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The participant audio file's end time."
                                },
                                "file_type": {
                                  "type": "string",
                                  "description": "The participant audio file's format."
                                },
                                "file_name": {
                                  "type": "string",
                                  "description": "The participant audio file's name."
                                },
                                "file_size": {
                                  "type": "integer",
                                  "description": "The participant audio file's size, in bytes."
                                },
                                "file_extension": {
                                  "type": "string",
                                  "description": "The participant audio file's extension."
                                },
                                "play_url": {
                                  "type": "string",
                                  "description": "The URL at which the participant audio file can be opened and played."
                                },
                                "download_url": {
                                  "type": "string",
                                  "description": "The URL at which to download the the recording. \n\n **JWT apps** \n\n To access a private or password-protected cloud recording of a user in your account, use a [Zoom JWT app](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app). Use the generated JWT token as the value of the access_token query parameter and include this query parameter at the end of the URL. \n\n https://{{base-domain}}/recording/download/{{path-to-file-download}}?access_token={{JWT-token}} \n\n **OAuth apps** \n\n If a user has authorized and installed your OAuth app that contains recording scopes, use the user's [OAuth access token](https://developers.zoom.us/docs/integrations/oauth/) to download the file. For example: \n\nhttps://{{base-domain}}/rec/archive/download/xxx?access_token={{OAuth-access-token}} \n\n **Note:** This field does **not** return for [Zoom On-Premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). Instead, this API will return the file_path field."
                                },
                                "file_path": {
                                  "type": "string",
                                  "description": "The file path to the On-Premise account recording. \n\n **Note:** This API returns this field for [Zoom On-Premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). It does **not** return the download_url field."
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The participant audio file's processing status: \n* completed — The processing of the file is complete. \n* processing — The file is processing.",
                                  "enum": [
                                    "completed",
                                    "processing"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "recording.deleted",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "operator": "admin@example.com",
                      "operator_id": "I7zp-pYbTl22Z29H796Ixg",
                      "object": {
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "id": 1234567890,
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "account_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Personal Recording",
                        "type": 4,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "share_url": "https://example.com",
                        "total_size": 3328371,
                        "recording_count": 2,
                        "recording_files": [
                          {
                            "id": "ed6c2f27-2ae7-42f4-b3d0-835b493e4fa8",
                            "meeting_id": "098765ABCD",
                            "recording_start": "2021-03-23T22:14:57Z",
                            "recording_end": "2021-03-23T23:15:41Z",
                            "file_type": "M4A",
                            "file_size": 246560,
                            "play_url": "https://example.com/recording/play/Qg75t7xZBtEbAkjdlgbfdngBBBB",
                            "download_url": "https://example.com/recording/download/Qg75t7xZBtEbAkjdlgbfdngBBBB",
                            "status": "completed",
                            "recording_type": "audio_only"
                          },
                          {
                            "id": "388ffb46-1541-460d-8447-4624451a1db7",
                            "meeting_id": "098765ABCD",
                            "recording_start": "2021-03-23T22:14:57Z",
                            "recording_end": "2021-03-23T23:15:41Z",
                            "file_type": "MP4",
                            "file_size": 282825,
                            "play_url": "https://example.com/recording/play/Qg75t7xZBtEbAkjdlgbfdngCCCC",
                            "download_url": "https://example.com/recording/download/Qg75t7xZBtEbAkjdlgbfdngCCCC",
                            "status": "completed",
                            "recording_type": "shared_screen_with_speaker_view"
                          }
                        ],
                        "participant_audio_files": [
                          {
                            "id": "GF6c2f27-2ae7-42f4-b3d0-835b493e4fa8",
                            "recording_start": "2021-03-23T22:14:57Z",
                            "recording_end": "2021-03-23T23:15:41Z",
                            "file_type": "M4A",
                            "file_size": 246560,
                            "play_url": "https://example.com/recording/play/Qg75t7xZBtEbAkjdlgbfdngBBBB",
                            "download_url": "https://example.com/recording/download/Qg75t7xZBtEbAkjdlgbfdngBBBB",
                            "status": "completed",
                            "recording_type": "audio_only"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "recording.paused": {
      "post": {
        "tags": [
          "recording"
        ],
        "operationId": "recording.paused",
        "requestBody": {
          "description": "# recording.paused\n\nThe **Recording Paused** event is triggered every time a recording is paused by one of your app's users or account users.\n\nAll users with a Pro or a higher plan have access to [cloud recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording). An account owner or account admin can [enable cloud recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording#h_29fc1846-190d-4f05-ab23-1070c8106ec8) for all account members as well as for members that belong to a certain group. Users can also enable cloud recordings [for their own use](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording#h_4cca2458-cbd5-4439-933c-57c0d62a2753).\n\nOnly a host or a co-host of the meeting/webinar can start, pause, resume or stop a [cloud recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording).\n\n## Prerequisites\n\n* A Pro or a higher plan.\n* Cloud recording must be enabled on the users' account.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Recording Paused** subscription must be enabled under the **Recording** event.\n\n\n\n**Event type**: `recording.paused`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "recording.paused"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user that started the meeting or webinar recording."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting or webinar recording.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "recording_file"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The ID of the recorded meeting (meetingId) or webinar (webinarId)."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The universally unique identifier (UUID) of the recorded meeting or webinar instance."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The ID of the user set as the host of the meeting or webinar."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting or webinar topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The type of recorded meeting or webinar: \n\n If the recording is of a meeting: \n* 1 — Instant meeting. \n* 2 — Scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A meeting created via PMI (Personal Meeting ID). \n* 7 — A [Personal Audio Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) (PAC). \n* 8 - Recurring meeting with a fixed time. \n\n If the recording is of a webinar: \n* 5 — A webinar. \n* 6 — A recurring webinar without a fixed time. \n* 9 — A recurring webinar with a fixed time. \n\n If the recording is **not** from a meeting or webinar: \n\n* 99 — A recording uploaded via the [**Recordings**](https://zoom.us/recording) interface on the Zoom Web Portal.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9,
                              99
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting or webinar's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting or webinar's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The meeting or webinar's scheduled duration."
                          },
                          "recording_file": {
                            "description": "Information about the recording files.",
                            "type": "object",
                            "required": [
                              "recording_start",
                              "recording_end"
                            ],
                            "properties": {
                              "recording_start": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time at which the recording started."
                              },
                              "recording_end": {
                                "type": "string",
                                "description": "The date and time at which the recording ended.",
                                "anyOf": [
                                  {
                                    "format": "date-time"
                                  },
                                  {
                                    "enum": [
                                      ""
                                    ]
                                  }
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "recording.paused",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": 1234567890,
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Personal Recording",
                        "type": 4,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "recording_file": {
                          "recording_start": "2021-03-23T22:14:57Z",
                          "recording_end": "2021-03-23T23:15:41Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.participant_room_system_callout_ringing": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.participant_room_system_callout_ringing",
        "requestBody": {
          "description": "# meeting.participant_room_system_callout_ringing\n\nThe **Invited party's phone (call out) ringing in Zoom room** event is triggered every time a user's phone is ringing when they were invited to [join a meeting through phone (call out) from a Zoom room](https://support.zoom.us/hc/en-us/articles/205369035).\n\n## Prerequisites\n\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n* A valid **Event Notification Endpoint URL**.\n* The **Invited party's phone (call out) ringing in Zoom room** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.participant_room_system_callout_ringing`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.participant_room_system_callout_ringing"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the meeting host."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "message_id",
                          "inviter_name",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The user ID of the meeting host."
                          },
                          "message_id": {
                            "type": "string",
                            "description": "The request unique identifier (UUID)."
                          },
                          "inviter_name": {
                            "type": "string",
                            "description": "The user name of the event's trigger."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the invited participant.",
                            "required": [
                              "call_type",
                              "device_ip"
                            ],
                            "properties": {
                              "call_type": {
                                "type": "string",
                                "description": "The type of call out. Use a value of h323 or sip."
                              },
                              "device_ip": {
                                "type": "string",
                                "description": "The user's device IP address."
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.participant_room_system_callout_ringing",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "dzVA4QmMQfyISoRcpFO8CA",
                      "object": {
                        "id": 713592696,
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "ICuPoX4ERtikRcKqkVxunQ",
                        "message_id": "atsXxhSEQWit9t+U02HXNQ==",
                        "inviter_name": "Jill Chill",
                        "participant": {
                          "call_type": "h323",
                          "device_ip": "10.100.111.237"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "recording.started": {
      "post": {
        "tags": [
          "recording"
        ],
        "operationId": "recording.started",
        "requestBody": {
          "description": "# recording.started\n\nThe **Recording Started** event is triggered every time a recording is started by one of your app users or account users.\n\nAll users with a Pro or a higher plan have access to [cloud recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording). An account owner or account admin can [enable cloud recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording#h_29fc1846-190d-4f05-ab23-1070c8106ec8) for all account members as well as for members that belong to a certain group. Users can also enable cloud recordings [for their own use](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording#h_4cca2458-cbd5-4439-933c-57c0d62a2753).\n\nOnly a host or a co-host of the meeting/webinar can [start cloud recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording#h_7420acb5-1897-4061-87b4-5b76e99c03b4) of the meeting/webinar.\n\n## Prerequisites\n\n* A Pro or higher plan.\n* Cloud recording must be enabled on the users' account.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Recording Started** subscription must be enabled under the **Recording** event.\n\n\n\n**Event type**: `recording.started`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "recording.started"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user that started the meeting or webinar recording."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting or webinar recording.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "recording_file"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The ID of the recorded meeting (meetingId) or webinar (webinarId)."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The universally unique identifier (UUID) of the recorded meeting or webinar instance."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The ID of the user set as the host of the meeting or webinar."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting or webinar topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The type of recorded meeting or webinar: \n\n If the recording is of a meeting: \n* 1 — Instant meeting. \n* 2 — Scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A meeting created via PMI (Personal Meeting ID). \n* 7 — A [Personal Audio Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) (PAC). \n* 8 - Recurring meeting with a fixed time. \n\n If the recording is of a webinar: \n* 5 — A webinar. \n* 6 — A recurring webinar without a fixed time. \n* 9 — A recurring webinar with a fixed time. \n\n If the recording is **not** from a meeting or webinar: \n\n* 99 — A recording uploaded via the [**Recordings**](https://zoom.us/recording) interface on the Zoom Web Portal.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9,
                              99
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting or webinar's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting or webinar's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The meeting or webinar's scheduled duration."
                          },
                          "recording_file": {
                            "description": "Information about the recording files.",
                            "type": "object",
                            "required": [
                              "recording_start",
                              "recording_end"
                            ],
                            "properties": {
                              "recording_start": {
                                "type": "string",
                                "description": "The date and time at which the recording started.",
                                "anyOf": [
                                  {
                                    "format": "date-time"
                                  },
                                  {
                                    "enum": [
                                      ""
                                    ]
                                  }
                                ]
                              },
                              "recording_end": {
                                "type": "string",
                                "description": "The date and time at which the recording ended.",
                                "anyOf": [
                                  {
                                    "format": "date-time"
                                  },
                                  {
                                    "enum": [
                                      ""
                                    ]
                                  }
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "recording.started",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": 1234567890,
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Personal Recording",
                        "type": 4,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "recording_file": {
                          "recording_start": "2021-03-23T22:14:57Z",
                          "recording_end": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "user.tsp_updated": {
      "post": {
        "tags": [
          "user"
        ],
        "operationId": "user.tsp_updated",
        "requestBody": {
          "description": "# user.tsp_updated\n\nThe **A user's TSP account was updated** event is triggered every time a [user's TSP account information is updated](/api-reference/zoom-api/methods#operation/userTSPUpdate).\n\nZoom allows certain carrier partners to provision Telephony Service Provider (TSP) audio to users. For users to use TSP audio, carrier partners must create a TSP user account with Zoom for the users.\n\n## Prerequisites\n\n* A Pro or higher plan with TSP Configurations enabled.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* The **A user's TSP account was updated** subscription must be enabled under the **TSP** event.\n\n\n\n**Event type**: `user.tsp_updated`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "user.tsp_updated"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who updated the TSP."
                      },
                      "operator": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user who updated the TSP."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who updated the TSP."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the updated user.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The user's ID."
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "description": "The user's email address."
                          },
                          "tsp_credentials": {
                            "type": "object",
                            "description": "Information about the updated user's TSP credentials.",
                            "properties": {
                              "conference_code": {
                                "type": "string",
                                "description": "The TSP conference code."
                              },
                              "leader_pin": {
                                "type": "string",
                                "description": "The leader PIN."
                              },
                              "tsp_bridge": {
                                "type": "string",
                                "description": "The TSP bridge zone."
                              },
                              "dial_in_numbers": {
                                "type": "array",
                                "description": "Information about the TSP dial-in numbers.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "The country code."
                                    },
                                    "number": {
                                      "type": "string",
                                      "description": "The dial-in phone number."
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The type of the phone number: \n* toll — Toll number. \n* tollfree — Toll free number. \n* media_link — Media link.",
                                      "enum": [
                                        "toll",
                                        "tollfree",
                                        "media_link"
                                      ]
                                    },
                                    "country_label": {
                                      "type": "string",
                                      "description": "The TSP country label: \n* US_TSP_TB \n* EU_TSP_TB",
                                      "enum": [
                                        "US_TSP_TB",
                                        "EU_TSP_TB"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "old_object": {
                    "type": "object",
                    "description": "Information about the updated user's previous settings.",
                    "properties": {
                      "changed_field_name": {
                        "description": "The updated field name and its previous value.",
                        "type": [
                          "string",
                          "integer",
                          "boolean",
                          "null"
                        ],
                        "$changed_category": {
                          "type": "object",
                          "description": "The modified category.",
                          "properties": {
                            "$changed_field_name": {
                              "description": "The updated field name and its previous value.",
                              "type": [
                                "string",
                                "boolean",
                                "integer",
                                "null"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ]
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "user.tsp_updated",
                    "event_ts": 1234566789900,
                    "payload": {
                      "account_id": "Mtgfdgfgd2lxiA",
                      "operator": "admin@example.com",
                      "operator_id": "DYdgdg64567g8w",
                      "object": {
                        "email": "jchill@example.com",
                        "id": "DYbbbbf7dPkkg8w"
                      },
                      "old_object": {
                        "email": "jillchill@example.com"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "webinar.ended": {
      "post": {
        "tags": [
          "webinar"
        ],
        "operationId": "webinar.ended",
        "requestBody": {
          "description": "# webinar.ended\n\nThe **End Webinar** event is triggered every time a user in your account or your app ends a Webinar.\n\nZoom users with a [Webinar Plan](https://zoom.us/webinar) have permissions for creating and managing Webinars. [Zoom Video Webinar](https://support.zoom.us/hc/en-us/articles/200917029-Getting-Started-With-Webinar) allows users to broadcast a Zoom meeting to up to 1000 attendees. A Webinar host can start and end a Webinar.\n\n## Prerequisites\n\n* Pro or a higher plan with Webinar license.\n* **Event Subscription** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **End Webinar** subscription enabled under the **Webinar** event.\n\n\n\n**Event type**: `webinar.ended`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "webinar.ended"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who ended the webinar."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the webinar.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "timezone",
                          "duration"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The webinar ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The webinar's universally unique identifier (UUID). Each webinar instance generates a webinar UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The webinar host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The webinar's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The webinar type: \n* 5 — A webinar. \n* 6 — A recurring webinar without a fixed time. \n* 9 — A recurring webinar with a fixed time.",
                            "enum": [
                              5,
                              6,
                              9
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The webinar's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The webinar's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "end_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date and time at which the webinar ended."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled webinar duration."
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "webinar.ended",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": 1234567890,
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Webinar",
                        "type": 5,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "end_time": "2021-07-13T23:00:51Z",
                        "duration": 60
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "webinar.recovered": {
      "post": {
        "tags": [
          "webinar"
        ],
        "operationId": "webinar.recovered",
        "requestBody": {
          "description": "# webinar.recovered\n\nThe **Webinar has been recovered** event is triggered every time a user recovers a previously-deleted webinar. The user must be a user on your account or on any other accounts that have installed your [webhook-enabled](https://marketplace.zoom.us/docs/api-reference/webhook-reference#enable-webhooks) app.\n\nZoom users can restore previously-deleted webinars for up to one week after deletion. Any invitations, links, and webinar IDs sent prior to the webinar's deletion will still work after a user [recovers](https://support.zoom.us/hc/en-us/articles/360038297111-Recovering-a-deleted-meeting-or-webinar) it.\n\n## Prerequisites\n\n* Enable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Webinar has been recovered** subscription enabled under the **Webinar** event.\n\n\n\n**Event type**: `webinar.recovered`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "webinar.recovered"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "operator",
                      "operator_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who recovered the webinar."
                      },
                      "operator": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user who recovered the webinar."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who recovered the webinar."
                      },
                      "operation": {
                        "type": "string",
                        "description": "The type of operation performed: \n* all — The change was applied to all webinars. \n* single — The change was applied only to a single webinar.",
                        "enum": [
                          "all",
                          "single"
                        ]
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the webinar.",
                        "required": [
                          "uuid",
                          "id",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "timezone"
                        ],
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "description": "The webinar's universally unique identifier (UUID). Each webinar instance generates a webinar UUID."
                          },
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The webinar ID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The webinar host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The webinar's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The webinar type: \n* 5 — A webinar. \n* 6 — A recurring webinar without a fixed time. \n* 9 — A recurring webinar with a fixed time.",
                            "enum": [
                              5,
                              6,
                              9
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The webinar's start time."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled webinar duration."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The webinar's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "occurrences": {
                            "type": "array",
                            "description": "Information about recurring webinars with fixed times and their occurrences. This only returns when the webinar's type value is 9.",
                            "additionalItems": true,
                            "items": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "occurrence_id",
                                    "start_time"
                                  ],
                                  "properties": {
                                    "occurrence_id": {
                                      "type": "string",
                                      "description": "The webinar occurrence's ID."
                                    },
                                    "start_time": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The webinar's start time."
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "webinar.recovered",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "operator": "admin@example.com",
                      "operator_id": "z8yCxjabcdEFGHfp8uQ",
                      "operation": "single",
                      "object": {
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "id": 1234567890,
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Webinar",
                        "type": 9,
                        "start_time": "2021-07-13T21:44:51Z",
                        "duration": 60,
                        "timezone": "America/Los_Angeles",
                        "occurrences": [
                          {
                            "occurrence_id": "1677637740000",
                            "start_time": "2023-03-01T02:29:00Z"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.participant_admitted": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.participant_admitted",
        "requestBody": {
          "description": "# meeting.participant_admitted\n\nThe **Participant was admitted into a meeting** event is triggered every time [a meeting host admits the participant from a waiting room to the meeting](https://support.zoom.us/hc/en-us/articles/115000332726-Waiting-Room#h_f493a86f-7d08-4e3b-9d6d-9b236fe9cdcd). The meeting host must be a user in your account or a user in any other accounts that have installed your [webhook-enabled](https://marketplace.zoom.us/docs/api-reference/webhook-reference#enable-webhooks) app.\n\nWhen a participant joins a [waiting room](https://support.zoom.us/hc/en-us/articles/115000332726-Waiting-Room), the meeting host is notified in the Zoom client. The host has the option to admit the participant to the meeting or remove the participant from the waiting room and the meeting.\n\n## Prerequisites\n\n* Enable the [**waiting room**](https://support.zoom.us/hc/en-us/articles/115000332726-Waiting-Room) feature for the meeting.\n* Enable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Participant was admitted into a meeting** subscription must be enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.participant_admitted`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.participant_admitted"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the meeting."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The meeting type. \n* 0 - A prescheduled meeting. \n* 1 - An instant meeting. \n* 2 - A scheduled meeting. \n* 3 - A recurring meeting with no fixed time. \n* 4 - A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 - A [PAC (Personal Audio Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 - A recurring meeting with a fixed time.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting's [timezone](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled meeting duration."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the meeting participant. If the participant is **not** part of the host's account, email returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details.",
                            "required": [
                              "user_id",
                              "email",
                              "date_time"
                            ],
                            "properties": {
                              "user_id": {
                                "type": "string",
                                "description": "The participant's meeting user ID. This value is assigned to a participant upon joining a meeting and is only valid for the duration of the meeting."
                              },
                              "user_name": {
                                "type": "string",
                                "description": "The participant's display name."
                              },
                              "id": {
                                "type": "string",
                                "description": "The participant's universally unique ID (UUID). \n* If the participant joins the meeting by logging into Zoom, this value is the id value in the [**Get a user**](/api-reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the meeting **without** logging into Zoom, this returns an empty (””) value."
                              },
                              "participant_uuid": {
                                "type": "string",
                                "description": "The participant's meeting universally unique ID (UUID). This value is assigned to a participant upon joining a meeting and is only valid for the duration of the meeting. This value will not be changed when the participant joins/leaves a breakout room."
                              },
                              "date_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time when the participant joined the meeting."
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "description": "The participant's email address. This response only returns if the participant joined the meeting by logging into Zoom. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#email-address) for details."
                              },
                              "customer_key": {
                                "type": "string",
                                "description": "The participant's SDK identifier. This value can be alphanumeric."
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.participant_admitted",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "operator": "admin@example.com",
                      "operator_id": "z8yCxjabcdEFGHfp8uQ",
                      "operation": "single",
                      "object": {
                        "id": "1234567890",
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 2,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "participant": {
                          "user_id": "1234567890",
                          "user_name": "Jill Chill",
                          "id": "iFxeBPYun6SAiWUzBcEkX",
                          "participant_uuid": "55555AAAiAAAAAiAiAiiAii",
                          "date_time": "2021-07-13T21:44:51Z",
                          "email": "jchill@example.com",
                          "customer_key": "349589LkJyeW"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.participant_room_system_callout_failed": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.participant_room_system_callout_failed",
        "requestBody": {
          "description": "# meeting.participant_room_system_callout_failed\n\nThe **Meeting invitation through phone (call out) via Zoom room failed** event is triggered every time an invitation to [join a meeting through phone (call out) from a Zoom room](https://support.zoom.us/hc/en-us/articles/205369035) fails.\n\n## Prerequisites\n\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n* A valid **Event Notification Endpoint URL**.\n* The **Meeting invitation through phone (call out) via Zoom room failed** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.participant_room_system_callout_failed`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.participant_room_system_callout_failed"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the meeting host."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "message_id",
                          "inviter_name",
                          "reason_type",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The user ID of the meeting host."
                          },
                          "message_id": {
                            "type": "string",
                            "description": "The request unique identifier (UUID)."
                          },
                          "inviter_name": {
                            "type": "string",
                            "description": "The user name of the event's trigger."
                          },
                          "reason_type": {
                            "type": "integer",
                            "description": "reason type for failure: \n* 1 — Encryption_Fail. \n* 2 — Disconnected_By_Remote. \n* 3 — Retry. \n* 4 — Bad_Seq. \n* 5 — Call_Limit. \n* 6 — Not_Registered. \n* 7 — Timeout. \n* 8 — Bad_Addr. \n* 9 — Unreachable \n* 10 — Disconnect_By_Local \n* 11 — Server_Internal_Error \n* 12 — Exceed_Free_Port \n* 13 — Connect_Error \n* 14 — Proxy_Connect_Error \n* 0 — Other_Failed_Reason.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8,
                              9,
                              10,
                              11,
                              12,
                              13,
                              14
                            ]
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the invited participant.",
                            "required": [
                              "call_type",
                              "device_ip"
                            ],
                            "properties": {
                              "call_type": {
                                "type": "string",
                                "description": "The type of call out. Use a value of h323 or sip."
                              },
                              "device_ip": {
                                "type": "string",
                                "description": "The user's device IP address."
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.participant_room_system_callout_failed",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "dzVA4QmMQfyISoRcpFO8CA",
                      "object": {
                        "id": 713592696,
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "ICuPoX4ERtikRcKqkVxunQ",
                        "message_id": "atsXxhSEQWit9t+U02HXNQ==",
                        "inviter_name": "Jill Chill",
                        "reason_type": 1,
                        "participant": {
                          "call_type": "h323",
                          "device_ip": "10.100.111.237"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "recording.resumed": {
      "post": {
        "tags": [
          "recording"
        ],
        "operationId": "recording.resumed",
        "requestBody": {
          "description": "# recording.resumed\n\nThe **Recording Resumed** event is triggered every time a previously paused recording of a meeting or webinar is resumed.\n\nAll users with a Pro or a higher plan have access to [cloud recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording). An account owner or account admin can [enable cloud recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording#h_29fc1846-190d-4f05-ab23-1070c8106ec8) for all account members as well as for members that belong to a certain group. Users can also enable cloud recordings [for their own use](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording#h_4cca2458-cbd5-4439-933c-57c0d62a2753).\n\nOnly a host or a co-host of the meeting/webinar can start, pause, resume, and stop a [cloud recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording). A host/co-host can resume a paused recording of a meeting or a webinar.\n\n## Prerequisites\n\n* A Pro or higher plan.\n* Cloud recording must be enabled on the users' account.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Recording Resumed** subscription must be enabled under the **Recording** event.\n\n\n\n**Event type**: `recording.resumed`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "recording.resumed"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user that resumed the meeting or webinar recording."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting or webinar recording.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "recording_file"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The ID of the recorded meeting (meetingId) or webinar (webinarId)."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The universally unique identifier (UUID) of the recorded meeting or webinar instance."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The ID of the user set as the host of the meeting or webinar."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting or webinar topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The type of recorded meeting or webinar: \n\n If the recording is of a meeting: \n* 1 — Instant meeting. \n* 2 — Scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A meeting created via PMI (Personal Meeting ID). \n* 7 — A [Personal Audio Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) (PAC). \n* 8 - Recurring meeting with a fixed time. \n\n If the recording is of a webinar: \n* 5 — A webinar. \n* 6 — A recurring webinar without a fixed time. \n* 9 — A recurring webinar with a fixed time. \n\n If the recording is **not** from a meeting or webinar: \n\n* 99 — A recording uploaded via the [**Recordings**](https://zoom.us/recording) interface on the Zoom Web Portal.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9,
                              99
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting or webinar's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting or webinar's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The meeting or webinar's scheduled duration."
                          },
                          "recording_file": {
                            "description": "Information about the recording files.",
                            "type": "object",
                            "required": [
                              "recording_start",
                              "recording_end"
                            ],
                            "properties": {
                              "recording_start": {
                                "type": "string",
                                "description": "The date and time at which recording started.",
                                "anyOf": [
                                  {
                                    "format": "date-time"
                                  },
                                  {
                                    "enum": [
                                      ""
                                    ]
                                  }
                                ]
                              },
                              "recording_end": {
                                "type": "string",
                                "description": "The date and time at which the recording ended.",
                                "anyOf": [
                                  {
                                    "format": "date-time"
                                  },
                                  {
                                    "enum": [
                                      ""
                                    ]
                                  }
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "recording.resumed",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": 1234567890,
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Personal Recording",
                        "type": 4,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "recording_file": {
                          "recording_start": "2021-03-23T22:14:57Z",
                          "recording_end": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "webinar.participant_role_changed": {
      "post": {
        "tags": [
          "webinar"
        ],
        "operationId": "webinar.participant_role_changed",
        "requestBody": {
          "description": "# webinar.participant_role_changed\n\nThe **Participant role changed** event is triggered every time a host or webinar attendee changes the role during a webinar created by one of your app users or account users. A webinar host can invite other users to attend the webinar.\n\nZoom users with a [Webinar plan](https://zoom.us/webinar) have access to creating and managing webinars. [Zoom webinars](https://support.zoom.us/hc/en-us/articles/200917029-Getting-Started-With-Webinar) let users to broadcast a Zoom meeting to up to 1,000 attendees.\n\n## Prerequisites\n\n* Pro or a higher plan with Webinar license.\n* Enable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Participant role changed** subscription enabled under the **Webinar** event.\n\n\n\n**Event type**: `webinar.participant_role_changed`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The event's name.",
                    "enum": [
                      "webinar.participant_role_changed"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the webinar."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the webinar.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "timezone",
                          "duration",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The webinar ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The webinar's universally unique identifier (UUID). Each webinar instance generates a webinar UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The webinar host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The webinar's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The webinar type: \n* 5 — A webinar. \n* 6 — A recurring webinar without a fixed time. \n* 9 — A recurring webinar with a fixed time.",
                            "enum": [
                              5,
                              6,
                              9
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "pattern": "(^\\s*$|^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$)",
                            "description": "The webinar's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The webinar's [timezone](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled webinar duration."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the webinar participant.",
                            "required": [
                              "user_id",
                              "user_name",
                              "email",
                              "date_time",
                              "old_role",
                              "new_role"
                            ],
                            "properties": {
                              "user_id": {
                                "type": "string",
                                "description": "The participant's webinar user ID. This value is assigned to a participant upon joining a webinar and is only valid for the duration of the webinar."
                              },
                              "user_name": {
                                "type": "string",
                                "description": "The participant's display name."
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "description": "The participant's email address. This response only returns if the participant joined the webinar by logging into Zoom. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. For more information, read our [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) documentation."
                              },
                              "registrant_id": {
                                "type": "string",
                                "description": "The participant's registrant ID. (A host or a user with administrative permissions can require [registration for Zoom meetings](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0065026))."
                              },
                              "participant_user_id": {
                                "type": "string",
                                "description": "The participant's universally unique ID (UUID). \n* If the participant joins the webinar by logging into Zoom, this value is the id value in the [**Get a user**](/api-reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the webinar **without** logging into Zoom, this returns an empty string value.\n\nThis value returns blank for external users"
                              },
                              "participant_uuid": {
                                "type": "string",
                                "description": "The participant's UUID for this specific webinar. This value is assigned to a participant when they join a webinar, and is only valid for the duration of that webinar."
                              },
                              "date_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time when the participant changed the [role](https://support.zoom.us/hc/en-us/articles/360000252726-Roles-in-a-Zoom-Webinar)."
                              },
                              "old_role": {
                                "type": "string",
                                "description": "The participant's previous role. \n* host — Host. \n* co-host — Co-host. \n* attendee — Attendee.",
                                "enum": [
                                  "host",
                                  "co-host",
                                  "attendee"
                                ]
                              },
                              "new_role": {
                                "type": "string",
                                "description": "The participant's new role. \n* host — Host. \n* co-host — Co-host. \n* attendee — Attendee.",
                                "enum": [
                                  "host",
                                  "co-host",
                                  "attendee"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "webinar.participant_role_changed",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": "1234567890",
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Webinar",
                        "type": 9,
                        "start_time": "2021-07-13T21:44:51Z",
                        "duration": 60,
                        "timezone": "America/Los_Angeles",
                        "participant": {
                          "user_id": "1234567890",
                          "user_name": "JillChill",
                          "email": "jchill@example.com",
                          "registrant_id": "abcdefghij0-klmnopq23456",
                          "participant_user_id": "rstuvwxyza789-cde",
                          "customer_key": "349589LkJyeW",
                          "date_time": "2021-07-13T21:44:51Z",
                          "old_role": "host",
                          "new_role": "co-host"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.participant_phone_callout_missed": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.participant_phone_callout_missed",
        "requestBody": {
          "description": "# meeting.participant_phone_callout_missed\n\nThe **Invited party missed a meeting invitation through phone (call out)** event is triggered every time an invitation to [join a meeting through phone (call out)](https://support.zoom.us/hc/en-us/articles/4404535651085) times out.\n\n## Prerequisites\n\nEnable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with these configurations.\n* A valid **Event Notification Endpoint URL**.\n* The **Invited party missed a meeting invitation through phone (call out)** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.participant_phone_callout_missed`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.participant_phone_callout_missed"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The meeting host's account ID."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the invited participant.",
                            "required": [
                              "invitee_name",
                              "phone_number"
                            ],
                            "properties": {
                              "invitee_name": {
                                "type": "string",
                                "description": "The user's name to display in the meeting."
                              },
                              "phone_number": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The user's phone number."
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.participant_phone_callout_missed",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "dzVA4QmMQfyISoRcpFO8CA",
                      "object": {
                        "id": 713592696,
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "ICuPoX4ERtikRcKqkVxunQ",
                        "participant": {
                          "invitee_name": "Jill Chill",
                          "phone_number": 1800000000
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.summary_updated": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.summary_updated",
        "requestBody": {
          "description": "# meeting.summary_updated\nThe **Meeting summary has been updated** event is triggered every time one of your app users or account users updates a meeting summary.\n\n## Prerequisites\n\n* Host user must have a Pro or higher plan.\n* Enable the **Meeting Summary with AI Companion** feature in the host's account.\n* E2ee meetings do not have summary feature enabled.\n* Enable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Meeting summary has been updated** subscription enabled under the **Meeting** event.\n\n**Event type**: `meeting.summary_updated`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The event's name.",
                    "enum": [
                      "meeting.summary_updated"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "operator",
                      "operator_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who hosted the meeting."
                      },
                      "operator": {
                        "type": "string",
                        "description": "The email address of the user who updated the meeting summary."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who updated the meeting summary."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting summary.",
                        "required": [
                          "meeting_host_id",
                          "meeting_host_email",
                          "meeting_uuid",
                          "meeting_id",
                          "meeting_topic",
                          "meeting_start_time",
                          "meeting_end_time",
                          "summary_start_time",
                          "summary_end_time",
                          "summary_created_time",
                          "summary_last_modified_time",
                          "summary_title",
                          "summary_details",
                          "next_steps",
                          "edited_summary"
                        ],
                        "properties": {
                          "meeting_host_id": {
                            "type": "string",
                            "description": "The ID of the user who is set as the meeting host."
                          },
                          "meeting_host_email": {
                            "type": "string",
                            "format": "email",
                            "description": "The meeting host's email address."
                          },
                          "meeting_uuid": {
                            "type": "string",
                            "description": "Unique meeting ID. Each meeting instance generates its own meeting UUID. After a meeting ends, a new UUID is generated for the next instance of the meeting. Retrieve a list of UUIDs from past meeting instances using the [**List past meeting instances**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods/#operation/pastMeetings) API. [Double encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid) your UUID when using it for API calls if the UUID begins with a / or contains // in it.\n"
                          },
                          "meeting_id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-) - the meeting's unique identifier in **long** format, represented as int64 data type in JSON. Also known as the meeting number."
                          },
                          "meeting_topic": {
                            "type": "string",
                            "description": "Meeting topic."
                          },
                          "meeting_start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting's start date and time."
                          },
                          "meeting_end_time": {
                            "type": "string",
                            "description": "The meeting's end date and time.",
                            "format": "date-time",
                            "example": "2020-07-15T23:30:19Z"
                          },
                          "summary_start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The summary's start date and time."
                          },
                          "summary_end_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The summary's end date and time."
                          },
                          "summary_created_time": {
                            "type": "string",
                            "description": "The date and time when the meeting summary was created.",
                            "format": "date-time"
                          },
                          "summary_last_modified_time": {
                            "type": "string",
                            "description": "The date and time when the meeting summary was last modified.",
                            "format": "date-time"
                          },
                          "summary_title": {
                            "type": "string",
                            "description": "The summary title."
                          },
                          "summary_overview": {
                            "type": "string",
                            "description": "The summary overview."
                          },
                          "summary_details": {
                            "type": "array",
                            "description": "The summary content details.",
                            "items": {
                              "type": "object",
                              "required": [
                                "label",
                                "summary"
                              ],
                              "properties": {
                                "label": {
                                  "type": "string",
                                  "description": "The summary label."
                                },
                                "summary": {
                                  "type": "string",
                                  "description": "The summary content."
                                }
                              },
                              "description": "The summary detail object."
                            }
                          },
                          "next_steps": {
                            "type": "array",
                            "description": "The next steps.",
                            "items": {
                              "type": "string",
                              "description": "The next step."
                            }
                          },
                          "edited_summary": {
                            "type": "object",
                            "description": "Information about the edited meeting summary.",
                            "properties": {
                              "summary_details": {
                                "type": "string",
                                "description": "The user-edited summary details."
                              },
                              "next_steps": {
                                "type": "array",
                                "description": "The user-edited next steps.",
                                "items": {
                                  "type": "string",
                                  "description": "The user-edited next step."
                                }
                              }
                            }
                          }
                        },
                        "additionalProperties": true
                      }
                    },
                    "additionalProperties": true
                  }
                },
                "additionalProperties": true
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.summary_updated",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "dzVA4QmMQfyISoRcpFO8CA",
                      "operator": "admin@example.com",
                      "operator_id": "z8yCxjabcdEFGHfp8uQ",
                      "object": {
                        "meeting_host_id": "30R7kT7bTIKSNUFEuH_Qlg",
                        "meeting_host_email": "jchill@example.com",
                        "meeting_uuid": "aDYlohsHRtCd4ii1uC2+hA==",
                        "meeting_id": 97763643886,
                        "meeting_topic": "My Meeting",
                        "meeting_start_time": "2019-07-15T23:24:52Z",
                        "meeting_end_time": "2020-07-15T23:30:19Z",
                        "summary_start_time": "2019-07-15T23:24:52Z",
                        "summary_end_time": "2020-07-15T23:30:19Z",
                        "summary_created_time": "2019-07-15T23:24:52Z",
                        "summary_last_modified_time": "2020-07-15T23:30:19Z",
                        "summary_title": "Meeting Summary for my meeting",
                        "summary_overview": "Meeting Overview",
                        "summary_details": [
                          {
                            "label": "Meeting Overview",
                            "summary": "Meeting Overview"
                          }
                        ],
                        "next_steps": [
                          "step1"
                        ],
                        "edited_summary": {
                          "summary_details": "Meeting overview",
                          "next_steps": [
                            "step1"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "webinar.participant_joined": {
      "post": {
        "tags": [
          "webinar"
        ],
        "operationId": "webinar.participant_joined",
        "requestBody": {
          "description": "# webinar.participant_joined\n\nThe **Participant/Host joined webinar** event is triggered every time a host or an attendee joins a webinar that was created by one of your app users or account users.\n\nZoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing webinars. A webinar host can invite other users to attend the webinar. <br>[Zoom Video Webinar](https://support.zoom.us/hc/en-us/articles/200917029-Getting-Started-With-Webinar) allows users to broadcast a Zoom meeting to up to 1000 attendees.\n\n## Prerequisites\n\n* Pro or a higher plan with Webinar license.\n* Enable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Participant/Host joined webinar** subscription enabled under the **Webinar** event.\n\n\n\n**Event type**: `webinar.participant_joined`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The event's name.",
                    "enum": [
                      "webinar.participant_joined"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the webinar."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the webinar.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "timezone",
                          "duration",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The webinar ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The webinar's universally unique identifier (UUID). Each webinar instance generates a webinar UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The webinar host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The webinar's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The webinar type: \n* 5 - A webinar. \n* 6 - A recurring webinar without a fixed time. \n* 9 - A recurring webinar with a fixed time.",
                            "enum": [
                              5,
                              6,
                              9
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "pattern": "(^\\s*$|^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$)",
                            "description": "The webinar's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The webinar's [timezone](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled webinar duration."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the webinar participant. If the participant is **not** part of the host's account, email returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details.",
                            "required": [
                              "user_id",
                              "user_name",
                              "id",
                              "email",
                              "join_time"
                            ],
                            "properties": {
                              "user_id": {
                                "type": "string",
                                "description": "The participant's webinar user ID. This value is assigned to a participant upon joining a webinar and is only valid for the duration of the webinar."
                              },
                              "user_name": {
                                "type": "string",
                                "description": "The participant's display name."
                              },
                              "id": {
                                "type": "string",
                                "description": "The participant's universally unique ID (UUID). \n* If the participant joins the webinar by logging into Zoom, this value is the id value in the [**Get a user**](/api-reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the webinar **without** logging into Zoom, this returns an empty string value. \n\n This value returns blank for external users.\n\n This value returns blank for external users.\n\n **Note:** Use the participant_user_id value instead of this value. We will remove this response in a future release."
                              },
                              "join_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time when the participant joined the webinar."
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "description": "The participant's email address. This response only returns if the participant joined the webinar by logging into Zoom. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details."
                              },
                              "registrant_id": {
                                "type": "string",
                                "description": "The participant's registrant ID. (A host or a user with administrative permissions can require [registration for Zoom meetings](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0065026))."
                              },
                              "participant_user_id": {
                                "type": "string",
                                "description": "The participant's universally unique ID (UUID). \n* If the participant joins the webinar by logging into Zoom, this value is the id value in the [**Get a user**](/api-reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the webinar **without** logging into Zoom, this returns an empty string value."
                              },
                              "participant_uuid": {
                                "type": "string",
                                "description": "The participant's UUID for this specific webinar. This value is assigned to a participant when they join a webinar, and is only valid for the duration of that webinar."
                              },
                              "customer_key": {
                                "type": "string",
                                "description": "The participant's SDK identifier. This value can be alphanumeric."
                              },
                              "phone_number": {
                                "type": "string",
                                "description": "Phone number of participant joined via PSTN.",
                                "example": "8615250064084"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "webinar.participant_joined",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": "1234567890",
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Webinar",
                        "type": 9,
                        "start_time": "2021-07-13T21:44:51Z",
                        "duration": 60,
                        "timezone": "America/Los_Angeles",
                        "participant": {
                          "user_id": "1234567890",
                          "user_name": "Jill Chill",
                          "id": "iFxeBPYun6SAiWUzBcEkX",
                          "join_time": "2021-07-13T21:44:51Z",
                          "email": "jchill@example.com",
                          "registrant_id": "abcdefghij0-klmnopq23456",
                          "participant_user_id": "rstuvwxyza789-cde",
                          "participant_uuid": "55555AAAiAAAAAiAiAiiAii",
                          "customer_key": "349589LkJyeW",
                          "phone_number": "8615250064084"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "recording.renamed": {
      "post": {
        "tags": [
          "recording"
        ],
        "operationId": "recording.renamed",
        "requestBody": {
          "description": "# recording.renamed\n\nThe **Recording Renamed** event is triggered every time the title of a cloud recording is changed.\n\nAll users with a Pro or a higher plan have access to [cloud recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording). After a meeting or a webinar which was being recorded to the cloud ends, the recording is made available on the host's [Zoom account](https://zoom.us/recording).\n\nBy default, the title of the recording is the same as the topic of the meeting or the webinar that was recorded. However, a meeting host, an account admin or an account owner can rename the title of the recording using the Zoom Web Portal. To do so, the user must navigate to the [**Cloud Recordings**](https://zoom.us/recording) in the Zoom Web Portal, click on the recording that needs to be renamed and click on the pencil icon to rename the title of the recording.\n\n## Prerequisites\n\n* A Pro or higher plan.\n* Cloud recording must be enabled on the users' account.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event notification endpoint URL**.\n\t* The **Recording Renamed** subscription must be enabled under the **Recording** event.\n\n\n\n**Event type**: `recording.renamed`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "recording.renamed"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "operator",
                      "operator_id",
                      "time_stamp",
                      "object",
                      "old_object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user that renamed the meeting or webinar recording."
                      },
                      "operator": {
                        "type": "string",
                        "description": "The email address of the user that renamed the meeting or webinar recording."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user Id of the user that renamed the meeting or webinar recording."
                      },
                      "time_stamp": {
                        "type": "number",
                        "description": "A timestamp at which the user renamed the meeting or webinar recording."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about meeting or webinar recording.",
                        "required": [
                          "uuid",
                          "id",
                          "topic",
                          "type",
                          "host_id"
                        ],
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "description": "The universally unique identifier (UUID) of the recorded meeting or webinar instance."
                          },
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The ID of the recorded meeting (meetingId) or webinar (webinarId)."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The updated recording title."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The type of recorded meeting or webinar: \n\n If the recording is of a meeting: \n* 1 — Instant meeting. \n* 2 — Scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A meeting created via PMI (Personal Meeting ID). \n* 7 — A [Personal Audio Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) (PAC). \n* 8 - Recurring meeting with a fixed time. \n\n If the recording is of a webinar: \n* 5 — A webinar. \n* 6 — A recurring webinar without a fixed time. \n* 9 — A recurring webinar with a fixed time. \n\n If the recording is **not** from a meeting or webinar: \n\n* 99 — A recording uploaded via the [**Recordings**](https://zoom.us/recording) interface on the Zoom Web Portal.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9,
                              99
                            ]
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The ID of the user set as the host of the meeting or webinar."
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "recording.renamed",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "operator": "admin@example.com",
                      "operator_id": "z8yCxjabcdEFGHfp8uQ",
                      "time_stamp": "1628705277325",
                      "object": {
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "id": 1234567890,
                        "topic": "My Old Personal Recording",
                        "type": 4,
                        "host_id": "I6zp-pPbTl22Z29H786Ixg"
                      },
                      "recording_file": {
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "id": 1234567890,
                        "topic": "My New Personal Recording",
                        "type": 4,
                        "host_id": "I6zp-pPbTl22Z29H786Ixg"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "user.tsp_created": {
      "post": {
        "tags": [
          "user"
        ],
        "operationId": "user.tsp_created",
        "requestBody": {
          "description": "# user.tsp_created\n\nThe **A user's TSP account was created** event is triggered every time a [TSP user account is created](/api-reference/zoom-api/methods#operation/userTSPCreate) in Zoom.\n\nZoom allows certain carrier partners to provision Telephony Service Provider (TSP) audio to users. For users to use TSP audio, carrier partners must create a TSP user account with Zoom for the users.\n\n## Prerequisites\n\n* A Pro or higher plan with TSP Configurations enabled.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* The **A user's TSP account was created** subscription must be enabled under the **TSP** event.\n\n\n\n**Event type**: `user.tsp_created`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "user.tsp_created"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the TSP."
                      },
                      "operator": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user who created the TSP."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who created the TSP."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the created user.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The user's ID."
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "description": "The user's email address."
                          },
                          "tsp_credentials": {
                            "type": "object",
                            "description": "Information about the user's TSP credentials.",
                            "properties": {
                              "conference_code": {
                                "type": "string",
                                "description": "The TSP conference code."
                              },
                              "leader_pin": {
                                "type": "string",
                                "description": "The leader PIN."
                              },
                              "tsp_bridge": {
                                "type": "string",
                                "description": "The TSP bridge zone."
                              },
                              "dial_in_numbers": {
                                "type": "array",
                                "description": "Information about the TSP dial-in numbers.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string",
                                      "description": "The country code."
                                    },
                                    "number": {
                                      "type": "string",
                                      "description": "The dial-in phone number."
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The type of the phone number: \n* toll — Toll number. \n* tollfree — Toll free number. \n* media_link — Media link.",
                                      "enum": [
                                        "toll",
                                        "tollfree",
                                        "media_link"
                                      ]
                                    },
                                    "country_label": {
                                      "type": "string",
                                      "description": "The TSP country label: \n* US_TSP_TB \n* EU_TSP_TB",
                                      "enum": [
                                        "US_TSP_TB",
                                        "EU_TSP_TB"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ]
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "user.tsp_created",
                    "event_ts": 1234566789900,
                    "payload": {
                      "account_id": "Mtgfdgfgd2lxiA",
                      "operator": "admin@example.com",
                      "operator_id": "DYdgdg64567g8w",
                      "object": {
                        "tsp_credentials": {
                          "id": "2",
                          "conference_code": "123456789",
                          "leader_pin": "123456",
                          "dial_in_numbers": [
                            {
                              "code": "1",
                              "number": "123456789",
                              "type": "toll"
                            },
                            {
                              "code": "93",
                              "number": "980000021",
                              "type": "tollfree"
                            },
                            {
                              "code": "1",
                              "number": "2222456532",
                              "type": "media_link"
                            }
                          ]
                        },
                        "email": "jchill@example.com",
                        "id": "DYbbbbf7dPkkg8w"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.participant_jbh_waiting_left": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.participant_jbh_waiting_left",
        "requestBody": {
          "description": "# meeting.participant_jbh_waiting_left\n\nThe **Waiting participant left meeting before host joined** event is triggered every time an attendee waiting for the host to join the meeting leaves before the host. The host of the meeting must be a user in your account or users in any other accounts that have installed your [webhook-enabled](https://developers.zoom.us/docs/api/rest/webhook-reference/#enable-webhooks) app.\n\nWhen scheduling a meeting, the organizer or host of the meeting can enable the **Enable join before host** option. This allows attendees to join the meeting before the host of the meeting arrives. This meeting also starts as soon as the first meeting participant joins.\n\nIf this option is **disabled**, participants are prompted to wait for the host to arrive before joining the meeting.\n\n## Prerequisites\n\n* A Pro or a higher plan.\n* Enable the **Enable join before host** option for the scheduled meeting.\n* Enable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Waiting participant left meeting before host joined** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.participant_jbh_waiting_left`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.participant_jbh_waiting_left"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the meeting."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The meeting type. \n* 0 - A prescheduled meeting. \n* 1 - An instant meeting. \n* 2 - A scheduled meeting. \n* 3 - A recurring meeting with no fixed time. \n* 4 - A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 - A [PAC (personal audio conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 - A recurring meeting with a fixed time.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting's [timezone](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled meeting duration."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the meeting participant.",
                            "required": [
                              "user_name"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The participant's universally unique ID (UUID). \n* If the participant joins the meeting by logging into Zoom, this value is the id value in the [**Get a user**](/api-reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the meeting **without** logging into Zoom, this returns an empty string value."
                              },
                              "user_name": {
                                "type": "string",
                                "description": "The participant's display name."
                              },
                              "customer_key": {
                                "type": "string",
                                "description": "The participant's SDK identifier. This value can be alphanumeric."
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.participant_jbh_waiting_left",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "id": 1234567890,
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 8,
                        "start_time": "2021-07-13T21:44:51Z",
                        "duration": 60,
                        "timezone": "America/Los_Angeles",
                        "participant": {
                          "id": "iFxeBPYun6SAiWUzBcEkX",
                          "user_name": "JillChill",
                          "customer_key": "349589LkJyeW"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.updated": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.updated",
        "requestBody": {
          "description": "# meeting.updated\n\nThe **Meeting has been updated** event is triggered every time a meeting scheduled by one of your app users or account users, is updated.\n\nA meeting host or a user with admin privileges can update a scheduled meeting. Update the meeting manually via the **Edit** feature in the [Zoom web portal](https://zoom.us) or the Zoom client, or programmatically update a meeting via the [**Update a meeting**](/docs/api-reference/zoom-api/methods#operation/meetingUpdate) API.\n\n## Prerequisites\n\n* A Pro or higher plan.\n* Enable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with:\n\t* A valid **Event Notification Endpoint URL**\n\t* The **Meeting has been updated** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.updated`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.updated"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "operator",
                      "operator_id",
                      "object",
                      "old_object",
                      "time_stamp"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who updated the meeting."
                      },
                      "operator": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user who updated the meeting."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who updated the meeting."
                      },
                      "scope": {
                        "type": "string",
                        "description": "The type of operation performed. \n* all - The change was applied to all meetings. \n* single - The change was applied only to a single meeting.",
                        "enum": [
                          "single",
                          "all"
                        ]
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The meeting type. \n* 0 - A prescheduled meeting. \n* 1 - An instant meeting. \n* 2 - A scheduled meeting. \n* 3 - A recurring meeting with no fixed time. \n* 4 - A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 - A [PAC (Personal Audio Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 - A recurring meeting with a fixed time. \n* 10 - A screen share only meeting.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8,
                              10
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting's start time."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled meeting duration."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting's [timezone](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)."
                          },
                          "join_url": {
                            "type": "string",
                            "description": "The URL participants use to join the meeting."
                          },
                          "password": {
                            "type": "string",
                            "description": "The password required to join the meeting."
                          },
                          "agenda": {
                            "type": "string",
                            "description": "The meeting's agenda."
                          },
                          "registration_url": {
                            "type": "string",
                            "description": "The meeting's registration URL."
                          },
                          "occurrences": {
                            "type": "array",
                            "description": "Information about recurring meetings with fixed times and their occurrences. This only returns when the meeting's type value is 8.",
                            "items": {
                              "type": "object",
                              "required": [
                                "occurrence_id",
                                "start_time"
                              ],
                              "properties": {
                                "occurrence_id": {
                                  "type": "string",
                                  "description": "The meeting occurrence's ID."
                                },
                                "start_time": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The meeting's start time."
                                },
                                "duration": {
                                  "type": "integer",
                                  "description": "The scheduled meeting duration."
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The meeting occurrence status: \n* available \n* deleted",
                                  "enum": [
                                    "available",
                                    "deleted"
                                  ]
                                }
                              },
                              "additionalProperties": true
                            }
                          },
                          "settings": {
                            "type": "object",
                            "description": "Information about the updated meeting settings. This **only** returns updated meeting settings.",
                            "properties": {
                              "host_video": {
                                "type": "boolean",
                                "description": "Whether to start the meeting with the host's video on."
                              },
                              "participant_video": {
                                "type": "boolean",
                                "description": "Whether to turn a participant's video on when they join the meeting. Participants can change this setting during the meeting."
                              },
                              "join_before_host": {
                                "type": "boolean",
                                "description": "Whether to [allow participants to join the meeting before host arrives](https://support.zoom.us/hc/en-us/articles/202828525-Allow-participants-to-join-before-host)."
                              },
                              "jbh_time": {
                                "type": "integer",
                                "description": "If the value of the join_before_host field is true, this field indicates the time limits when a participant can join a meeting before the meeting's host.\n\n* 0 - Allow the participant to join the meeting at any time.\n* 5 - Allow the participant to join 5 minutes before the meeting's start time.\n* 10 - Allow the participant to join 10 minutes before the meeting's start time.",
                                "enum": [
                                  0,
                                  5,
                                  10
                                ]
                              },
                              "mute_upon_entry": {
                                "type": "boolean",
                                "description": "Whether participants are muted upon entry."
                              },
                              "audio": {
                                "type": "string",
                                "description": "The available audio options for participants joining the meeting. \n* telephony - Telephony only. \n* voip - VoIP only. \n* both - Both Telephony and VoIP.",
                                "enum": [
                                  "telephony",
                                  "voip",
                                  "both"
                                ]
                              },
                              "auto_recording": {
                                "type": "string",
                                "description": "The [automatic recording](https://support.zoom.us/hc/en-us/articles/202921119-Automatic-Recording) settings for the meeting. \n* local - Record and save to the local device. \n* cloud - Record and save to the cloud. \n* none - Automatic recording disabled.",
                                "enum": [
                                  "local",
                                  "cloud",
                                  "none"
                                ]
                              },
                              "use_pmi": {
                                "type": "boolean",
                                "description": "Whether to use a [Personal Meeting ID (PMI)](https://support.zoom.us/hc/en-us/articles/203276937-Using-Personal-Meeting-ID-PMI) instead of an auto-generated meeting ID. PMIs are only available for scheduled meetings, instant meetings, and recurring meetings with no fixed time."
                              },
                              "waiting_room": {
                                "type": "boolean",
                                "description": "Whether to enable a [waiting room](https://support.zoom.us/hc/en-us/articles/115000332726-Waiting-Room)."
                              },
                              "watermark": {
                                "type": "boolean",
                                "description": "Whether to enable the [watermark](https://support.zoom.us/hc/en-us/articles/209605273-Adding-a-Watermark) feature."
                              },
                              "enforce_login": {
                                "type": "boolean",
                                "description": "Whether to only allow signed in users to join the meeting."
                              },
                              "enforce_login_domains": {
                                "type": "string",
                                "description": "A list of the domains allowed to join the meeting."
                              },
                              "approval_type": {
                                "type": "integer",
                                "description": "The [approval type](https://support.zoom.us/hc/en-us/articles/211579443-Scheduling-a-meeting-with-registration) for meeting registrants. \n* 0 - Automatically approve registrants. \n* 1 - Manually approve registrants. \n* 2 - Meeting registration not required.",
                                "enum": [
                                  0,
                                  1,
                                  2
                                ]
                              },
                              "registration_type": {
                                "type": "integer",
                                "description": "The meeting registration setting for recurring meetings. \n* 1 - Attendees register once and can attend any of the meeting occurrences. \n* 2 - Attendees must register for each occurrence to attend. \n* 3 - Attendees register once and can select one or more occurrences to attend.",
                                "enum": [
                                  1,
                                  2,
                                  3
                                ]
                              },
                              "alternative_hosts": {
                                "type": "string",
                                "description": "A semicolon-separated list of the meeting's alternative hosts' email addresses or IDs."
                              },
                              "meeting_authentication": {
                                "type": "boolean",
                                "description": "Whether only authenticated users can join the meeting."
                              },
                              "authentication_option": {
                                "type": "string",
                                "description": "The [authentication](https://support.zoom.us/hc/en-us/articles/4406604615693) option ID value."
                              },
                              "authentication_name": {
                                "type": "string",
                                "description": "The authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472)."
                              },
                              "authentication_domains": {
                                "type": "string",
                                "description": "A list of the allowed authenticated domains."
                              },
                              "meeting_invitees": {
                                "type": "array",
                                "description": "A list of the meeting's invitees.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "email": {
                                      "type": "string",
                                      "description": "The invitee's email address.",
                                      "format": "email"
                                    }
                                  }
                                }
                              },
                              "language_interpretation": {
                                "type": "object",
                                "required": [
                                  "enable"
                                ],
                                "properties": {
                                  "enable": {
                                    "type": "boolean",
                                    "description": "Whether to enable [language interpretation](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars) for the meeting."
                                  },
                                  "interpreters": {
                                    "type": "array",
                                    "description": "Information about the meeting's language interpreters.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "email": {
                                          "type": "string",
                                          "description": "The interpreter's email address.",
                                          "format": "email"
                                        },
                                        "languages": {
                                          "type": "string",
                                          "description": "A comma-separated list of the interpreter's languages. The string must contain two [country IDs](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#countries). \n\nFor example, if the interpreter will translate from English to Chinese, then this value will be US,CN."
                                        }
                                      }
                                    }
                                  }
                                },
                                "description": "The meeting's [language interpretation settings](https://support.zoom.us/hc/en-us/articles/360034919791-Language-interpretation-in-meetings-and-webinars). Make sure to add the language in the web portal in order to use it in the API. See link for details. \n\n**Note:** This feature is only available for certain Meeting add-on, Education, and Business and higher plans. If this feature is not enabled on the host's account, this setting will **not** be applied to the meeting."
                              },
                              "sign_language_interpretation": {
                                "type": "object",
                                "required": [
                                  "enable"
                                ],
                                "properties": {
                                  "enable": {
                                    "type": "boolean",
                                    "description": "Whether to enable [sign language interpretation](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar) for the meeting."
                                  },
                                  "interpreters": {
                                    "maximum": 20,
                                    "type": "array",
                                    "description": "Information about the meeting's sign language interpreters.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "email": {
                                          "type": "string",
                                          "description": "The interpreter's email address.",
                                          "format": "email"
                                        },
                                        "sign_language": {
                                          "type": "string",
                                          "description": "The interpreter's sign language. \n\n To get this value, use the sign_language_interpretation object's languages and custom_languages values in the [**Get user settings**](/api-reference/zoom-api/methods#operation/userSettings) API response."
                                        }
                                      }
                                    }
                                  }
                                },
                                "description": "The meeting's [sign language interpretation settings](https://support.zoom.us/hc/en-us/articles/9644962487309-Using-sign-language-interpretation-in-a-meeting-or-webinar). Make sure to add the language in the web portal in order to use it in the API. See link for details. \n\n**Note:** If this feature is not enabled on the host's account, this setting will **not** be applied to the meeting."
                              },
                              "continuous_meeting_chat": {
                                "type": "object",
                                "properties": {
                                  "enable": {
                                    "type": "boolean",
                                    "description": "Whether to enable the **Enable continuous meeting chat** setting."
                                  },
                                  "auto_add_invited_external_users": {
                                    "type": "boolean",
                                    "description": "Whether to enable the **Automatically add invited external users** setting."
                                  }
                                },
                                "description": "Information about the **Enable continuous meeting chat** feature."
                              },
                              "auto_start_meeting_summary": {
                                "type": "boolean",
                                "description": "Whether to automatically start a meeting summary."
                              },
                              "auto_start_ai_companion_questions": {
                                "type": "boolean",
                                "description": "Whether to automatically start AI Companion questions."
                              }
                            },
                            "additionalProperties": true
                          },
                          "recurrence": {
                            "type": "object",
                            "description": "Information about [recurring meetings](https://developers.zoom.us/docs/api/rest/other-references/recurrence-object-definitions/).",
                            "properties": {
                              "type": {
                                "type": "integer",
                                "description": "The type of recurring meeting. \n* 1 - Daily. \n* 2 - Weekly. \n* 3 - Monthly.",
                                "enum": [
                                  1,
                                  2,
                                  3
                                ]
                              },
                              "repeat_interval": {
                                "type": "integer",
                                "description": "The meeting's repeat interval. \n* For daily intervals, a max of 90 days. \n* For a weekly interval, a max of 12 weeks. \n* For monthly intervals, a max of 3 months."
                              },
                              "weekly_days": {
                                "type": "string",
                                "description": "A comma-separated list of the days of the week when the recurring weekly meeting occurs. \n* 1 - Sunday \n* 2 - Monday \n* 3 - Tuesday \n* 4 - Wednesday \n* 5 - Thursday \n* 6 - Friday \n* 7 - Saturday",
                                "enum": [
                                  "1",
                                  "2",
                                  "3",
                                  "4",
                                  "5",
                                  "6",
                                  "7"
                                ]
                              },
                              "monthly_day": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 31,
                                "description": "The day of the month when the recurring monthly meeting occurs. The value ranges from 1 to 31."
                              },
                              "monthly_week_day": {
                                "type": "integer",
                                "description": "The day of the week when the recurring monthly meeting is scheduled. \n* 1 - Sunday \n* 2 - Monday \n* 3 - Tuesday \n* 4 - Wednesday \n* 5 - Thursday \n* 6 - Friday \n* 7 - Saturday",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6,
                                  7
                                ]
                              },
                              "end_times": {
                                "type": "integer",
                                "description": "The number of times the recurring meeting will occur before it is canceled."
                              },
                              "end_date_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The recurring meeting's final ending date and time before it is canceled, in UTC format."
                              },
                              "monthly_week": {
                                "type": "integer",
                                "description": "The week of the month when a recurring meeting occurs. \n* -1 - The last week of the month. \n* 1 - The first week. \n* 2 - The second week. \n* 3 - The third week. \n* 4 - The fourth week.",
                                "enum": [
                                  -1,
                                  1,
                                  2,
                                  3,
                                  4
                                ]
                              }
                            },
                            "additionalProperties": true
                          },
                          "tracking_fields": {
                            "type": "array",
                            "description": "Information about the meeting's [tracking fields](https://support.zoom.us/hc/en-us/articles/115000293426-Scheduling-Tracking-Fields).",
                            "items": {
                              "type": "object",
                              "properties": {
                                "field": {
                                  "type": "string",
                                  "description": "The tracking field's label."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The tracking field's value."
                                }
                              },
                              "additionalProperties": true
                            }
                          }
                        },
                        "additionalProperties": true
                      },
                      "time_stamp": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The meeting's update timestamp, in milliseconds."
                      }
                    },
                    "additionalProperties": true
                  }
                },
                "additionalProperties": true
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.updated",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "operator": "admin@example.com",
                      "operator_id": "z8yCxjabcdEFGHfp8uQ",
                      "scope": "single",
                      "object": {
                        "id": 1234567890,
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 8,
                        "start_time": "2021-07-13T21:44:51Z",
                        "duration": 60,
                        "timezone": "America/Los_Angeles",
                        "join_url": "https://example.com/meeting",
                        "password": "XYz@BC!D1087",
                        "agenda": "Overview of Meeting Topics",
                        "registration_url": "https://example.com",
                        "occurrences": [
                          {
                            "occurrence_id": "ABCDE12345",
                            "start_time": "2021-07-13T21:44:51Z",
                            "duration": 60,
                            "status": "available"
                          }
                        ],
                        "settings": {
                          "host_video": true,
                          "jbh_time": 5,
                          "meeting_invitees": [
                            {
                              "email": "jchill@example.com"
                            }
                          ],
                          "language_interpretation": {
                            "enable": true,
                            "interpreters": [
                              {
                                "email": "interpreter@example.com",
                                "languages": "US,FR"
                              }
                            ]
                          },
                          "sign_language_interpretation": {
                            "enable": true,
                            "interpreters": [
                              {
                                "email": "interpreter@example.com",
                                "sign_language": "American"
                              }
                            ]
                          },
                          "continuous_meeting_chat": {
                            "enable": true,
                            "auto_add_invited_external_users": false,
                            "channel_id": "cabc1234567defghijkl01234"
                          },
                          "auto_start_meeting_summary": true,
                          "auto_start_ai_companion_questions": true
                        },
                        "old_object": {
                          "id": 1234567890,
                          "settings": {
                            "participant_video": false,
                            "use_pmi": false,
                            "join_before_host": true,
                            "jbh_time": 0,
                            "meeting_invitees": [
                              {
                                "email": "jchill@example.com"
                              }
                            ],
                            "language_interpretation": {
                              "enable": true,
                              "interpreters": [
                                {
                                  "email": "interpreter@example.com",
                                  "languages": "US,FR"
                                }
                              ]
                            },
                            "sign_language_interpretation": {
                              "enable": true,
                              "interpreters": [
                                {
                                  "email": "interpreter@example.com",
                                  "sign_language": "American"
                                }
                              ]
                            },
                            "continuous_meeting_chat": {
                              "enable": true,
                              "auto_add_invited_external_users": true,
                              "channel_id": "cabc1234567defghijkl01234"
                            },
                            "auto_start_meeting_summary": false,
                            "auto_start_ai_companion_questions": false
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.breakout_room_sharing_ended": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.breakout_room_sharing_ended",
        "requestBody": {
          "description": "# meeting.breakout_room_sharing_ended\n\nThe **User in breakout room stopped sharing** event is triggered when a user in a [breakout room](https://support.zoom.us/hc/en-us/articles/115005769646-Participating-in-breakout-rooms) ends their [content-sharing](https://support.zoom.us/hc/en-us/articles/201362153-Sharing-your-screen-or-desktop-on-Zoom), such as their desktop or the [classic whiteboard](https://support.zoom.us/hc/en-us/articles/205677665-Sharing-a-whiteboard).\n\nBreakout rooms are sessions that are split off from the main Zoom meeting. They allow the participants to meet in smaller groups and are completely isolated in terms of audio and video from the main session.\n\n## Prerequisites\n\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **User in breakout room stopped sharing** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.breakout_room_sharing_ended`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.breakout_room_sharing_ended"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The main meeting host's account ID."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "breakout_room_uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The main meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The main meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "breakout_room_uuid": {
                            "type": "string",
                            "description": "The breakout room's universally unique identifier (UUID). Each breakout room instance generates a breakout room UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The main meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The main meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The main meeting type: \n* 0 — A prescheduled meeting. \n* 1 — An instant meeting. \n* 2 — A scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 — A [PAC (Personal Audio Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 — A recurring meeting with a fixed time.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "pattern": "(^\\s*$|^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$)",
                            "description": "The main meeting's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The main meeting's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The main scheduled meeting duration."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the meeting participant.",
                            "required": [
                              "user_id",
                              "sharing_details"
                            ],
                            "properties": {
                              "user_id": {
                                "type": "string",
                                "description": "The participant's meeting user ID. This value is assigned to a participant upon joining a meeting and is only valid for the duration of the meeting."
                              },
                              "parent_user_id": {
                                "type": "string",
                                "description": "The participant's main meeting user ID (user_id)."
                              },
                              "user_name": {
                                "type": "string",
                                "description": "The participant's display name."
                              },
                              "id": {
                                "type": "string",
                                "description": "The participant's universally unique ID (UUID): \n* If the participant joins the meeting by logging into Zoom, this value is the id value in the [**Get a user**](/api-reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the meeting **without** logging into Zoom, this returns an empty string value."
                              },
                              "sharing_details": {
                                "type": "object",
                                "description": "Information about the meeting's screenshare.",
                                "required": [
                                  "content",
                                  "link_source",
                                  "file_link",
                                  "date_time",
                                  "source"
                                ],
                                "properties": {
                                  "content": {
                                    "type": "string",
                                    "description": "The type of shared content: \n* application — An application. For example, a web browser. \n* whiteboard — The [classic whiteboard](https://support.zoom.us/hc/en-us/articles/205677665-Sharing-a-whiteboard). \n* desktop — A user's desktop. \n* airplay — A user's airplay. \n* camera — A user's camera. \n* unknown — An unrecognized application, such as a third party app.",
                                    "enum": [
                                      "application",
                                      "whiteboard",
                                      "desktop",
                                      "airplay",
                                      "camera",
                                      "unknown"
                                    ]
                                  },
                                  "link_source": {
                                    "type": "string",
                                    "description": "The Dropbox sharing method: \n* deep_link — A [deep link](https://en.wikipedia.org/wiki/Deep_linking). \n* in_meeting — A link shared via Zoom. \n* An empty string value if the link source is **not** a Dropbox link.",
                                    "enum": [
                                      "",
                                      "deep_link",
                                      "in_meeting"
                                    ]
                                  },
                                  "file_link": {
                                    "type": "string",
                                    "description": "The Dropbox file's link. This field returns an empty string value if the file link is **not** from a Dropbox source."
                                  },
                                  "date_time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The screenshare's date and time."
                                  },
                                  "source": {
                                    "type": "string",
                                    "description": "The source from which the file was shared: \n* dropbox — A Dropbox source. \n* An empty string value if the source is **not** Dropbox.",
                                    "enum": [
                                      "",
                                      "dropbox"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.breakout_room_sharing_ended",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": "1234567890",
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "breakout_room_uuid": "FkQbpP2UR028mDrwzEahqw==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 8,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "participant": {
                          "user_id": "31228928",
                          "parent_user_id": "ABCDE12345",
                          "user_name": "JillChill",
                          "id": "iFxeBPYun6SAiWUzBcEkX",
                          "sharing_details": {
                            "content": "application",
                            "link_source": "in_meeting",
                            "file_link": "",
                            "date_time": "2021-07-13T21:56:00Z",
                            "source": "dropbox"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.participant_room_system_callout_missed": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.participant_room_system_callout_missed",
        "requestBody": {
          "description": "# meeting.participant_room_system_callout_missed\n\nThe **Invited party missed a meeting invitation through phone (call out) via Zoom room** event is triggered every time an invitation to [join a meeting through phone (call out) from a Zoom room](https://support.zoom.us/hc/en-us/articles/205369035) times out.\n\n## Prerequisites\n\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n* A valid **Event Notification Endpoint URL**.\n* The **Invited party missed a meeting invitation through phone (call out) via Zoom room** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.participant_room_system_callout_missed`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.participant_room_system_callout_missed"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the meeting host."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "message_id",
                          "inviter_name",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The user ID of the meeting host."
                          },
                          "message_id": {
                            "type": "string",
                            "description": "The request unique identifier (UUID)."
                          },
                          "inviter_name": {
                            "type": "string",
                            "description": "The user name of the event's trigger."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the invited participant.",
                            "required": [
                              "call_type",
                              "device_ip"
                            ],
                            "properties": {
                              "call_type": {
                                "type": "string",
                                "description": "The type of call out. Use a value of h323 or sip."
                              },
                              "device_ip": {
                                "type": "string",
                                "description": "The user's device IP address."
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.participant_room_system_callout_missed",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "dzVA4QmMQfyISoRcpFO8CA",
                      "object": {
                        "id": 713592696,
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "ICuPoX4ERtikRcKqkVxunQ",
                        "message_id": "atsXxhSEQWit9t+U02HXNQ==",
                        "inviter_name": "Jill Chill",
                        "participant": {
                          "call_type": "h323",
                          "device_ip": "10.100.111.237"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.registration_denied": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.registration_denied",
        "requestBody": {
          "description": "# meeting.registration_denied\n\nThe **Meeting Registration has been denied** event is triggered every time a registrant is denied from participating in a meeting.\n\nA host with the Pro user type can enable the **Registration** feature when scheduling or updating a meeting. By [enabling registration for meetings](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings), participants must fill out a registration form receive information about joining the meeting.\n\nA host can [manually reject](https://support.zoom.us/hc/en-us/articles/360054446052-Managing-meeting-and-webinar-registration#h_01ETX8CE45EG3YT8S9JM32EW3Y) registrant. Hosts can also programmatically reject attendees via the [**Update registrant's status**](/docs/api-reference/zoom-api/methods#operation/meetingRegistrantStatus) API.\n\n## Prerequisites\n\n* A Pro or a higher plan.\n* The meeting host should be a user on your account or a user of your [webhook-enabled](https://marketplace.zoom.us/docs/api-reference/webhook-reference#enable-webhooks) app.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Meeting Registration has been denied** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.registration_denied`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.registration_denied"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "operator",
                      "operator_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the meeting."
                      },
                      "operator": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user who denied the meeting registration."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who denied the meeting registration."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting registration.",
                        "required": [
                          "uuid",
                          "id",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "timezone",
                          "registrant"
                        ],
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The meeting ID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The meeting type: \n* 0 — A prescheduled meeting. \n* 1 — An instant meeting. \n* 2 — A scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 — A [PAC (Personal Audio Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 — A recurring meeting with a fixed time.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting's start time."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled meeting duration."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "occurrences": {
                            "type": "array",
                            "description": "Information about recurring meetings with fixed times and their occurrences. This only returns when the meeting's type value is 8.",
                            "additionalItems": true,
                            "items": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "occurrence_id",
                                    "start_time"
                                  ],
                                  "properties": {
                                    "occurrence_id": {
                                      "type": "string",
                                      "description": "The meeting occurrence's ID."
                                    },
                                    "start_time": {
                                      "type": "string",
                                      "description": "The meeting's start time."
                                    }
                                  },
                                  "additionalProperties": true
                                }
                              ]
                            }
                          },
                          "registrant": {
                            "type": "object",
                            "description": "Information about the meeting registrant.",
                            "required": [
                              "id",
                              "first_name",
                              "email"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The registrant's ID."
                              },
                              "first_name": {
                                "type": "string",
                                "description": "The registrant's first name."
                              },
                              "last_name": {
                                "type": "string",
                                "description": "The registrant's last name."
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "description": "The registrant's email address."
                              }
                            },
                            "additionalProperties": true
                          }
                        },
                        "additionalProperties": true
                      }
                    },
                    "additionalProperties": true
                  }
                },
                "additionalProperties": true
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.registration_denied",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "operator": "admin@example.com",
                      "operator_id": "z8yCxjabcdEFGHfp8uQ",
                      "object": {
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "id": 1234567890,
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 8,
                        "start_time": "2021-07-13T21:44:51Z",
                        "duration": 60,
                        "timezone": "America/Los_Angeles",
                        "occurrences": [
                          {
                            "occurrence_id": "ABCDE12345",
                            "start_time": "2021-07-13T21:44:51Z"
                          }
                        ],
                        "registrant": {
                          "id": "iFxeBPYun6SAiWUzBcEkX",
                          "first_name": "Jill",
                          "last_name": "Chill",
                          "email": "jchill@example.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "webinar.registration_denied": {
      "post": {
        "tags": [
          "webinar"
        ],
        "operationId": "webinar.registration_denied",
        "requestBody": {
          "description": "# webinar.registration_denied\n\nThe **Webinar Registration has been denied** event is triggered every time one of your app users or account users denies a user's registration.\n\n[Scheduling a Webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires registrants to complete a brief form before receiving the link to join the Webinar.[Webinar Registration options](https://support.zoom.us/hc/en-us/articles/202835649-Webinar-Registration-Customization#h_b74e0e26-5f3f-40d4-a3de-949dbfd85882) can be customized by a Zoom admin or a Webinar host. This customization allows them to choose whether to approve attendees automatically or manually.\n\nWhen the registration is set to be approved manually, a pending registrant can be denied from joining the Webinar. To deny a registrant manually, navigate to your Webinars page and click on the name of the Webinar. Click **Edit** to the right of **Manage Attendees** option, select the user and click **Deny**. Alternatively, the registrant can be denied using the [**Update registrant's status**](/docs/api-reference/zoom-api/methods#operation/webinarRegistrantStatus) API.\n\n## Prerequisites\n* Pro or a higher plan with Webinar license.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Webinar Registration has been denied** subscription enabled under the **Webinar** event.\n\n\n\n**Event type**: `webinar.registration_denied`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "webinar.registration_denied"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "operator",
                      "operator_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the webinar."
                      },
                      "operator": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user who denied the webinar registration."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who denied the webinar registration."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the webinar registration.",
                        "required": [
                          "uuid",
                          "id",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "timezone",
                          "registrant"
                        ],
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "description": "The webinar's universally unique identifier (UUID). Each webinar instance generates a webinar UUID."
                          },
                          "id": {
                            "type": "integer",
                            "description": "The webinar ID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The webinar host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The webinar's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The webinar type: \n* 5 — A webinar. \n* 6 — A recurring webinar without a fixed time. \n* 9 — A recurring webinar with a fixed time.",
                            "enum": [
                              5,
                              6,
                              9
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The webinar's start time."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled webinar duration."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The webinar's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "occurrences": {
                            "type": "array",
                            "description": "Information about recurring webinars with fixed times and their occurrences. This only returns when the webinar's type value is 9.",
                            "additionalItems": true,
                            "items": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "occurrence_id",
                                    "start_time"
                                  ],
                                  "properties": {
                                    "occurrence_id": {
                                      "type": "string",
                                      "description": "The webinar occurrence's ID."
                                    },
                                    "start_time": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The webinar's start time."
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              ]
                            }
                          },
                          "registrant": {
                            "type": "object",
                            "description": "Information about the webinar registrant.",
                            "required": [
                              "id",
                              "first_name",
                              "email"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The registrant's ID."
                              },
                              "first_name": {
                                "type": "string",
                                "description": "The registrant's first name."
                              },
                              "last_name": {
                                "type": "string",
                                "description": "The registrant's last name."
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "description": "The registrant's email address."
                              },
                              "tracking_source": {
                                "type": "object",
                                "description": "Information about the source tracking. See [Creating webinar registration tracking links](https://support.zoom.us/hc/en-us/articles/360000315683-Creating-webinar-registration-tracking-links) for details.",
                                "required": [
                                  "id",
                                  "source_name",
                                  "tracking_url"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Unique Identifier of the tracking source."
                                  },
                                  "source_name": {
                                    "type": "string",
                                    "description": "Name of the source (platform) where the registration URL was shared."
                                  },
                                  "tracking_url": {
                                    "type": "string",
                                    "description": "Tracking URL. The URL that was shared for the registration."
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "webinar.registration_created",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "id": 1234567890,
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Webinar",
                        "type": 9,
                        "start_time": "2021-07-13T21:44:51Z",
                        "duration": 60,
                        "timezone": "America/Los_Angeles",
                        "occurrences": [
                          {
                            "occurrence_id": "ABCDE12345",
                            "start_time": "2021-07-13T21:44:51Z"
                          }
                        ],
                        "registrant": {
                          "id": "iFxeBPYun6SAiWUzBcEkX",
                          "first_name": "Jill",
                          "last_name": "Chill",
                          "email": "jchill@example.com",
                          "tracking_source": {
                            "id": "5516482804110",
                            "source_name": "general",
                            "tracking_url": "https://example.com/webinar/register/5516482804110/WN_juM2BGyLQMyQ_ZrqiGRhLg"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "webinar.created": {
      "post": {
        "tags": [
          "webinar"
        ],
        "operationId": "webinar.created",
        "requestBody": {
          "description": "# webinar.created\n\nThe **Webinar has been created** event is triggered every time one of your app users or account users creates a Webinar.\n\nZoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing webinars. [Zoom Video Webinar](https://support.zoom.us/hc/en-us/articles/200917029-Getting-Started-With-Webinar) allows users to broadcast a Zoom meeting to up to 1000 attendees.\n\nA user can create a Webinar manually by logging into the [Zoom Web Portal](https://zoom.us/) and clicking on **Schedule a Webinar** button in the [Webinars](https://zoom.us/webinar/list) page. Alternatively, users can also use the [**Create a Webinar**](/docs/api-reference/zoom-api/methods#operation/webinarCreate) API to schedule a Webinar programmatically.\n\n## Prerequisites\n\n* Pro or a higher plan with Webinar license.\n* **Event Subscription** must be enabled for your [Marketplace App](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event notification endpoint URL**\n\t* The **Webinar has been created** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `webinar.created`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "webinar.created"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "operator",
                      "operator_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the webinar."
                      },
                      "operator": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user who created the webinar."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who created the webinar."
                      },
                      "operation": {
                        "type": "string",
                        "description": "The type of operation performed: \n* all — The change was applied to all webinar. \n* single — The change was applied only to a single webinar.",
                        "enum": [
                          "all",
                          "single"
                        ]
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the webinar.",
                        "required": [
                          "uuid",
                          "id",
                          "host_id",
                          "topic",
                          "type",
                          "duration",
                          "timezone",
                          "join_url",
                          "settings"
                        ],
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "description": "The webinar's universally unique identifier (UUID). Each webinar instance generates a webinar UUID."
                          },
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The webinar ID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The webinar host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The webinar's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The webinar type: \n* 5 — A webinar. \n* 6 — A recurring webinar without a fixed time. \n* 9 — A recurring webinar with a fixed time.",
                            "enum": [
                              5,
                              6,
                              9
                            ],
                            "c_requireBy": {
                              "start_time": [
                                5,
                                9
                              ]
                            }
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The webinar's start time."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled webinar duration."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The webinar's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "join_url": {
                            "type": "string",
                            "description": "The URL to join the webinar."
                          },
                          "password": {
                            "type": "string",
                            "description": "The password required to join the webinar."
                          },
                          "occurrences": {
                            "type": "array",
                            "description": "Information about recurring webinars with fixed times and their occurrences. This only returns when the webinar's type value is 9.",
                            "additionalItems": true,
                            "items": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "occurrence_id",
                                    "start_time"
                                  ],
                                  "properties": {
                                    "occurrence_id": {
                                      "type": "string",
                                      "description": "The webinar occurrence's ID."
                                    },
                                    "start_time": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The webinar's start time."
                                    },
                                    "duration": {
                                      "type": "integer",
                                      "description": "The scheduled webinar duration."
                                    },
                                    "status": {
                                      "type": "string",
                                      "description": "The webinar occurrence status: \n* available \n* deleted",
                                      "enum": [
                                        "available",
                                        "deleted"
                                      ]
                                    }
                                  },
                                  "additionalProperties": true
                                }
                              ]
                            }
                          },
                          "settings": {
                            "type": "object",
                            "description": "Information about the webinar's settings.",
                            "required": [
                              "use_pmi",
                              "alternative_hosts"
                            ],
                            "properties": {
                              "use_pmi": {
                                "type": "boolean",
                                "description": "Whether the use of PMI is enabled."
                              },
                              "alternative_hosts": {
                                "type": "string",
                                "description": "A semicolon-separated list of the webinar's alternative hosts' email addresses or IDs."
                              }
                            },
                            "additionalProperties": true
                          },
                          "recurrence": {
                            "type": "object",
                            "description": "Information about [recurring meetings](https://marketplace.zoom.us/docs/api-reference/other-references/recurrence-object-definitions).",
                            "properties": {
                              "type": {
                                "type": "integer",
                                "description": "The type of recurring meeting: \n* 1 — Daily. \n* 2 — Weekly. \n* 3 — Monthly.",
                                "enum": [
                                  1,
                                  2,
                                  3
                                ]
                              },
                              "repeat_interval": {
                                "type": "integer",
                                "description": "The meeting's repeat interval: \n* For daily intervals, a max of 90 days. \n* For a weekly interval, a max of 12 weeks. \n* For monthly intervals, a max of 3 months."
                              },
                              "weekly_days": {
                                "type": "string",
                                "description": "A comma-separated list of the days of the week on which the recurring weekly meeting occurs: \n* 1 — Sunday \n* 2 — Monday \n* 3 — Tuesday \n* 4 — Wednesday \n* 5 — Thursday \n* 6 — Friday \n* 7 — Saturday"
                              },
                              "monthly_day": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 31,
                                "description": "The day of the month on which the recurring monthly meeting occurs. The value ranges from 1 to 31."
                              },
                              "monthly_week_day": {
                                "type": "integer",
                                "description": "The day of the week on which the recurring monthly meeting is scheduled: \n* 1 — Sunday \n* 2 — Monday \n* 3 — Tuesday \n* 4 — Wednesday \n* 5 — Thursday \n* 6 — Friday \n* 7 — Saturday",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6,
                                  7
                                ]
                              },
                              "end_times": {
                                "type": "integer",
                                "description": "The number of times the recurring meeting will occur before it is canceled."
                              },
                              "end_date_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The recurring meeting's final ending date and time before it is canceled, in UTC format."
                              },
                              "monthly_week": {
                                "type": "integer",
                                "description": "The week of the month on which a recurring meeting occurs: \n* -1 — The last week of the month. \n* 1 — The first week. \n* 2 — The second week. \n* 3 — The third week. \n* 4 — The fourth week.",
                                "enum": [
                                  -1,
                                  1,
                                  2,
                                  3,
                                  4
                                ]
                              }
                            },
                            "additionalProperties": true
                          }
                        },
                        "additionalProperties": true
                      }
                    },
                    "additionalProperties": true
                  }
                },
                "additionalProperties": true
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "webinar.created",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "operator": "admin@example.com",
                      "operator_id": "z8yCxjabcdEFGHfp8uQ",
                      "operation": "single",
                      "object": {
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "id": 1234567890,
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Webinar",
                        "type": 9,
                        "start_time": "2021-07-13T21:44:51Z",
                        "duration": 60,
                        "timezone": "America/Los_Angeles",
                        "join_url": "https://example.com",
                        "password": "XYz@BC!D1087",
                        "occurrences": [
                          {
                            "occurrence_id": "ABCDE12345",
                            "start_time": "2021-07-13T21:44:51Z",
                            "duration": 60,
                            "status": "available"
                          }
                        ],
                        "settings": {
                          "use_pmi": true,
                          "alternative_hosts": "jchill@example.com"
                        },
                        "recurrence": {
                          "type": 1,
                          "repeat_interval": 2,
                          "end_times": 5
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.registration_approved": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.registration_approved",
        "requestBody": {
          "description": "# meeting.registration_approved\n\nThe **Meeting Registration has been approved** event is triggered every time a registrant is approved for the meeting. The meeting host should be a user on your account or a user of your [webhook-enabled](https://marketplace.zoom.us/docs/api-reference/webhook-reference#enable-webhooks) app.\n\nA meeting host or a user with admin privileges can restrict meeting registrations by manually approving registrants. With the **Manually Approve** option enabled for [meeting registrations](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings), the host of the meeting must approve registrants before they receive information about how to join the meeting.\n\nMeeting hosts can approve an attendee's meeting invitation via the [Zoom web portal](https://zoom.us). To do this, navigate to the scheduled meeting's page and click **Edit** next to the **Manage Attendees** section. Select the attendee to approve in the **Pending Approval** section, then click **Approve**.\n\nTo programmatically approve an attendee's registration, use the [**Update registrant's status**](/docs/api-reference/zoom-api/methods#operation/meetingRegistrantStatus) API.\n\n## Prerequisites\n\n* A Pro or a higher plan.\n* **Manual Approval** enabled for [meeting registrations](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings).\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Meeting Registration has been approved** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.registration_approved`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.registration_approved"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "operator",
                      "operator_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the meeting."
                      },
                      "operator": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user who approved the meeting registration."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who approved the meeting registration."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting registration.",
                        "required": [
                          "uuid",
                          "id",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "timezone",
                          "registrant"
                        ],
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The meeting ID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The meeting type: \n* 0 — A prescheduled meeting. \n* 1 — An instant meeting. \n* 2 — A scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 — A [PAC (Personal Audio Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 — A recurring meeting with a fixed time.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting's start time."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled meeting duration."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "occurrences": {
                            "type": "array",
                            "description": "Information about recurring meetings with fixed times and their occurrences. This only returns when the meeting's type value is 8.",
                            "additionalItems": true,
                            "items": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "occurrence_id",
                                    "start_time"
                                  ],
                                  "properties": {
                                    "occurrence_id": {
                                      "type": "string",
                                      "description": "The meeting occurrence's ID."
                                    },
                                    "start_time": {
                                      "type": "string",
                                      "description": "The meeting's start time."
                                    }
                                  },
                                  "additionalProperties": true
                                }
                              ]
                            }
                          },
                          "registrant": {
                            "type": "object",
                            "description": "Information about the meeting registrant.",
                            "required": [
                              "id",
                              "first_name",
                              "email",
                              "join_url"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The registrant's ID."
                              },
                              "first_name": {
                                "type": "string",
                                "description": "The registrant's first name."
                              },
                              "last_name": {
                                "type": "string",
                                "description": "The registrant's last name."
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "description": "The registrant's email address."
                              },
                              "join_url": {
                                "type": "string",
                                "description": "The URL to join the meeting."
                              },
                              "participant_pin_code": {
                                "description": "The participant PIN code is used to authenticate audio participants before they join the meeting.",
                                "type": "integer",
                                "format": "int64"
                              }
                            },
                            "additionalProperties": true
                          }
                        },
                        "additionalProperties": true
                      }
                    },
                    "additionalProperties": true
                  }
                },
                "additionalProperties": true
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.registration_approved",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "operator": "admin@example.com",
                      "operator_id": "z8yCxjabcdEFGHfp8uQ",
                      "object": {
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "id": 1234567890,
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 8,
                        "start_time": "2021-07-13T21:44:51Z",
                        "duration": 60,
                        "timezone": "America/Los_Angeles",
                        "occurrences": [
                          {
                            "occurrence_id": "ABCDE12345",
                            "start_time": "2021-07-13T21:44:51Z"
                          }
                        ],
                        "registrant": {
                          "id": "iFxeBPYun6SAiWUzBcEkX",
                          "first_name": "Jill",
                          "last_name": "Chill",
                          "email": "jchill@example.com",
                          "join_url": "https://example.com",
                          "participant_pin_code": 380303
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "webinar.participant_left": {
      "post": {
        "tags": [
          "webinar"
        ],
        "operationId": "webinar.participant_left",
        "requestBody": {
          "description": "# webinar.participant_left\n\nThe **Participant/Host left webinar** event is triggered every time a host of a webinar or an attendee leaves the webinar. The host must be a user on your account or on other accounts that have installed your webhook-enabled app.\n\nZoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing Webinars. [Zoom Video Webinar](https://support.zoom.us/hc/en-us/articles/200917029-Getting-Started-With-Webinar) allows users to broadcast a Zoom meeting to up to 1000 attendees.\n\n## Prerequisites\n\n* Pro or a higher plan with Webinar license.\n* Enable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Participant/Host left webinar** subscription enabled under the **Webinar** event.\n\n\n\n**Event type**: `webinar.participant_left`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The event's name.",
                    "enum": [
                      "webinar.participant_left"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the webinar."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the webinar.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "timezone",
                          "duration",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The webinar ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The webinar's universally unique identifier (UUID). Each webinar instance generates a webinar UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The webinar host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The webinar's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The webinar type. \n* 5 - A webinar. \n* 6 - A recurring webinar without a fixed time. \n* 9 - A recurring webinar with a fixed time.",
                            "enum": [
                              5,
                              6,
                              9
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "pattern": "(^\\s*$|^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$)",
                            "description": "The webinar's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The webinar's [timezone](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled webinar duration."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the webinar participant. If the participant is **not** part of the host's account, email returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details.",
                            "required": [
                              "user_id",
                              "email"
                            ],
                            "properties": {
                              "user_id": {
                                "type": "string",
                                "description": "The participant's webinar user ID. This value is assigned to a participant upon joining a webinar and is only valid for the duration of the webinar."
                              },
                              "user_name": {
                                "type": "string",
                                "description": "The participant's display name."
                              },
                              "id": {
                                "type": "string",
                                "description": "The participant's universally unique ID (UUID). \n* If the participant joins the webinar by logging into Zoom, this value is the id value in the [**Get a user**](/api-reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the webinar **without** logging into Zoom, this returns an empty string value. \n\n This value returns blank for external users.\n\n**Note:** Use the participant_user_id value instead of this value. We will remove this response in a future release."
                              },
                              "leave_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time when the participant left the webinar."
                              },
                              "leave_reason": {
                                "type": "string",
                                "description": "The reason why the participant left the webinar, where $name is the participant's username: \n* $name left the meeting. \n* $name got disconnected from the meeting. \n* Host ended the meeting. \n* Host closed the meeting. \n* Host started a new meeting. \n* Network connection error. \n* Host did not join. \n* Exceeded free meeting minutes limit. \n* Removed by host. \n* Unknown reason. \n* Leave waiting room. \n* Removed by host from waiting room.",
                                "x-enum": [
                                  "$name left the meeting.",
                                  "$name got disconnected from the meeting.",
                                  "Host ended the meeting.",
                                  "Host closed the meeting.",
                                  "Host started a new meeting.",
                                  "Network connection error.",
                                  "Host did not join.",
                                  "Exceeded free meeting minutes limit.",
                                  "Removed by host.",
                                  "Unknown reason.",
                                  "Leave waiting room.",
                                  "Removed by host from waiting room."
                                ]
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "description": "The participant's email address. This field is returned if the participant joined the webinar by logging into their Zoom account. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details."
                              },
                              "registrant_id": {
                                "type": "string",
                                "description": "The participant's registrant ID. (A host or a user with administrative permissions can require [registration for Zoom meetings](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0065026))."
                              },
                              "participant_user_id": {
                                "type": "string",
                                "description": "The participant's universally unique ID (UUID). \n* If the participant joins the webinar by logging into Zoom, this value is the id value in the [**Get a user**](/api-reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the webinar **without** logging into Zoom, this returns an empty string value.\n\nThis value returns blank for external users."
                              },
                              "participant_uuid": {
                                "type": "string",
                                "description": "The participant's UUID for this specific webinar. This value is assigned to a participant when they join a webinar, and is only valid for the duration of that webinar."
                              },
                              "customer_key": {
                                "type": "string",
                                "description": "The participant's SDK identifier. This value can be alphanumeric."
                              },
                              "phone_number": {
                                "type": "string",
                                "description": "Phone number of participant joined via PSTN.",
                                "example": "8615250064084"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "webinar.participant_left",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": "1234567890",
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Webinar",
                        "type": 9,
                        "start_time": "2021-07-13T21:44:51Z",
                        "duration": 60,
                        "timezone": "America/Los_Angeles",
                        "participant": {
                          "user_id": "1234567890",
                          "user_name": "Jill Chill",
                          "id": "iFxeBPYun6SAiWUzBcEkX",
                          "leave_time": "2021-07-13T22:50:51Z",
                          "leave_reason": "Jill Chill left the webinar.<br>Reason: Host ended the webinar.",
                          "email": "jchill@example.com",
                          "registrant_id": "abcdefghij0-klmnopq23456",
                          "participant_user_id": "rstuvwxyza789-cde",
                          "participant_uuid": "55555AAAiAAAAAiAiAiiAii",
                          "customer_key": "349589LkJyeW",
                          "phone_number": "8615250064084"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "recording.batch_deleted": {
      "post": {
        "tags": [
          "recording"
        ],
        "operationId": "recording.batch_deleted",
        "requestBody": {
          "description": "# recording.batch_deleted\n\nThe **Batch recording deleted** event is triggered every time one of your app users or account users permanently deletes one or more cloud recordings.\n\nWhen a user initially deletes a recording, it is sent to the trash. At this stage, the recording can still be recovered for up to 30 days after deletion. To permanently delete a recording, users must delete it from the trash.\n\nUsers can permanently delete a recording via the [**Delete meeting recordings**](/api-reference/zoom-api/ma#operation/recordingDelete) API with the `delete` query parameter or in the [Zoom web portal](https://support.zoom.us/hc/en-us/articles/205347605-Recording-Management).\n\n## Prerequisites\n\n* A Pro or higher plan.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n* A valid **Event Notification Endpoint URL**.\n* The **Recording files have been permanently deleted in batches** subscription enabled under the **Recording** event.\n\n\n\n**Event type**: `recording.batch_deleted`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "recording.batch_deleted"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "operator",
                      "operator_id"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user that completed the meeting or webinar recording."
                      },
                      "operator": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user who deleted the recording."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who deleted the recording."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting or webinar recording.",
                        "required": [
                          "meetings"
                        ],
                        "properties": {
                          "meetings": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Information about the meeting or webinar recording.",
                              "properties": {
                                "meeting_uuid": {
                                  "type": "string",
                                  "description": "The universally unique identifier (UUID) of the recorded meeting or webinar instance."
                                },
                                "recording_file_ids": {
                                  "type": "array",
                                  "item": {
                                    "type": "string",
                                    "description": "The recording file's unique ID."
                                  },
                                  "description": "The recording file's unique ID. If the current field value is NULL, it means to delete the whole Meeting Recording files."
                                }
                              }
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "recording.batch_deleted",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "operator": "admin@example.com",
                      "operator_id": "I7zp-pYbTl22Z29H796Ixg",
                      "object": {
                        "meetings": [
                          {
                            "meeting_uuid": "4444AAAiAAAAAiAiAiiAii==",
                            "recording_file_ids": [
                              "ed6c2f27-2ae7-42f4-b3d0-835b493e4fa8",
                              "388ffb46-1541-460d-8447-4624451a1db7"
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "webinar.alert": {
      "post": {
        "tags": [
          "webinar"
        ],
        "operationId": "webinar.alert",
        "requestBody": {
          "description": "# webinar.alert\n\nThe **Webinar issues alert** event is triggered every time a Webinar hosted by one of your app users or account users, encounters a service issue.\n\nZoom monitors the Webinar statistics in regard to the quality of service for each Webinar. An account owner or a user with admin permissions on a Business or higher plan can view these statistics via Dashboard. The following quality metrics can trigger an alert:\n\n* Unstable audio\n* Unstable video\n* Poor screen share quality\n* High CPU usage\n* Call reconnection problems\n\nTo receive notifications for this event, you must meet the following prerequisites.\n\n## Prerequisites\n\n*  Business or a higher plan.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n  * A valid **Event Notification Endpoint URL**.\n  * The **Webinar issues alert** subscription enabled under the **Webinar** event.\n\n\n\n**Event type**: `webinar.alert`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "webinar.alert"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the webinar."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the webinar.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "timezone",
                          "duration",
                          "issues"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The webinar ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The webinar's universally unique identifier (UUID). Each webinar instance generates a webinar UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The webinar host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The webinar's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The webinar type: \n* 5 — A webinar. \n* 6 — A recurring webinar without a fixed time. \n* 9 — A recurring webinar with a fixed time.",
                            "enum": [
                              5,
                              6,
                              9
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The webinar's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The webinar's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled webinar duration."
                          },
                          "issues": {
                            "type": "array",
                            "description": "A list of issues that occurred during the webinar: \n* Unstable audio quality \n* Unstable video quality \n* Unstable screen share quality \n* High CPU occupation \n* Call Reconnection",
                            "items": {
                              "type": "string",
                              "enum": [
                                "Unstable audio quality",
                                "Unstable video quality",
                                "Unstable screen share quality",
                                "High CPU occupation",
                                "Call Reconnection"
                              ]
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "webinar.alert",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": "1234567890",
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Webinar",
                        "type": 2,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "issues": [
                          "Unstable audio quality"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "recording.registration_denied": {
      "post": {
        "tags": [
          "recording"
        ],
        "operationId": "recording.registration_denied",
        "requestBody": {
          "description": "# recording.registration_denied\n\nThe **View registrant has denied for this recording** event is triggered every time a registrant is denied from viewing a cloud recording.\n\n[Cloud recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording) of Zoom meetings and webinars can be made [on-demand](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings). With on-demand recordings, users can view the recordings of past meetings and webinars at any time as long as they have not been removed. To view these recordings, users can register manually by filling out the registration form that pops up when users click on the **Recording URL** provided by the Webinar organizer. After the registration, only registrants that are approved will be able to view the recording.\n\nAn account owner, a host of the meeting/webinar or a user with admin privileges can customize the [registration approval settings](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings) for cloud recordings. The [registrants' information](https://support.zoom.us/hc/en-us/articles/360000488283-On-demand-Recordings) can be viewed from the [Zoom Web Portal](https://zoom.us/recording). A pending or a previously approved registrant can be denied from viewing the recording by clicking **Deny**. The registrants can also be denied by using the [**Update registrant's status**](/api-reference/zoom-api/ma#operation/meetingRecordingRegistrantStatus) API.\n\n## Prerequisites\n\n* A Pro or higher plan.\n* Cloud recording must be enabled on the users' account.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event notification endpoint URL**.\n\t* The **View registrant has denied for this recording** subscription enabled under the **Recording** event.\n\n\n\n**Event type**: `recording.registration_denied`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "recording.registration_denied"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object",
                      "operator",
                      "operator_id"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the host that recorded the meeting or webinar."
                      },
                      "operator": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user who denied the recording registration."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who denied the recording registration."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the recording registration.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "registrant"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The ID of the recorded meeting (meetingId) or webinar (webinarId)."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The universally unique identifier (UUID) of the recorded meeting or webinar instance."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The webinar or meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting or webinar topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The type of recorded meeting or webinar: \n\n If the recording is of a meeting: \n* 1 — Instant meeting. \n* 2 — Scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A meeting created via PMI (Personal Meeting ID). \n* 7 — A [Personal Audio Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) (PAC). \n* 8 - Recurring meeting with a fixed time. \n\n If the recording is of a webinar: \n* 5 — A webinar. \n* 6 — A recurring webinar without a fixed time. \n* 9 — A recurring webinar with a fixed time. \n\n If the recording is **not** from a meeting or webinar: \n\n* 99 — A recording uploaded via the [**Recordings**](https://zoom.us/recording) interface on the Zoom Web Portal.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9,
                              99
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting or webinar's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting or webinar's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The meeting or webinar's scheduled duration."
                          },
                          "registrant": {
                            "type": "object",
                            "description": "Information about the recording registrant.",
                            "required": [
                              "email",
                              "first_name",
                              "last_name"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The registrant's ID."
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "description": "The registrant's email address."
                              },
                              "first_name": {
                                "type": "string",
                                "description": "The registrant's first name."
                              },
                              "last_name": {
                                "type": "string",
                                "description": "The registrant's last name."
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "recording.registration_denied",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": 1234567890,
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Personal Recording",
                        "type": 4,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "occurrences": {
                          "occurrence_id": "ABCDE12345",
                          "start_time": "2021-07-13T21:44:51Z"
                        },
                        "registrant": {
                          "id": "iFxeBPYun6SAiWUzBcEkX",
                          "email": "jchill@example.com",
                          "first_name": "Jill",
                          "last_name": "Chill"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "webinar.chat_message_sent": {
      "post": {
        "tags": [
          "webinar"
        ],
        "operationId": "webinar.chat_message_sent",
        "requestBody": {
          "description": "# webinar.chat_message_sent\n\nThe **In-webinar chat message received** event is triggered when a user sends a public or private chat message during a webinar using the [chat feature](https://support.zoom.us/hc/en-us/articles/205761999-Chatting-in-a-Zoom-Webinar). The event is sent to the configured endpoint in your Marketplace app.\n\n## Prerequisites\n* Have Zoom enable the DLP for in-meeting chat feature to use this webhook.\n* Enable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with:\n  * Enable the **In-webinar chat message received** subscription under the **Webinar** event category.\n* This feature is **only** enabled upon request approval. Contact the [Zoom support team](https://support.zoom.us/hc/en-us/articles/201362003) for more information.\n\n\n\n**Event type**: `webinar.chat_message_sent`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "webinar.chat_message_sent"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the webinar."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the chat message.",
                        "required": [
                          "id",
                          "uuid",
                          "chat_message"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The webinar ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The webinar's universally unique identifier (UUID). Each webinar instance generates a webinar UUID."
                          },
                          "chat_message": {
                            "type": "object",
                            "description": "Information about the chat message.",
                            "required": [
                              "date_time",
                              "sender_session_id",
                              "sender_name",
                              "sender_type",
                              "recipient_type",
                              "message_id",
                              "message_content"
                            ],
                            "properties": {
                              "date_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time when the chat message was sent."
                              },
                              "sender_session_id": {
                                "type": "string",
                                "description": "The message sender's session ID."
                              },
                              "sender_name": {
                                "type": "string",
                                "description": "The message sender's name."
                              },
                              "sender_email": {
                                "type": "string",
                                "format": "email",
                                "description": "The message sender's session email address."
                              },
                              "sender_type": {
                                "type": "string",
                                "description": "The type of user that sent the message. \n* host - The webinar host. \n* alternative-host - The webinar's [alternative host](https://support.zoom.us/hc/en-us/articles/208220166). \n* panelist - A webinar [panelist](https://support.zoom.us/hc/en-us/articles/360000252726#:~:text=Panelists%20are%20full,a%20webinar%20host.). \n* guest - A webinar guest.",
                                "enum": [
                                  "host",
                                  "alternative-host",
                                  "panelist",
                                  "guest"
                                ]
                              },
                              "recipient_session_id": {
                                "type": "string",
                                "description": "The message recipient's ID."
                              },
                              "recipient_name": {
                                "type": "string",
                                "description": "The message recipient's name."
                              },
                              "recipient_email": {
                                "type": "string",
                                "format": "email",
                                "description": "The message recipient's email address. Optional only included if it is a private message."
                              },
                              "recipient_type": {
                                "type": "string",
                                "description": "The type of message recipient. \n* everyone - All webinar participants. \n* host - The webinar host. \n* guest - A webinar guest.",
                                "enum": [
                                  "everyone",
                                  "host",
                                  "guest"
                                ]
                              },
                              "message_id": {
                                "type": "string",
                                "description": "The chat message's UUID."
                              },
                              "message_content": {
                                "type": "string",
                                "description": "The content of the chat message."
                              },
                              "file_ids": {
                                "type": "array",
                                "description": "The live webinar chat file's UUID, in base64-encoded format.",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "webinar.chat_message_sent",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": 1234567890,
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "chat_message": {
                          "date_time": "GMT20220110-072010",
                          "sender_session_id": "26219520",
                          "sender_name": "Jill Chill",
                          "sender_email": "dlp.user@example.com",
                          "sender_type": "host",
                          "recipient_session_id": "38681600",
                          "recipient_name": "John Smith",
                          "recipient_type": "everyone",
                          "message_id": "MS17MDQ5NjE4QjYtRjk4Ny00REEwLUFBQUItMTg3QTY0RjU2MzhFfQ==",
                          "message_content": "This is a test message",
                          "file_ids": [
                            "MS17RDk0QTY3QUQtQkFGQy04QTJFLTI2RUEtNkYxQjRBRTU1MTk5fQ==",
                            "MS17NDQ0OEU5MjMtM0JFOS1CMDA1LTQ0NDAtQjdGOTU0Rjk5MTkyfQ=="
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.live_streaming_stopped": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.live_streaming_stopped",
        "requestBody": {
          "description": "# meeting.live_streaming_stopped\n\nThe **Meeting Live Streaming Stopped** event is triggered every time a meeting's live stream ends. The host of the live stream must be a user in your account or a user in any other accounts that have installed your [webhook-enabled](https://marketplace.zoom.us/docs/api-reference/webhook-reference#enable-webhooks) app.\n\nZoom lets users live stream their Zoom meetings on [YouTube Live](https://support.zoom.us/hc/en-us/articles/360028478292-Streaming-a-Meeting-or-Webinar-on-YouTube-Live), [Facebook](https://support.zoom.us/hc/en-us/articles/115000350406-Streaming-a-meeting-or-webinar-on-Facebook-Live), [Workplace by Facebook](https://support.zoom.us/hc/en-us/articles/115005460286-Live-Stream-Meetings-or-Webinars-on-Workplace-by-Facebook), and via a [custom live streaming services](https://support.zoom.us/hc/en-us/articles/115001777826-Live-Streaming-Meetings-or-Webinars-Using-a-Custom-Service).\n\n## **Prerequisites**:\n  * **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Meeting Live Streaming Stopped** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.live_streaming_stopped`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.live_streaming_stopped"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "operator",
                      "operator_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the meeting."
                      },
                      "operator": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user who updated the meeting."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who updated the meeting."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "live_streaming"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The meeting type: \n* 0 — A prescheduled meeting. \n* 1 — An instant meeting. \n* 2 — A scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 — A [PAC (Personal Audio Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 — A recurring meeting with a fixed time.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled meeting duration."
                          },
                          "live_streaming": {
                            "type": "object",
                            "description": "Information about the live stream.",
                            "required": [
                              "service",
                              "date_time"
                            ],
                            "properties": {
                              "service": {
                                "type": "string",
                                "description": "The name of the live streaming service: \n* Facebook \n* Workplace_by_Facebook \n* YouTube \n* Twitch \n* Custom_Live_Streaming_Service",
                                "enum": [
                                  "Facebook",
                                  "Workplace_by_Facebook",
                                  "YouTube",
                                  "Twitch",
                                  "Custom_Live_Streaming_Service"
                                ]
                              },
                              "custom_live_streaming_settings": {
                                "type": "object",
                                "description": "Information about the custom live stream.",
                                "required": [
                                  "stream_url",
                                  "stream_key",
                                  "page_url"
                                ],
                                "properties": {
                                  "stream_url": {
                                    "type": "string",
                                    "description": "The live stream's URL."
                                  },
                                  "stream_key": {
                                    "type": "string",
                                    "description": "The live stream's key."
                                  },
                                  "page_url": {
                                    "type": "string",
                                    "description": "The live stream's page URL."
                                  },
                                  "resolution": {
                                    "type": "string",
                                    "description": "The number of pixels in each dimension that the video camera can display."
                                  }
                                }
                              },
                              "date_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time the live stream ended."
                              }
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.live_streaming_stopped",
                    "event_ts": 1627906965803,
                    "payload": {
                      "account_id": "D8cJuqWVQ623CI4Q8yQK0Q",
                      "operator": "admin@example.com",
                      "operator_id": "z8yCxjabcdEFGHfp8uQ",
                      "object": {
                        "id": 1234567890,
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 2,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "live_streaming": {
                          "service": "Custom_Live_Streaming_Service",
                          "custom_live_streaming_settings": {
                            "stream_url": "https://example.com/livestream",
                            "stream_key": "ABCDEFG12345HIJ6789",
                            "page_url": "https://example.com/livestream/123",
                            "resolution": "1080p"
                          },
                          "date_time": "2021-08-02T12:22:45Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "webinar.chat_message_file_sent": {
      "post": {
        "tags": [
          "webinar"
        ],
        "operationId": "webinar.chat_message_file_sent",
        "requestBody": {
          "description": "# webinar.chat_message_file_sent\nThe **In-webinar chat message file received** event is triggered when a message file of a webinar is available to view or download. The event is sent to the configured endpoint in your Marketplace app.\n\n## Prerequisites\n\n* Have Zoom enable the DLP for in-meeting chat feature to use this webhook.\n* Enable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with:\n  * Enable the **In-webinar chat message file received** subscription under the **Webinar** event category.\n* This feature is **only** enabled upon request approval. Contact the [Zoom support team](https://support.zoom.us/hc/en-us/articles/201362003) for more information.\n\n**Event type**: `webinar.chat_message_file_sent`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "webinar.chat_message_file_sent"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who hosted the webinar."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the chat message file.",
                        "required": [
                          "webinar_id",
                          "webinar_uuid",
                          "chat_message_file"
                        ],
                        "properties": {
                          "webinar_id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The webinar ID."
                          },
                          "webinar_uuid": {
                            "type": "string",
                            "description": "The webinar's universally unique identifier (UUID). Each webinar instance generates a webinar UUID."
                          },
                          "chat_message_file": {
                            "type": "object",
                            "description": "Information about the chat message file.",
                            "required": [
                              "date_time",
                              "sender_session_id",
                              "sender_name",
                              "sender_type",
                              "recipient_type",
                              "message_id",
                              "file_id",
                              "file_name",
                              "file_size",
                              "file_type",
                              "download_url"
                            ],
                            "properties": {
                              "date_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time when the chat message was sent."
                              },
                              "sender_session_id": {
                                "type": "string",
                                "description": "The message sender's session ID."
                              },
                              "sender_name": {
                                "type": "string",
                                "description": "The message sender's name."
                              },
                              "sender_email": {
                                "type": "string",
                                "format": "email",
                                "description": "The message sender's email address."
                              },
                              "sender_type": {
                                "type": "string",
                                "description": "The type of user that sent the message. \n* host - The meeting host. \n* guest - A meeting guest.",
                                "enum": [
                                  "host",
                                  "guest"
                                ]
                              },
                              "recipient_session_id": {
                                "type": "string",
                                "description": "The message recipient's session ID."
                              },
                              "recipient_name": {
                                "type": "string",
                                "description": "The message recipient's name."
                              },
                              "recipient_email": {
                                "type": "string",
                                "format": "email",
                                "description": "The message recipient's email address. Optional only included if it is a private message."
                              },
                              "recipient_type": {
                                "type": "string",
                                "description": "The type of message recipient. \n* host - The meeting host. \n* guest - A meeting guest.",
                                "enum": [
                                  "everyone",
                                  "host",
                                  "guest"
                                ]
                              },
                              "message_id": {
                                "type": "string",
                                "description": "The chat message's UUID."
                              },
                              "file_id": {
                                "type": "string",
                                "description": "The live webinar chat file's UUID, in base64-encoded format."
                              },
                              "file_name": {
                                "type": "string",
                                "description": "The live webinar chat file's name."
                              },
                              "file_size": {
                                "type": "integer",
                                "description": "The live webinar chat file's size, in bytes."
                              },
                              "file_type": {
                                "type": "string",
                                "description": "The live meeting chat file's type."
                              },
                              "download_url": {
                                "type": "string",
                                "description": "The live webinar chat file's download URL."
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "webinar.chat_message_file_sent",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "webinar_id": 1234567890,
                        "webinar_uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "chat_message_file": {
                          "date_time": "GMT20220110-072010",
                          "sender_session_id": "26219520",
                          "sender_name": "Jill Chill",
                          "sender_email": "dlp.user@example.com",
                          "sender_type": "host",
                          "recipient_session_id": "38681600",
                          "recipient_name": "John Smith",
                          "recipient_email": "guest.user@example",
                          "recipient_type": "guest",
                          "message_id": "MS17MDQ5NjE4QjYtRjk4Ny00REEwLUFBQUItMTg3QTY0RjU2MzhFfQ==",
                          "file_id": "MS17RDk0QTY3QUQtQkFGQy04QTJFLTI2RUEtNkYxQjRBRTU1MTk5fQ==",
                          "file_name": "example.jpg",
                          "file_size": 3966,
                          "file_type": "jpg",
                          "download_url": "https://file.zoomdev.us/file/hsdAXySKRe2KgS-0YNeSXg/attach/format/plain?decryptType=1&filename=example.jpg&jwt=eyJhbGciOiJIUzI1NiJ9.eyJkaWciOiI3Yzg5YzBhYjIzYmZmMjdjNzE3NTQ4YzdjMTc0Njk3MWYzYjNmNjFjMzU5OTliNjE1ZjdjMWJmMzc5YTJiZThlIiwiYXVkIjoiZmlsZSIsImlzcyI6ImNyb3NzZmlsZSIsImV4cCI6MTY0ODI2NDY5N30.2fQxw3F1cEhvFJmnE2zPOdkHnPeZUktv_P0M--e-Tg8&mode=play"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.ended": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.ended",
        "requestBody": {
          "description": "# meeting.ended\n\nThe **End Meeting** event is triggered every time a meeting host ends the meeting. The host must be a user in your account or a user in any other accounts that have installed your [webhook-enabled](https://marketplace.zoom.us/docs/api-reference/webhook-reference#enable-webhooks) app.\n\n## Prerequisites\n\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **End Meeting** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.ended`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.ended"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the meeting."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "end_time"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The meeting type: \n* 0 — A prescheduled meeting. \n* 1 — An instant meeting. \n* 2 — A scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 — A [PAC (Personal Audio Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 — A recurring meeting with a fixed time.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled meeting duration."
                          },
                          "end_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The date and time at which the meeting ended."
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.ended",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "operator": "admin@example.com",
                      "operator_id": "z8yCxjabcdEFGHfp8uQ",
                      "operation": "single",
                      "object": {
                        "id": "1234567890",
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 3,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "end_time": "2021-07-13T23:00:51Z"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "webinar.registration_cancelled": {
      "post": {
        "tags": [
          "webinar"
        ],
        "operationId": "webinar.registration_cancelled",
        "requestBody": {
          "description": "# webinar.registration_cancelled\n\nThe **Webinar Registration has been canceled** event is triggered whenever one of these two conditions are met:\n\n* A registrant cancels their registration for a Webinar created by one of your app users or account users.\n* A host who is also a user of your app or your Zoom account cancels the registration of a registrant who was previously approved.\n\n[Scheduling a Webinar with registration](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-Webinar-with-Registration) requires registrants to complete a brief form before receiving the link to join the Webinar. [Webinar Registration options](https://support.zoom.us/hc/en-us/articles/202835649-Webinar-Registration-Customization#h_b74e0e26-5f3f-40d4-a3de-949dbfd85882) can be customized by a Zoom admin or a Webinar host. This customization allows them to choose whether to approve attendees automatically or manually.\n\n## Prerequisites\n\n* Pro or a higher plan with Webinar license.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**\n\t* The **Webinar Registration has been canceled** subscription enabled under the **Webinar** event.\n\n\n\n**Event type**: `webinar.registration_cancelled`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "webinar.registration_cancelled"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "operator",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the webinar."
                      },
                      "operator": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user who canceled the webinar registration."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who canceled the webinar registration."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the webinar registration.",
                        "required": [
                          "uuid",
                          "id",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "timezone",
                          "registrant"
                        ],
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "description": "The webinar's universally unique identifier (UUID). Each webinar instance generates a webinar UUID."
                          },
                          "id": {
                            "type": "integer",
                            "description": "The webinar ID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The webinar host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The webinar's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The webinar type: \n* 5 — A webinar. \n* 6 — A recurring webinar without a fixed time. \n* 9 — A recurring webinar with a fixed time.",
                            "enum": [
                              5,
                              6,
                              9
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The webinar's start time."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled webinar duration."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The webinar's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "occurrences": {
                            "type": "array",
                            "description": "Information about recurring webinars with fixed times and their occurrences. This only returns when the webinar's type value is 9.",
                            "additionalItems": true,
                            "items": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "occurrence_id",
                                    "start_time"
                                  ],
                                  "properties": {
                                    "occurrence_id": {
                                      "type": "string",
                                      "description": "The webinar occurrence's ID."
                                    },
                                    "start_time": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The webinar's start time."
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              ]
                            }
                          },
                          "registrant": {
                            "type": "object",
                            "description": "Information about the webinar registrant.",
                            "required": [
                              "id",
                              "first_name",
                              "email"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The registrant's ID."
                              },
                              "first_name": {
                                "type": "string",
                                "description": "The registrant's first name."
                              },
                              "last_name": {
                                "type": "string",
                                "description": "The registrant's last name."
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "description": "The registrant's email address."
                              },
                              "tracking_source": {
                                "type": "object",
                                "description": "Information about the source tracking. See [Creating webinar registration tracking links](https://support.zoom.us/hc/en-us/articles/360000315683-Creating-webinar-registration-tracking-links) for details.",
                                "required": [
                                  "id",
                                  "source_name",
                                  "tracking_url"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Unique Identifier of the tracking source."
                                  },
                                  "source_name": {
                                    "type": "string",
                                    "description": "Name of the source (platform) where the registration URL was shared."
                                  },
                                  "tracking_url": {
                                    "type": "string",
                                    "description": "Tracking URL. The URL that was shared for the registration."
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "webinar.registration_cancelled",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "operator": "admin@example.com",
                      "operator_id": "z8yCxjabcdEFGHfp8uQ",
                      "object": {
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "id": 1234567890,
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Webinar",
                        "type": 9,
                        "start_time": "2021-07-13T21:44:51Z",
                        "duration": 60,
                        "timezone": "America/Los_Angeles",
                        "occurrences": [
                          {
                            "occurrence_id": "ABCDE12345",
                            "start_time": "2021-07-13T21:44:51Z"
                          }
                        ],
                        "registrant": {
                          "id": "iFxeBPYun6SAiWUzBcEkX",
                          "first_name": "Jill",
                          "last_name": "Chill",
                          "email": "jchill@example.com",
                          "tracking_source": {
                            "id": "5516482804110",
                            "source_name": "general",
                            "tracking_url": "https://example.com/webinar/register/5516482804110/WN_juM2BGyLQMyQ_ZrqiGRhLg"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.participant_joined_breakout_room": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.participant_joined_breakout_room",
        "requestBody": {
          "description": "# meeting.participant_joined_breakout_room\n\nThe **Meeting participant has joined a breakout room** event is triggered when a meeting participant joins a meeting [breakout room](https://support.zoom.us/hc/en-us/articles/115005769646-Participating-in-breakout-rooms).\n\nBreakout rooms are sessions that are split off from the main Zoom meeting. They let participants meet in smaller groups and are completely isolated in terms of audio and video from the main session.\n\n## Prerequisites\n\n* Enable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Meeting participant has joined a breakout room** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.participant_joined_breakout_room`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The event's name.",
                    "enum": [
                      "meeting.participant_joined_breakout_room"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the main meeting."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "breakout_room_uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The main meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The main meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "breakout_room_uuid": {
                            "type": "string",
                            "description": "The breakout room's universally unique identifier (UUID). Each breakout room instance generates a breakout room UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The main meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The main meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The main meeting type. \n* 0 - A prescheduled meeting. \n* 1 - An instant meeting. \n* 2 - A scheduled meeting. \n* 3 - A recurring meeting with no fixed time. \n* 4 - A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 - A [PAC (Personal Audio Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 - A recurring meeting with a fixed time.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "pattern": "(^\\s*$|^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$)",
                            "description": "The main meeting's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The main meeting's [timezone](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The main scheduled meeting duration."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the meeting participant.",
                            "required": [
                              "user_id",
                              "user_name",
                              "email",
                              "join_time"
                            ],
                            "properties": {
                              "user_id": {
                                "type": "string",
                                "description": "The participant's meeting user ID. This value is assigned to a participant when they join a meeting, and is only valid for the duration of the meeting."
                              },
                              "parent_user_id": {
                                "type": "string",
                                "description": "The participant's main meeting user ID (user_id)."
                              },
                              "user_name": {
                                "type": "string",
                                "description": "The participant's display name."
                              },
                              "id": {
                                "type": "string",
                                "description": "The participant's unique ID. \n * If meeting registration was **not** required and the participant joined by logging into Zoom, this value is the same as the userId field used in the [**Get a user**](/api-reference/zoom-api/methods#operation/user) API. \n* If registration was required for the meeting and the participant joined the meeting by logging into Zoom, this value is the same as the id value in the [**List meeting registrants**](/api-reference/zoom-api/methods#operation/meetingRegistrants) API response. \n* If participant joins without logging into Zoom, this returns an empty value. \n\n This value returns blank for external users.\n\n**Note:** Use the participant_user_id value instead of this value. We will remove this response in a future release."
                              },
                              "participant_uuid": {
                                "type": "string",
                                "description": "The participant's UUID for this specific meeting and any breakout rooms created in this meeting. This value is assigned to a participant when they join a meeting, and is only valid for the duration of that meeting."
                              },
                              "join_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time when the participant joined the meeting."
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "description": "The participant's email address. This response only returns if the participant joined the meeting by logging into Zoom."
                              },
                              "registrant_id": {
                                "type": "string",
                                "description": "The participant's registrant ID. A host or a user with administrative permissions can require [registration for Zoom meetings](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0065026)."
                              },
                              "participant_user_id": {
                                "type": "string",
                                "description": "The participant's unique ID. \n * If meeting registration was **not** required and the participant joined by logging into Zoom, this value is the same as the userId field used in the [**Get a user**](/api-reference/zoom-api/methods#operation/user) API. \n* If registration was required for the meeting and the participant joined the meeting by logging into Zoom, this value is the same as the id value in the [**List meeting registrants**](/api-reference/zoom-api/methods#operation/meetingRegistrants) API response. \n* If participant joins without logging into Zoom, this returns an empty value. \n\nThis value returns blank for external users."
                              },
                              "phone_number": {
                                "type": "string",
                                "description": "Phone number of participant joined via PSTN.",
                                "example": "8615250064084"
                              },
                              "customer_key": {
                                "type": "string",
                                "description": "The participant's SDK identifier. This value can be alphanumeric."
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.participant_joined_breakout_room",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": "1234567890",
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "breakout_room_uuid": "FkQbpP2UR028mDrwzEahqw==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 8,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "participant": {
                          "user_id": "31228928",
                          "parent_user_id": "1234567890",
                          "user_name": "Jill Chill",
                          "id": "iFxeBPYun6SAiWUzBcEkX",
                          "participant_uuid": "55555AAAiAAAAAiAiAiiAii",
                          "date_time": "2021-07-13T21:44:51Z",
                          "email": "jchill@example.com",
                          "registrant_id": "abcdefghij0-klmnopq23456",
                          "participant_user_id": "rstuvwxyza789-cde",
                          "phone_number": "8615250064084",
                          "customer_key": "349589LkJyeW"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.participant_left_waiting_room": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.participant_left_waiting_room",
        "requestBody": {
          "description": "# meeting.participant_left_waiting_room\n\nThe **Participant left a waiting room** event is triggered every time a meeting host **does not** admit a participant to the meeting and **removes** the participant from the waiting room. This event also triggers if a participant leaves the waiting room. The meeting host must be a user in your account or a user in any other accounts that have installed your [webhook-enabled](https://marketplace.zoom.us/docs/api-reference/webhook-reference#enable-webhooks) app.\n\nThe [**waiting room**](https://support.zoom.us/hc/en-us/articles/115000332726-Waiting-Room) feature allows the host to control when participants join a meeting. When a participant attempts to join a meeting with this feature enabled, the participant is first admitted to the waiting room.\nThe meeting host can then admit attendees one by one or hold all attendees in the waiting room and admit them all at once.\n\n## Prerequisites\n\n* The [**waiting room**](https://support.zoom.us/hc/en-us/articles/115000332726-Waiting-Room) feature enabled for the meeting.\n* Enable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The \"**Participant left a waiting room**\" subscription must be enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.participant_left_waiting_room`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.participant_left_waiting_room"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the meeting."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The meeting type. \n* 0 - A prescheduled meeting. \n* 1 - An instant meeting. \n* 2 - A scheduled meeting. \n* 3 - A recurring meeting with no fixed time. \n* 4 — A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 — A [PAC (Personal Audio Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 — A recurring meeting with a fixed time.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "pattern": "(^\\s*$|^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$)",
                            "description": "The meeting's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting's [timezone](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled meeting duration."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the meeting participant. If the participant is **not** part of the host's account, email returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details.",
                            "required": [
                              "user_id",
                              "email",
                              "date_time"
                            ],
                            "properties": {
                              "user_id": {
                                "type": "string",
                                "description": "The participant's meeting user ID. This value is assigned to a participant when they join a meeting, and is only valid for the duration of the meeting."
                              },
                              "user_name": {
                                "type": "string",
                                "description": "The participant's display name."
                              },
                              "id": {
                                "type": "string",
                                "description": "The participant's universally unique ID (UUID). \n* If the participant joins the meeting by logging into Zoom, this value is the id value in the [**Get a user**](/docs/api/rest/reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the meeting **without** logging into Zoom, this returns an empty string value. \n\n**Note:** Use the participant_user_id value instead of this value. We will remove this response in a future release."
                              },
                              "participant_uuid": {
                                "type": "string",
                                "description": "The participant's UUID for this specific meeting and any breakout rooms created in this meeting. This value is assigned to a participant when they join a meeting, and is only valid for the duration of that meeting."
                              },
                              "date_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time when the participant joined the meeting."
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "description": "The participant's email address. This response only returns if the participant joined the meeting by logging into Zoom. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details."
                              },
                              "phone_number": {
                                "type": "string",
                                "description": "Phone number of participant joined via PSTN-",
                                "example": "8615250064084"
                              },
                              "participant_user_id": {
                                "type": "string",
                                "description": "The participant's universally unique ID (UUID). \n* If the participant joins the meeting by logging into Zoom, this value is the id value in the [**Get a user**](/docs/api/rest/reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the meeting **without** logging into Zoom, this returns an empty string value."
                              },
                              "customer_key": {
                                "type": "string",
                                "description": "The participant's SDK identifier. This value can be alphanumeric."
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.participant_left_waiting_room",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": "1234567890",
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 8,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "participant": {
                          "user_id": "1234567890",
                          "user_name": "Jill Chill",
                          "id": "iFxeBPYun6SAiWUzBcEkX",
                          "participant_uuid": "55555AAAiAAAAAiAiAiiAii",
                          "date_time": "2021-07-13T21:44:51Z",
                          "email": "jchill@example.com",
                          "phone_number": "8615250064084",
                          "participant_user_id": "iFxeBPYun6SAiWUzBcEkX",
                          "customer_key": "349589LkJyeW"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.registration_cancelled": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.registration_cancelled",
        "requestBody": {
          "description": "# meeting.registration_cancelled\n\nThe **Meeting Registration has been canceled** event is triggered every time a registration is canceled for a meeting. The meeting host should be a user on your account or a user of your [webhook-enabled](https://marketplace.zoom.us/docs/api-reference/webhook-reference#enable-webhooks) app.\n\nA host with the Pro user type can enable the **Registration** feature when scheduling or updating a meeting. By [enabling registration for meetings](https://support.zoom.us/hc/en-us/articles/211579443-Registration-for-Meetings), participants must fill out a registration form receive information about joining the meeting.\n\nMeeting attendees can cancel their registration at any time. A meeting host can also cancel an attendee's meeting invitation via the [Zoom web portal](https://zoom.us). To do this, navigate to the scheduled meeting's page and click **Edit** next to the **Manage Attendees** section. The **Approved** section will display all approved attendees. Select the attendee whose meeting registration you want to revoke and click **Cancel Registration**.\n\nTo programmatically cancel a registration, use the [**Update registrant's status**](/docs/api-reference/zoom-api/methods#operation/meetingRegistrantStatus) API.\n\n## Prerequisites\n\n* A Pro or a higher plan.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Meeting Registration has been canceled** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.registration_cancelled`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.registration_cancelled"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "operator",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the meeting."
                      },
                      "operator": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user who canceled the meeting registration."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who canceled the meeting registration."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting registration.",
                        "required": [
                          "uuid",
                          "id",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "timezone",
                          "registrant"
                        ],
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The meeting ID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The meeting type: \n* 0 — A prescheduled meeting. \n* 1 — An instant meeting. \n* 2 — A scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 — A [PAC (Personal Audio Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 — A recurring meeting with a fixed time.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting's start time."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled meeting duration."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "occurrences": {
                            "type": "array",
                            "description": "Information about recurring meetings with fixed times and their occurrences. This only returns when the meeting's type value is 8.",
                            "additionalItems": true,
                            "items": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "occurrence_id",
                                    "start_time"
                                  ],
                                  "properties": {
                                    "occurrence_id": {
                                      "type": "string",
                                      "description": "The meeting occurrence's ID."
                                    },
                                    "start_time": {
                                      "type": "string",
                                      "description": "The meeting's start time."
                                    }
                                  },
                                  "additionalProperties": true
                                }
                              ]
                            }
                          },
                          "registrant": {
                            "type": "object",
                            "description": "Information about the meeting registrant.",
                            "required": [
                              "id",
                              "first_name",
                              "email"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The registrant's ID."
                              },
                              "first_name": {
                                "type": "string",
                                "description": "The registrant's first name."
                              },
                              "last_name": {
                                "type": "string",
                                "description": "The registrant's last name."
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "description": "The registrant's email address."
                              }
                            },
                            "additionalProperties": true
                          }
                        },
                        "additionalProperties": true
                      }
                    },
                    "additionalProperties": true
                  }
                },
                "additionalProperties": true
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.registration_cancelled",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "operator": "admin@example.com",
                      "operator_id": "z8yCxjabcdEFGHfp8uQ",
                      "object": {
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "id": 1234567890,
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 8,
                        "start_time": "2021-07-13T21:44:51Z",
                        "duration": 60,
                        "timezone": "America/Los_Angeles",
                        "occurrences": [
                          {
                            "occurrence_id": "ABCDE12345",
                            "start_time": "2021-07-13T21:44:51Z"
                          }
                        ],
                        "registrant": {
                          "id": "iFxeBPYun6SAiWUzBcEkX",
                          "first_name": "Jill",
                          "last_name": "Chill",
                          "email": "jchill@example.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.started": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.started",
        "requestBody": {
          "description": "# meeting.started\n\nThe **Start Meeting** event is triggered every time a meeting host starts a meeting. The meeting host must either be a user on your account or a user of your [webhook-enabled](https://marketplace.zoom.us/docs/api-reference/webhook-reference#enable-webhooks) app.\n\nA meeting host can [start a meeting](https://support.zoom.us/hc/en-us/articles/201362423-How-do-I-Start-or-Join-a-Scheduled-Meeting-as-the-Host-) from the Zoom desktop client for Mac, PC or Linux, the Zoom app for Android or iOS, a web browser, or an H.323 or SIP device.\n\n## Prerequisites\n\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Start Meeting** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.started`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.started"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the meeting."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The meeting type: \n* 0 — A prescheduled meeting. \n* 1 — An instant meeting. \n* 2 — A scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 — A [PAC (Personal Audio Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 — A recurring meeting with a fixed time.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled meeting duration."
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.started",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": "1234567890",
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 8,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.summary_completed": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.summary_completed",
        "requestBody": {
          "description": "# meeting.summary_completed\nThe **Meeting summary has been completed** event is triggered every time the summary of the meeting is made available for one of your app users or account users after the summarized meeting/webinar ends.\n\n## Prerequisites\n\n* Host user must be Pro or higher plan.\n* Enable the **Meeting Summary with AI Companion** feature in the host's account.\n* E2ee meetings do not have summary feature enabled.\n* Enable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Meeting summary have completed** subscription enabled under the **Meeting** event.\n\n**Event type**: `meeting.summary_completed`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The event's name.",
                    "enum": [
                      "meeting.summary_completed"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who hosted the meeting."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting summary.",
                        "required": [
                          "meeting_host_id",
                          "meeting_host_email",
                          "meeting_uuid",
                          "meeting_id",
                          "meeting_topic",
                          "meeting_start_time",
                          "meeting_end_time",
                          "summary_start_time",
                          "summary_end_time",
                          "summary_created_time",
                          "summary_last_modified_time",
                          "summary_title",
                          "summary_details",
                          "next_steps"
                        ],
                        "properties": {
                          "meeting_host_id": {
                            "type": "string",
                            "description": "The ID of the user who is set as the meeting host."
                          },
                          "meeting_host_email": {
                            "type": "string",
                            "format": "email",
                            "description": "The meeting host's email address."
                          },
                          "meeting_uuid": {
                            "type": "string",
                            "description": "Unique meeting ID. Each meeting instance generates its own meeting UUID - after a meeting ends, a new UUID is generated for the next instance of the meeting. Retrieve a list of UUIDs from past meeting instances using the [**List past meeting instances**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods/#operation/pastMeetings) API. [Double encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid) your UUID when using it for API calls if the UUID begins with a / or contains // in it.\n"
                          },
                          "meeting_id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-) - the meeting's unique identifier in **long** format, represented as int64 data type in JSON. Also known as the meeting number."
                          },
                          "meeting_topic": {
                            "type": "string",
                            "description": "Meeting topic."
                          },
                          "meeting_start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting's start date and time."
                          },
                          "meeting_end_time": {
                            "type": "string",
                            "description": "The meeting's end date and time.",
                            "format": "date-time",
                            "example": "2020-07-15T23:30:19Z"
                          },
                          "summary_start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The summary's start date and time."
                          },
                          "summary_end_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The summary's end date and time."
                          },
                          "summary_created_time": {
                            "type": "string",
                            "description": "The date and time at which the meeting summary was created.",
                            "format": "date-time"
                          },
                          "summary_last_modified_time": {
                            "type": "string",
                            "description": "The date and time at which the meeting summary was last modified.",
                            "format": "date-time"
                          },
                          "summary_title": {
                            "type": "string",
                            "description": "The summary title."
                          },
                          "summary_overview": {
                            "type": "string",
                            "description": "The summary overview."
                          },
                          "summary_details": {
                            "type": "array",
                            "description": "The summary content details.",
                            "items": {
                              "type": "object",
                              "required": [
                                "label",
                                "summary"
                              ],
                              "properties": {
                                "label": {
                                  "type": "string",
                                  "description": "The summary label."
                                },
                                "summary": {
                                  "type": "string",
                                  "description": "The summary content."
                                }
                              },
                              "description": "The summary detail object."
                            }
                          },
                          "next_steps": {
                            "type": "array",
                            "description": "The next steps.",
                            "items": {
                              "type": "string",
                              "description": "The next step."
                            }
                          }
                        },
                        "additionalProperties": true
                      }
                    },
                    "additionalProperties": true
                  }
                },
                "additionalProperties": true
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.summary_completed",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "dzVA4QmMQfyISoRcpFO8CA",
                      "object": {
                        "meeting_host_id": "30R7kT7bTIKSNUFEuH_Qlg",
                        "meeting_host_email": "jchill@example.com",
                        "meeting_uuid": "aDYlohsHRtCd4ii1uC2+hA==",
                        "meeting_id": 97763643886,
                        "meeting_topic": "My Meeting",
                        "meeting_start_time": "2019-07-15T23:24:52Z",
                        "meeting_end_time": "2020-07-15T23:30:19Z",
                        "summary_start_time": "2019-07-15T23:24:52Z",
                        "summary_end_time": "2020-07-15T23:30:19Z",
                        "summary_created_time": "2019-07-15T23:24:52Z",
                        "summary_last_modified_time": "2020-07-15T23:30:19Z",
                        "summary_title": "Meeting Summary for my meeting",
                        "summary_overview": "Meeting Overview",
                        "summary_details": [
                          {
                            "label": "Meeting Overview",
                            "summary": "Meeting Overview"
                          }
                        ],
                        "next_steps": [
                          "step1"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.participant_phone_callout_rejected": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.participant_phone_callout_rejected",
        "requestBody": {
          "description": "# meeting.participant_phone_callout_rejected\n\nThe **Invited party rejected a meeting invitation through phone (call out)** event is triggered every time a user rejects an invitation to [join a meeting through phone (call out)](https://support.zoom.us/hc/en-us/articles/4404535651085).\n\n## Prerequisites\n\nEnable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with these configurations.\n* A valid **Event Notification Endpoint URL**.\n* The **Invited party rejected a meeting invitation through phone (call out)** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.participant_phone_callout_rejected`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.participant_phone_callout_rejected"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The meeting host's account ID."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the invited participant.",
                            "required": [
                              "invitee_name",
                              "phone_number"
                            ],
                            "properties": {
                              "invitee_name": {
                                "type": "string",
                                "description": "The user's name to display in the meeting."
                              },
                              "phone_number": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The user's phone number."
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.participant_phone_callout_rejected",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "dzVA4QmMQfyISoRcpFO8CA",
                      "object": {
                        "id": 713592696,
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "ICuPoX4ERtikRcKqkVxunQ",
                        "participant": {
                          "invitee_name": "Jill Chill",
                          "phone_number": 1800000000
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.recovered": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.recovered",
        "requestBody": {
          "description": "# meeting.recovered\n\nThe **Meeting has been recovered** event is triggered every time a user recovers a previously-deleted meeting. The user must be a user in your account or a user in any other accounts that have installed your [webhook-enabled](https://marketplace.zoom.us/docs/api-reference/webhook-reference#enable-webhooks) app.\n\nZoom users can restore previously-deleted meetings for up to one week after deletion. Any invitations, links, and meeting IDs sent prior to the meeting's deletion will still work after a user [recovers](https://support.zoom.us/hc/en-us/articles/360038297111-Recovering-a-deleted-meeting) it.\n\n## Prerequisites\n\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Meeting has been recovered** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.recovered`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.recovered"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "operator",
                      "operator_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who recovered the meeting."
                      },
                      "operator": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user who recovered the meeting."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who recovered the meeting."
                      },
                      "operation": {
                        "type": "string",
                        "description": "The type of operation performed: \n* all — The change was applied to all meetings. \n* single — The change was applied only to a single meeting.",
                        "enum": [
                          "all",
                          "single"
                        ]
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "uuid",
                          "id",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "timezone"
                        ],
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The meeting ID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The meeting type: \n* 0 — A prescheduled meeting. \n* 1 — An instant meeting. \n* 2 — A scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 — A [PAC (Personal Audio Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 — A recurring meeting with a fixed time.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting's start time."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled meeting duration."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "occurrences": {
                            "type": "array",
                            "description": "Information about recurring meetings with fixed times and their occurrences. This only returns when the meeting's type value is 8.",
                            "additionalItems": true,
                            "items": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "occurrence_id",
                                    "start_time"
                                  ],
                                  "properties": {
                                    "occurrence_id": {
                                      "type": "string",
                                      "description": "The meeting occurrence's ID."
                                    },
                                    "start_time": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The meeting's start time."
                                    }
                                  },
                                  "additionalProperties": true
                                }
                              ]
                            }
                          }
                        },
                        "additionalProperties": true
                      }
                    },
                    "additionalProperties": true
                  }
                },
                "additionalProperties": true
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.recovered",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "operator": "admin@example.com",
                      "operator_id": "z8yCxjabcdEFGHfp8uQ",
                      "operation": "single",
                      "object": {
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "id": 1234567890,
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 8,
                        "start_time": "2021-07-13T21:44:51Z",
                        "duration": 60,
                        "timezone": "America/Los_Angeles",
                        "occurrences": [
                          {
                            "occurrence_id": "ABCDE12345",
                            "start_time": "2021-07-13T21:44:51Z"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.participant_left": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.participant_left",
        "requestBody": {
          "description": "# meeting.participant_left\n\nThe **Participant/Host left meeting** event is triggered every time an attendee leaves a meeting. A meeting attendee is a meeting participant or the host. The meeting host must be a user in your account or a user in any other accounts that have installed your [webhook-enabled](https://marketplace.zoom.us/docs/api-reference/webhook-reference#enable-webhooks) app.\n\n## Prerequisites\n\n* Enable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with these configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Participant/Host left meeting** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.participant_left`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The event's name.",
                    "enum": [
                      "meeting.participant_left"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the meeting."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The meeting type: \n* 0 — A prescheduled meeting. \n* 1 — An instant meeting. \n* 2 — A scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 — A [PAC (Personal Audio Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 — A recurring meeting with a fixed time.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "pattern": "(^\\s*$|^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$)",
                            "description": "The meeting's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting's [timezone](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled meeting duration."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the meeting participant. If the participant is **not** part of the host's account, email returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details.",
                            "required": [
                              "user_id",
                              "email",
                              "leave_time"
                            ],
                            "properties": {
                              "user_id": {
                                "type": "string",
                                "description": "The participant's meeting user ID. This value is assigned to a participant when they join a meeting, and is only valid for the duration of the meeting."
                              },
                              "user_name": {
                                "type": "string",
                                "description": "The participant's display name."
                              },
                              "id": {
                                "type": "string",
                                "description": "The participant's universally unique ID (UUID). \n* If the participant joins the meeting by logging into Zoom, this value is the id value in the [**Get a user**](/api-reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the meeting **without** logging into Zoom, this returns an empty string value. \n\n This value returns blank for external users.\n\n**Note:** Use the participant_user_id value instead of this value. We will remove this response in a future release."
                              },
                              "participant_uuid": {
                                "type": "string",
                                "description": "The participant's UUID for this specific meeting and any breakout rooms created in this meeting. This value is assigned to a participant when they join a meeting, and is only valid for the duration of that meeting."
                              },
                              "leave_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time when the participant left the meeting."
                              },
                              "leave_reason": {
                                "type": "string",
                                "description": "The reason why the participant left the meeting, where $name is the participant's username: \n* $name left the meeting. \n* $name got disconnected from the meeting. \n* Host ended the meeting. \n* Host closed the meeting. \n* Host started a new meeting. \n* Network connection error. \n* Host did not join. \n* Exceeded free meeting minutes limit. \n* Removed by host. \n* Unknown reason. \n* Leave waiting room. \n* Removed by host from waiting room.",
                                "x-enum": [
                                  "$name left the meeting.",
                                  "$name got disconnected from the meeting.",
                                  "Host ended the meeting.",
                                  "Host closed the meeting.",
                                  "Host started a new meeting.",
                                  "Network connection error.",
                                  "Host did not join.",
                                  "Exceeded free meeting minutes limit.",
                                  "Removed by host.",
                                  "Unknown reason.",
                                  "Leave waiting room.",
                                  "Removed by host from waiting room."
                                ]
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "description": "The participant's email address. This response only returns if the participant joined the meeting by logging into Zoom. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details."
                              },
                              "registrant_id": {
                                "type": "string",
                                "description": "The participant's registrant ID. (A host or a user with administrative permissions can require [registration for Zoom meetings](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0065026))."
                              },
                              "participant_user_id": {
                                "type": "string",
                                "description": "The participant's universally unique ID (UUID). \n* If the participant joins the meeting by logging into Zoom, this value is the id value in the [**Get a user**](/api-reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the meeting **without** logging into Zoom, this returns an empty string value.\n\nThis value returns blank for external users."
                              },
                              "customer_key": {
                                "type": "string",
                                "description": "The participant's SDK identifier. This value can be alphanumeric."
                              },
                              "phone_number": {
                                "type": "string",
                                "description": "Phone number of participant joined via PSTN",
                                "example": "8615250064084"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.participant_left",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": "1234567890",
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 8,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "participant": {
                          "user_id": "1234567890",
                          "user_name": "Jill Chill",
                          "id": "iFxeBPYun6SAiWUzBcEkX",
                          "participant_uuid": "55555AAAiAAAAAiAiAiiAii",
                          "leave_time": "2021-07-13T22:50:51Z",
                          "leave_reason": "Jill Chill left the meeting.<br>Reason: Host ended the meeting.",
                          "date_time": "2021-07-13T21:44:51Z",
                          "email": "jchill@example.com",
                          "registrant_id": "abcdefghij0-klmnopq23456",
                          "participant_user_id": "rstuvwxyza789-cde",
                          "customer_key": "349589LkJyeW",
                          "phone_number": "8615250064084"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "webinar.permanently_deleted": {
      "post": {
        "tags": [
          "webinar"
        ],
        "operationId": "webinar.permanently_deleted",
        "requestBody": {
          "description": "# webinar.permanently_deleted\n\nThe **Webinar has been permanently deleted** event is triggered every time a scheduled webinar is permanently deleted.\n\nA webinar host or a user with admin privileges can permanently delete a webinar via the [Zoom web portal](https://zoom.us).\n\n## Prerequisites\n\n* A Pro or higher plan.\n* Enable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Webinar has been permanently deleted** subscription enabled under the **Webinar** event.\n\n\n\n**Event type**: `webinar.permanently_deleted`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "webinar.permanently_deleted"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "operator",
                      "operator_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who permanently deleted the webinar."
                      },
                      "operator": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user who permanently deleted the webinar."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who permanently deleted the webinar."
                      },
                      "operation": {
                        "type": "string",
                        "description": "The type of operation performed. \n* all — The change was applied to all webinars. \n* single — The change was applied only to a single webinar.",
                        "enum": [
                          "all",
                          "single"
                        ]
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the webinar.",
                        "required": [
                          "uuid",
                          "id",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "timezone"
                        ],
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "description": "The webinar's universally unique identifier (UUID). Each webinar instance generates a webinar UUID."
                          },
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The webinar ID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The webinar host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The webinar's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The webinar type. \n* 5 — A webinar. \n* 6 — A recurring webinar without a fixed time. \n* 9 — A recurring webinar with a fixed time.",
                            "enum": [
                              5,
                              6,
                              9
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The webinar's start time."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled webinar duration."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The webinar's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "occurrences": {
                            "type": "array",
                            "description": "Information about recurring webinars with fixed times and their occurrences. This only returns when the webinar's type value is 9.",
                            "additionalItems": true,
                            "items": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "occurrence_id",
                                    "start_time"
                                  ],
                                  "properties": {
                                    "occurrence_id": {
                                      "type": "string",
                                      "description": "The webinar occurrence's ID."
                                    },
                                    "start_time": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The webinar's start time."
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "webinar.permanently_deleted",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "operator": "admin@example.com",
                      "operator_id": "z8yCxjabcdEFGHfp8uQ",
                      "operation": "single",
                      "object": {
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "id": 1234567890,
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Webinar",
                        "type": 9,
                        "start_time": "2021-07-13T21:44:51Z",
                        "duration": 60,
                        "timezone": "America/Los_Angeles",
                        "occurrences": [
                          {
                            "occurrence_id": "1677637740000",
                            "start_time": "2023-03-01T02:29:00Z"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "recording.completed": {
      "post": {
        "tags": [
          "recording"
        ],
        "operationId": "recording.completed",
        "requestBody": {
          "description": "# recording.completed\n\nThis event is triggered when a recording of a meeting or webinar becomes available to view or download.\n\nUsers with a Pro or a higher plan have access to [cloud recordings](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording). Account owners and account admins can [enable cloud recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording#h_29fc1846-190d-4f05-ab23-1070c8106ec8) for account members.\nUsers can also enable cloud recordings [for their own use](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording#h_4cca2458-cbd5-4439-933c-57c0d62a2753).\n\nOnly meeting or webinar hosts and co-hosts can start and complete a [cloud recording](https://support.zoom.us/hc/en-us/articles/203741855-Cloud-Recording). A recording is considered complete **after** the host or co-host ends the meeting or webinar.\n\n## Prerequisites\n\n* A Pro or higher plan.\n* Enable Cloud recording on the users' account.\n* Enable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with:\n\t* A valid **Event notification endpoint URL**.\n\t* The **All Recordings have completed** subscription must be enabled under the **Recording** event.\n\n\n\n**Event type**: `recording.completed`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload",
                  "download_token"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "recording.completed"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "download_token": {
                    "type": "string",
                    "description": "Use the generated token value with the download_url value to download the cloud recording via an [OAuth app](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app). The download token only lasts for 24 hours after its creation, and you can only download the file within 24 hours of receiving the event notification. Pass download_token as a bearer token in the authorization header of your HTTP request. \n\n \ncurl --request GET \\\n  --url {download_url} \\\n  --header 'authorization: Bearer {download_token} \\\n  --header 'content-type: application/json'\n."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who completed the meeting or webinar recording."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting or webinar recording.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "account_id",
                          "topic",
                          "type",
                          "start_time",
                          "password",
                          "host_email",
                          "duration",
                          "share_url",
                          "total_size",
                          "recording_count",
                          "recording_files"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The ID of the recorded meeting (meetingId) or webinar (webinarId)."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The universally unique identifier (UUID) of the recorded meeting or webinar instance."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The ID of the user set as the host of the meeting or webinar."
                          },
                          "account_id": {
                            "type": "string",
                            "description": "The account ID of the user who completed the meeting or webinar recording."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting or webinar topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The type of recorded meeting or webinar. \n\n If the recording is of a meeting: \n* 1 — Instant meeting. \n* 2 — Scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A meeting created via PMI (Personal Meeting ID). \n* 7 — A [Personal Audio Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) (PAC). \n* 8 - Recurring meeting with a fixed time. \n\n If the recording is of a webinar: \n* 5 — A webinar. \n* 6 — A recurring webinar without a fixed time. \n* 9 — A recurring webinar with a fixed time. \n\n If the recording is **not** from a meeting or webinar: \n\n* 99 — A recording uploaded via the [**Recordings**](https://zoom.us/recording) interface on the Zoom Web Portal.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9,
                              99
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting's or webinar's start time."
                          },
                          "password": {
                            "type": "string",
                            "description": "The meeting's or webinar's password."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting's or webinar's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "host_email": {
                            "type": "string",
                            "format": "email",
                            "description": "The host's email address."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The recording's duration."
                          },
                          "share_url": {
                            "type": "string",
                            "description": "The URL where approved users can view the recording."
                          },
                          "total_size": {
                            "type": "integer",
                            "description": "The recording file's total size, in bytes."
                          },
                          "recording_count": {
                            "type": "integer",
                            "description": "The number of completed recording files."
                          },
                          "on_prem": {
                            "type": "boolean",
                            "description": "Whether the recording is an [on-premise](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment) recording."
                          },
                          "recording_play_passcode": {
                            "type": "string",
                            "description": "The cloud recording's password to be used in the URL. This recording's password can be directly spliced in play_url or share_url with ?pwd= to access and play, such as in 'https://zoom.us/rec/share/**************?pwd=yNYIS408EJygs7rE5vVsJwXIz4-VW7MH'. See [Embedding meeting passcode in invite link](https://support.zoom.us/hc/en-us/articles/360060396571-Embedding-meeting-passcode-in-invite-link) for details. If you want to use this field, please contact Zoom support.",
                            "example": "yNYIS408EJygs7rE5vVsJwXIz4-VW7MH"
                          },
                          "recording_files": {
                            "type": "array",
                            "description": "Information about the completed recording files.",
                            "items": {
                              "type": "object",
                              "required": [
                                "id",
                                "meeting_id",
                                "recording_start",
                                "recording_end",
                                "file_type",
                                "file_size",
                                "file_extension",
                                "download_url",
                                "status",
                                "recording_type"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The recording file's ID."
                                },
                                "meeting_id": {
                                  "type": "string",
                                  "description": "The meeting's ID."
                                },
                                "recording_start": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The date and time when recording started."
                                },
                                "recording_end": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The date and time when recording ended."
                                },
                                "file_type": {
                                  "type": "string",
                                  "description": "The type of the recording file.",
                                  "enum": [
                                    "MP4",
                                    "M4A",
                                    "CHAT",
                                    "TRANSCRIPT",
                                    "CSV",
                                    "TB",
                                    "CC",
                                    "CHAT_MESSAGE",
                                    "SUMMARY",
                                    "TIMELINE"
                                  ]
                                },
                                "file_size": {
                                  "type": "integer",
                                  "description": "The recording file's size, in bytes."
                                },
                                "file_extension": {
                                  "type": "string",
                                  "description": "The file extension type of the recording file.",
                                  "enum": [
                                    "MP4",
                                    "M4A",
                                    "TXT",
                                    "VTT",
                                    "CSV",
                                    "JSON",
                                    "JPG"
                                  ]
                                },
                                "file_name": {
                                  "type": "string",
                                  "description": "The recording file's name."
                                },
                                "play_url": {
                                  "type": "string",
                                  "description": "The URL where the recording file can be opened and played."
                                },
                                "download_url": {
                                  "type": "string",
                                  "description": "The URL to download the the recording. To download the recording file of a meeting or a webinar, use the download_token value to download the file. For example: \n\n https://{{base-domain}}/rec/webhook_download/download/xxx--header 'Authorization: Bearer {{your-download_token-value}}"
                                },
                                "file_path": {
                                  "type": "string",
                                  "description": "The file path to the on-premise account recording. \n\n **Note:** This API returns this field for [Zoom On-Premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). It does **not** return the download_url field."
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The recording file's processing status. \n* completed — The processing of the file is complete. \n* processing — The file is processing.",
                                  "enum": [
                                    "completed",
                                    "processing"
                                  ]
                                },
                                "recording_type": {
                                  "type": "string",
                                  "description": "The recording file type. \n* shared_screen_with_speaker_view(CC) \n* shared_screen_with_speaker_view \n* shared_screen_with_gallery_view \n* gallery_view \n* shared_screen \n* audio_only \n* audio_transcript \n* chat_file \n* active_speaker \n* host_video \n* audio_only_each_participant \n* cc_transcript \n* closed_caption \n* poll \n* timeline \n* thumbnail \n* audio_interpretation \n* summary \n* summary_next_steps \n* summary_smart_chapters \n*sign_interpretation \n\nFor more information, read our [Managing and sharing cloud recordings](https://support.zoom.us/hc/en-us/articles/205347605-Managing-and-sharing-cloud-recordings#h_9898497b-e736-4980-a749-d55608f10773) documentation.",
                                  "enum": [
                                    "shared_screen_with_speaker_view(CC)",
                                    "shared_screen_with_speaker_view",
                                    "shared_screen_with_gallery_view",
                                    "gallery_view",
                                    "shared_screen",
                                    "audio_only",
                                    "chat_file",
                                    "active_speaker",
                                    "host_video",
                                    "audio_only_each_participant",
                                    "cc_transcript",
                                    "closed_caption",
                                    "poll",
                                    "timeline",
                                    "thumbnail",
                                    "audio_interpretation",
                                    "summary",
                                    "summary_next_steps",
                                    "summary_smart_chapters",
                                    "sign_interpretation",
                                    "production_studio"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "participant_audio_files": {
                            "type": "array",
                            "description": "Information about the participants' audio files.",
                            "items": {
                              "type": "object",
                              "required": [
                                "id",
                                "recording_start",
                                "recording_end",
                                "file_type",
                                "file_size",
                                "file_extension",
                                "file_name",
                                "download_url",
                                "status"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The participant audio file's ID."
                                },
                                "recording_start": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The participant audio file's start time."
                                },
                                "recording_end": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The participant audio file's end time."
                                },
                                "file_type": {
                                  "type": "string",
                                  "description": "The participant audio file's format."
                                },
                                "file_name": {
                                  "type": "string",
                                  "description": "The participant audio file's name."
                                },
                                "file_size": {
                                  "type": "integer",
                                  "description": "The participant audio file's size, in bytes."
                                },
                                "file_extension": {
                                  "type": "string",
                                  "description": "The participant audio file's extension."
                                },
                                "play_url": {
                                  "type": "string",
                                  "description": "The URL to open and play the participant audio file."
                                },
                                "download_url": {
                                  "type": "string",
                                  "description": "The URL to download the the recording. To download the recording file of a meeting or a webinar, use the download_token value to download the file. For example: \n\n https://{{base-domain}}/rec/webhook_download/download/xxx--header 'Authorization: Bearer {{your-download_token-value}}"
                                },
                                "file_path": {
                                  "type": "string",
                                  "description": "The file path to the on-premise account recording. \n\n **Note:** This API returns this field for [Zoom On-Premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). It does **not** return the download_url field."
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The participant audio file's processing status. \n* completed — The processing of the file is complete. \n* processing — The file is processing.",
                                  "enum": [
                                    "completed",
                                    "processing"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "recording.completed",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": 1234567890,
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "account_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Personal Recording",
                        "type": 4,
                        "start_time": "2021-07-13T21:44:51Z",
                        "password": "132456",
                        "timezone": "America/Los_Angeles",
                        "host_email": "jchill@example.com",
                        "duration": 60,
                        "share_url": "https://example.com",
                        "total_size": 3328371,
                        "recording_count": 2,
                        "on_prem": false,
                        "recording_play_passcode": "yNYIS408EJygs7rE5vVsJwXIz4-VW7MH",
                        "recording_files": [
                          {
                            "id": "ed6c2f27-2ae7-42f4-b3d0-835b493e4fa8",
                            "meeting_id": "098765ABCD",
                            "recording_start": "2021-03-23T22:14:57Z",
                            "recording_end": "2021-03-23T23:15:41Z",
                            "recording_type": "audio_only",
                            "file_type": "M4A",
                            "file_size": 246560,
                            "file_extension": "M4A",
                            "play_url": "https://example.com/recording/play/Qg75t7xZBtEbAkjdlgbfdngBBBB",
                            "download_url": "https://example.com/recording/download/Qg75t7xZBtEbAkjdlgbfdngBBBB",
                            "status": "completed"
                          },
                          {
                            "id": "388ffb46-1541-460d-8447-4624451a1db7",
                            "meeting_id": "098765ABCD",
                            "recording_start": "2021-03-23T22:14:57Z",
                            "recording_end": "2021-03-23T23:15:41Z",
                            "recording_type": "shared_screen_with_speaker_view",
                            "file_type": "MP4",
                            "file_size": 282825,
                            "file_extension": "MP4",
                            "play_url": "https://example.com/recording/play/Qg75t7xZBtEbAkjdlgbfdngCCCC",
                            "download_url": "https://example.com/recording/download/Qg75t7xZBtEbAkjdlgbfdngCCCC",
                            "status": "completed"
                          }
                        ],
                        "participant_audio_files": [
                          {
                            "id": "ed6c2f27-2ae7-42f4-b3d0-835b493e4fa8",
                            "recording_start": "2021-03-23T22:14:57Z",
                            "recording_end": "2021-03-23T23:15:41Z",
                            "file_type": "M4A",
                            "file_name": "MyRecording",
                            "file_size": 246560,
                            "file_extension": "MP4",
                            "play_url": "https://example.com/recording/play/Qg75t7xZBtEbAkjdlgbfdngAAAA",
                            "download_url": "https://example.com/recording/download/Qg75t7xZBtEbAkjdlgbfdngAAAA",
                            "status": "completed"
                          }
                        ]
                      }
                    },
                    "download_token": "abJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJodHRwczovL2V2ZW50Lnpvb20udXMiLCJhY2NvdW50SWQiOiJNdDZzdjR1MFRBeVBrd2dzTDJseGlBIiwiYXVkIjoiaHR0cHM6Ly9vYXV0aC56b29tLnVzIiwibWlkIjoieFp3SEc0c3BRU2VuekdZWG16dnpiUT09IiwiZXhwIjoxNjI2MTM5NTA3LCJ1c2VySWQiOiJEWUhyZHBqclMzdWFPZjdkUGtrZzh3In0.a6KetiC6BlkDhf1dP4KBGUE1bb2brMeraoD45yhFx0eSSSTFdkHQnsKmlJQ-hdo9Zy-4vQw3rOxlyoHv583JyZ"
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.participant_phone_callout_accepted": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.participant_phone_callout_accepted",
        "requestBody": {
          "description": "# meeting.participant_phone_callout_accepted\n\nThe **Invited party answered a meeting invitation through phone (call out)** event is triggered every time a user accepts an invitation to [join a meeting through phone (call out)](https://support.zoom.us/hc/en-us/articles/4404535651085).\n\n## Prerequisites\n\nEnable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with these configurations.\n* A valid **Event Notification Endpoint URL**.\n* The **Invited party answered a meeting invitation through phone (call out)** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.participant_phone_callout_accepted`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.participant_phone_callout_accepted"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The meeting host's account ID."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the invited participant.",
                            "required": [
                              "invitee_name",
                              "phone_number"
                            ],
                            "properties": {
                              "invitee_name": {
                                "type": "string",
                                "description": "The user's name to display in the meeting."
                              },
                              "phone_number": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The user's phone number."
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.participant_phone_callout_accepted",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "dzVA4QmMQfyISoRcpFO8CA",
                      "object": {
                        "id": 713592696,
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "ICuPoX4ERtikRcKqkVxunQ",
                        "participant": {
                          "invitee_name": "Jill Chill",
                          "phone_number": 1800000000
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.participant_put_in_waiting_room": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.participant_put_in_waiting_room",
        "requestBody": {
          "description": "# meeting.participant_put_in_waiting_room\n\nThe **Participant was put in a waiting room** event is triggered every time a participant who has already joined the meeting is returned to the waiting room during the meeting. The meeting host must be a user in your account or a user in any other accounts that have installed your [webhook-enabled](https://marketplace.zoom.us/docs/api-reference/webhook-reference#enable-webhooks) app.\n\nDuring a meeting, a meeting host can send a participant to the waiting room by selecting the **Put in waiting room** option in the Zoom client.\n\n## Prerequisites\n\n* Enable the [**waiting room**](https://support.zoom.us/hc/en-us/articles/115000332726-Waiting-Room) for the meeting.\n* Enable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Participant was put in a waiting room** subscription must be enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.participant_put_in_waiting_room`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.participant_put_in_waiting_room"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who created the meeting."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The meeting host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The meeting type. \n* 0 - A prescheduled meeting. \n* 1 - An instant meeting. \n* 2 - A scheduled meeting. \n* 3 - A recurring meeting with no fixed time. \n* 4 - A [personal meeting room](https://support.zoom.us/hc/en-us/articles/201362843). \n* 7 - A [PAC (Personal Audio Conference)](https://support.zoom.us/hc/en-us/articles/205172455-Hosting-a-Personal-Audio-Conference-PAC-meeting) meeting. \n* 8 - A recurring meeting with a fixed time.",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              7,
                              8
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "pattern": "(^\\s*$|^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$)",
                            "description": "The meeting's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting's [timezone](https://developers.zoom.us/docs/api/rest/other-references/abbreviation-lists/#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled meeting duration."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the meeting participant. If the participant is **not** part of the host's account, email returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details.",
                            "required": [
                              "user_id",
                              "email",
                              "date_time"
                            ],
                            "properties": {
                              "user_id": {
                                "type": "string",
                                "description": "The participant's meeting user ID. This value is assigned to a participant when they join a meeting, and is only valid for the duration of the meeting."
                              },
                              "user_name": {
                                "type": "string",
                                "description": "The participant's display name."
                              },
                              "id": {
                                "type": "string",
                                "description": "The participant's universally unique ID (UUID). \n* If the participant joins the meeting by logging into Zoom, this value is the id value in the [**Get a user**](/api-reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the meeting **without** logging into Zoom, this returns an empty string value. \n\n**Note:** Use the participant_user_id value instead of this value. We will remove this response in a future release."
                              },
                              "participant_uuid": {
                                "type": "string",
                                "description": "The participant's UUID for this specific meeting and any breakout rooms created in this meeting. This value is assigned to a participant when they join a meeting, and is only valid for the duration of that meeting."
                              },
                              "date_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time when the participant joined the meeting."
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "description": "The participant's email address. This response only returns if the participant joined the meeting by logging into Zoom. If the participant is **not** part of the host's account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details."
                              },
                              "participant_user_id": {
                                "type": "string",
                                "description": "The participant's universally unique ID (UUID). \n* If the participant joins the meeting by logging into Zoom, this value is the id value in the [**Get a user**](/api-reference/zoom-api/methods#operation/user) API response. \n* If the participant joins the meeting **without** logging into Zoom, this returns an empty string value."
                              },
                              "customer_key": {
                                "type": "string",
                                "description": "The participant's SDK identifier. This value can be alphanumeric."
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.participant_put_in_waiting_room",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": "1234567890",
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Meeting",
                        "type": 8,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "duration": 60,
                        "participant": {
                          "user_id": "1234567890",
                          "user_name": "Jill Chill",
                          "id": "iFxeBPYun6SAiWUzBcEkX",
                          "participant_uuid": "55555AAAiAAAAAiAiAiiAii",
                          "date_time": "2021-07-13T21:44:51Z",
                          "email": "jchill@example.com",
                          "participant_user_id": "iFxeBPYun6SAiWUzBcEkX",
                          "customer_key": "349589LkJyeW"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "recording.trashed": {
      "post": {
        "tags": [
          "recording"
        ],
        "operationId": "recording.trashed",
        "requestBody": {
          "description": "# recording.trashed\n\nThis event is triggered when a user initially deletes a cloud recording.\n\nWhen a user initially deletes a recording, it is sent to the trash. To move a recording to the trash, users can use the [**Delete meeting recordings**](/api-reference/zoom-api/ma#operation/recordingDelete) API or the [Zoom web client](https://support.zoom.us/hc/en-us/articles/205347605-Recording-Management). Users can recover recordings from the trash  up to 30 days after deletion.\n\n## Prerequisites\n\n* A Pro or higher plan.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Recording files have been deleted to Trash** subscription enabled under the **Recording** event.\n\n\n\n**Event type**: `recording.trashed`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "recording.trashed"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "download_token": {
                    "type": "string",
                    "description": "Use the generated token value with the download_url value to download the cloud recording via an [OAuth app](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-oauth-app). The download token only lasts for 24 hours after its creation and you can only download the file within 24 hours of receiving the event notification. You can either include the download_token as a query parameter or pass it as a Bearer token in the Authorization header of your HTTP request: \n\n **Using an Authorization header (Recommended)** \n\n \ncurl --request GET \\\n  --url {download_url} \\\n  --header 'authorization: Bearer {download_token} \\\n  --header 'content-type: application/json'\n \n\n**Using a query parameter** \n\n \n{download_url}/?access_token={download_token}\n \n\n For example: https://zoom.us/recording/download/123456?access_token=abcdefgh"
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object",
                      "operator",
                      "operator_id"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who deleted the recording to the trash."
                      },
                      "operator": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user who deleted the recording to the trash."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who deleted the recording to the trash."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the webinar or meeting recording.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "topic",
                          "type",
                          "start_time",
                          "duration",
                          "share_url",
                          "total_size",
                          "account_id",
                          "recording_count"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The ID of the recorded meeting (meetingId) or webinar (webinarId)."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The universally unique identifier (UUID) of the recorded meeting or webinar instance."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The ID of the user set as the host of the meeting or webinar."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The meeting or webinar topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The type of recorded meeting or webinar: \n\n If the recording is of a meeting: \n* 1 — Instant meeting. \n* 2 — Scheduled meeting. \n* 3 — A recurring meeting with no fixed time. \n* 4 — A meeting created via PMI (Personal Meeting ID). \n* 7 — A [Personal Audio Conference](https://support.zoom.us/hc/en-us/articles/204517069-Getting-Started-with-Personal-Audio-Conference) (PAC). \n* 8 - Recurring meeting with a fixed time. \n\n If the recording is of a webinar: \n* 5 — A webinar. \n* 6 — A recurring webinar without a fixed time. \n* 9 — A recurring webinar with a fixed time. \n\n If the recording is **not** from a meeting or webinar: \n\n* 99 — A recording uploaded via the [**Recordings**](https://zoom.us/recording) interface on the Zoom Web Portal.",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9,
                              99
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting or webinar's start time."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The meeting or webinar's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The meeting or webinar's scheduled duration."
                          },
                          "share_url": {
                            "type": "string",
                            "description": "The URL at which approved users can view the recording."
                          },
                          "total_size": {
                            "type": "integer",
                            "description": "The recording file's total size, in bytes."
                          },
                          "recording_count": {
                            "type": "integer",
                            "description": "The number of recording files deleted to the trash."
                          },
                          "account_id": {
                            "type": "string",
                            "description": "The account ID of the user that completed the meeting or webinar recording."
                          },
                          "recording_files": {
                            "type": "array",
                            "description": "Information about the trashed recording files.",
                            "items": {
                              "type": "object",
                              "required": [
                                "id",
                                "meeting_id",
                                "recording_start",
                                "recording_end",
                                "file_type",
                                "file_size",
                                "file_extension",
                                "download_url",
                                "status",
                                "recording_type"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The recording file's ID."
                                },
                                "meeting_id": {
                                  "type": "string",
                                  "description": "The meeting's ID."
                                },
                                "recording_start": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The date and time at which recording started."
                                },
                                "recording_end": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The date and time at which recording ended."
                                },
                                "file_type": {
                                  "type": "string",
                                  "description": "The recording file's type.",
                                  "enum": [
                                    "MP4",
                                    "M4A",
                                    "CHAT",
                                    "TRANSCRIPT",
                                    "CSV",
                                    "TB",
                                    "CC",
                                    "CHAT_MESSAGE",
                                    "SUMMARY",
                                    "TIMELINE"
                                  ]
                                },
                                "file_extension": {
                                  "type": "string",
                                  "description": "The recording file's extension.",
                                  "enum": [
                                    "MP4",
                                    "M4A",
                                    "TXT",
                                    "VTT",
                                    "CSV",
                                    "JSON",
                                    "JPG"
                                  ]
                                },
                                "file_name": {
                                  "type": "string",
                                  "description": "The recording file's name."
                                },
                                "file_size": {
                                  "type": "integer",
                                  "description": "The recording file's size, in bytes."
                                },
                                "play_url": {
                                  "type": "string",
                                  "description": "The URL at which the recording file can be opened and played."
                                },
                                "download_url": {
                                  "type": "string",
                                  "description": "The URL at which to download the the recording. \n\n **JWT apps** \n\n To access a private or password-protected cloud recording of a user in your account, use a [Zoom JWT app](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app). Use the generated JWT token as the value of the access_token query parameter and include this query parameter at the end of the URL. \n\n https://{{base-domain}}/recording/download/{{path-to-file-download}}?access_token={{JWT-token}} \n\n **OAuth apps** \n\n If a user has authorized and installed your OAuth app that contains recording scopes, use the user's [OAuth access token](https://developers.zoom.us/docs/integrations/oauth/) to download the file. For example: \n\n https://{{base-domain}}/rec/archive/download/xxx?access_token={{OAuth-access-token}}. \n\n**Note:** We recommend that you send the access_token as a Bearer token in the Authorization header, for example: \"Authorization\": \"Bearer <ACCESS_TOKEN>”."
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The recording file's processing status: \n* completed — The processing of the file is complete. \n* processing — The file is processing.",
                                  "enum": [
                                    "completed",
                                    "processing"
                                  ]
                                },
                                "recording_type": {
                                  "type": "string",
                                  "description": "The type of recording file: \n* shared_screen_with_speaker_view(CC) \n* shared_screen_with_speaker_view \n* shared_screen_with_gallery_view \n* gallery_view \n* shared_screen \n* audio_only \n* audio_transcript \n* chat_file \n* active_speaker \n* host_video \n* audio_only_each_participant \n* cc_transcript \n* closed_caption \n* poll \n* timeline \n* thumbnail \n* audio_interpretation \n* summary \n* summary_next_steps \n* summary_smart_chapters \n*production_studio \n\nFor more information, read our [Managing and sharing cloud recordings](https://support.zoom.us/hc/en-us/articles/205347605-Managing-and-sharing-cloud-recordings#h_9898497b-e736-4980-a749-d55608f10773) documentation.",
                                  "enum": [
                                    "shared_screen_with_speaker_view(CC)",
                                    "shared_screen_with_speaker_view",
                                    "shared_screen_with_gallery_view",
                                    "gallery_view",
                                    "shared_screen",
                                    "audio_only",
                                    "audio_transcript",
                                    "chat_file",
                                    "active_speaker",
                                    "host_video",
                                    "audio_only_each_participant",
                                    "cc_transcript",
                                    "closed_caption",
                                    "poll",
                                    "timeline",
                                    "thumbnail",
                                    "audio_interpretation",
                                    "summary",
                                    "summary_next_steps",
                                    "summary_smart_chapters",
                                    "production_sutdio"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "participant_audio_files": {
                            "type": "array",
                            "description": "Information about the trashed participant audio files.",
                            "items": {
                              "type": "object",
                              "required": [
                                "id",
                                "recording_start",
                                "recording_end",
                                "file_type",
                                "file_size",
                                "file_extension",
                                "file_name",
                                "download_url",
                                "status"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The participant audio file's ID."
                                },
                                "recording_start": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The participant audio file's start time."
                                },
                                "recording_end": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The participant audio file's end time."
                                },
                                "file_type": {
                                  "type": "string",
                                  "description": "The participant audio file's format."
                                },
                                "file_name": {
                                  "type": "string",
                                  "description": "The participant audio file's name."
                                },
                                "file_size": {
                                  "type": "integer",
                                  "description": "The participant audio file's size, in bytes."
                                },
                                "file_extension": {
                                  "type": "string",
                                  "description": "The participant audio file's extension."
                                },
                                "play_url": {
                                  "type": "string",
                                  "description": "The URL at which the participant audio file can be opened and played."
                                },
                                "download_url": {
                                  "type": "string",
                                  "description": "The URL at which to download the the recording. \n\n **JWT apps** \n\n To access a private or password-protected cloud recording of a user in your account, use a [Zoom JWT app](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app). Use the generated JWT token as the value of the access_token query parameter and include this query parameter at the end of the URL. \n\n https://{{base-domain}}/recording/download/{{path-to-file-download}}?access_token={{JWT-token}} \n\n **OAuth apps** \n\n If a user has authorized and installed your OAuth app that contains recording scopes, use the user's [OAuth access token](https://developers.zoom.us/docs/integrations/oauth/) to download the file. For example: \n\nhttps://{{base-domain}}/rec/archive/download/xxx?access_token={{OAuth-access-token}} \n\n **Note:** This field does **not** return for [Zoom On-Premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). Instead, this API will return the file_path field."
                                },
                                "file_path": {
                                  "type": "string",
                                  "description": "The file path to the On-Premise account recording. \n\n **Note:** This API returns this field for [Zoom On-Premise accounts](https://support.zoom.us/hc/en-us/articles/360034064852-Zoom-On-Premise-Deployment). It does **not** return the download_url field."
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The participant audio file's processing status: \n* completed — The processing of the file is complete. \n* processing — The file is processing.",
                                  "enum": [
                                    "completed",
                                    "processing"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "recording.trashed",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "object": {
                        "id": 1234567890,
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "account_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Personal Recording",
                        "type": 4,
                        "start_time": "2021-07-13T21:44:51Z",
                        "timezone": "America/Los_Angeles",
                        "host_email": "jchill@example.com",
                        "duration": 60,
                        "password": "132456",
                        "share_url": "https://example.com",
                        "total_size": 3328371,
                        "recording_count": 2,
                        "recording_files": [
                          {
                            "id": "ed6c2f27-2ae7-42f4-b3d0-835b493e4fa8",
                            "meeting_id": "098765ABCD",
                            "recording_start": "2021-03-23T22:14:57Z",
                            "recording_end": "2021-03-23T23:15:41Z",
                            "file_type": "M4A",
                            "file_size": 246560,
                            "file_extension": "M4A",
                            "play_url": "https://example.com/recording/play/Qg75t7xZBtEbAkjdlgbfdngBBBB",
                            "download_url": "https://example.com/recording/download/Qg75t7xZBtEbAkjdlgbfdngBBBB",
                            "status": "completed",
                            "recording_type": "audio_only"
                          },
                          {
                            "id": "388ffb46-1541-460d-8447-4624451a1db7",
                            "meeting_id": "098765ABCD",
                            "recording_start": "2021-03-23T22:14:57Z",
                            "recording_end": "2021-03-23T23:15:41Z",
                            "file_type": "MP4",
                            "file_size": 282825,
                            "file_extension": "MP4",
                            "play_url": "https://example.com/recording/play/Qg75t7xZBtEbAkjdlgbfdngCCCC",
                            "download_url": "https://example.com/recording/download/Qg75t7xZBtEbAkjdlgbfdngCCCC",
                            "status": "completed",
                            "recording_type": "shared_screen_with_speaker_view"
                          }
                        ],
                        "participant_audio_files": [
                          {
                            "id": "ed6c2f27-2ae7-42f4-b3d0-835b493e4fa8",
                            "recording_start": "2021-03-23T22:14:57Z",
                            "recording_end": "2021-03-23T23:15:41Z",
                            "recording_type": "audio_only",
                            "file_type": "M4A",
                            "file_name": "MyRecording",
                            "file_size": 246560,
                            "file_extension": "MP4",
                            "play_url": "https://example.com/recording/play/Qg75t7xZBtEbAkjdlgbfdngAAAA",
                            "download_url": "https://example.com/recording/download/Qg75t7xZBtEbAkjdlgbfdngAAAA",
                            "status": "completed"
                          }
                        ]
                      }
                    },
                    "download_token": "abJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJodHRwczovL2V2ZW50Lnpvb20udXMiLCJhY2NvdW50SWQiOiJNdDZzdjR1MFRBeVBrd2dzTDJseGlBIiwiYXVkIjoiaHR0cHM6Ly9vYXV0aC56b29tLnVzIiwibWlkIjoieFp3SEc0c3BRU2VuekdZWG16dnpiUT09IiwiZXhwIjoxNjI2MTM5NTA3LCJ1c2VySWQiOiJEWUhyZHBqclMzdWFPZjdkUGtrZzh3In0.a6KetiC6BlkDhf1dP4KBGUE1bb2brMeraoD45yhFx0eSSSTFdkHQnsKmlJQ-hdo9Zy-4vQw3rOxlyoHv583JyZ"
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.summary_deleted": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.summary_deleted",
        "requestBody": {
          "description": "# meeting.summary_deleted\nThe **Meeting summary has been permanently deleted** event is triggered every time one of your app users or account users permanently deletes a meeting summary.\n\n## Prerequisites\n\n* Host user must be Pro or higher plan.\n* Enable the **Meeting Summary with AI Companion** feature in the host's account.\n* E2ee meetings do not have summary feature enabled.\n* Enable **Event Subscriptions** for your [Marketplace app](https://marketplace.zoom.us/user/build) with:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Meeting summary has been permanently deleted** subscription enabled under the **Meeting** event.\n\n**Event type**: `meeting.summary_deleted`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The event's name.",
                    "enum": [
                      "meeting.summary_deleted"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp when the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "operator",
                      "operator_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who hosted the meeting."
                      },
                      "operator": {
                        "type": "string",
                        "description": "The email address of the user who permanently deleted the meeting summary."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who permanently deleted the meeting summary."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting summary.",
                        "required": [
                          "meeting_host_id",
                          "meeting_host_email",
                          "meeting_uuid",
                          "meeting_id",
                          "meeting_topic",
                          "meeting_start_time",
                          "meeting_end_time",
                          "summary_start_time",
                          "summary_end_time",
                          "summary_created_time",
                          "summary_last_modified_time",
                          "summary_title"
                        ],
                        "properties": {
                          "meeting_host_id": {
                            "type": "string",
                            "description": "The ID of the user who is set as the meeting host."
                          },
                          "meeting_host_email": {
                            "type": "string",
                            "format": "email",
                            "description": "The meeting host's email address."
                          },
                          "meeting_uuid": {
                            "type": "string",
                            "description": "Unique meeting ID. Each meeting instance generates its own meeting UUID - after a meeting ends, a new UUID is generated for the next instance of the meeting. Retrieve a list of UUIDs from past meeting instances using the [**List past meeting instances**](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods/#operation/pastMeetings) API. [Double encode](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#meeting-id-and-uuid) your UUID when using it for API calls if the UUID begins with a / or contains // in it.\n"
                          },
                          "meeting_id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "[Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-) - the meeting's unique identifier in **long** format, represented as int64 data type in JSON. Also known as the meeting number."
                          },
                          "meeting_topic": {
                            "type": "string",
                            "description": "Meeting topic."
                          },
                          "meeting_start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The meeting's start date and time."
                          },
                          "meeting_end_time": {
                            "type": "string",
                            "description": "The meeting's end date and time.",
                            "format": "date-time",
                            "example": "2020-07-15T23:30:19Z"
                          },
                          "summary_start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The summary's start date and time."
                          },
                          "summary_end_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The summary's end date and time."
                          },
                          "summary_created_time": {
                            "type": "string",
                            "description": "The date and time when the meeting summary was created.",
                            "format": "date-time"
                          },
                          "summary_last_modified_time": {
                            "type": "string",
                            "description": "The date and time when the meeting summary was last modified.",
                            "format": "date-time"
                          },
                          "summary_title": {
                            "type": "string",
                            "description": "The summary title."
                          }
                        },
                        "additionalProperties": true
                      }
                    },
                    "additionalProperties": true
                  }
                },
                "additionalProperties": true
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.summary_deleted",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "dzVA4QmMQfyISoRcpFO8CA",
                      "operator": "admin@example.com",
                      "operator_id": "z8yCxjabcdEFGHfp8uQ",
                      "object": {
                        "meeting_host_id": "30R7kT7bTIKSNUFEuH_Qlg",
                        "meeting_host_email": "jchill@example.com",
                        "meeting_uuid": "aDYlohsHRtCd4ii1uC2+hA==",
                        "meeting_id": 97763643886,
                        "meeting_topic": "My Meeting",
                        "meeting_start_time": "2019-07-15T23:24:52Z",
                        "meeting_end_time": "2020-07-15T23:30:19Z",
                        "summary_start_time": "2019-07-15T23:24:52Z",
                        "summary_end_time": "2020-07-15T23:30:19Z",
                        "summary_created_time": "2019-07-15T23:24:52Z",
                        "summary_last_modified_time": "2020-07-15T23:30:19Z",
                        "summary_title": "Meeting Summary for my meeting"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "webinar.updated": {
      "post": {
        "tags": [
          "webinar"
        ],
        "operationId": "webinar.updated",
        "requestBody": {
          "description": "# webinar.updated\n\nThe **Webinar has been updated** event is triggered every time one of your app users or account users updates a Webinar.\n\nZoom users with a [Webinar Plan](https://zoom.us/webinar) have access to creating and managing Webinars. [Zoom Video Webinar](https://support.zoom.us/hc/en-us/articles/200917029-Getting-Started-With-Webinar) allows users to broadcast a Zoom meeting to up to 1000 attendees. A scheduled Webinar can be updated either by the user who created it or by a user with admin privileges.\n\nA user can update a Webinar manually by logging into the [Zoom Web Portal](https://zoom.us/), navigating to the webinar that needs to be updated from the [Webinars](https://zoom.us/webinar/list) page and clicking on the **Edit this Webinar** button.  Alternatively, users can also use the [**Update a webinar**](/docs/api-reference/zoom-api/methods#operation/webinarUpdate) API to schedule a Webinar programmatically.\n\n## Prerequisites\n\n* Pro or a higher plan with Webinar license.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n\t* A valid **Event Notification Endpoint URL**.\n\t* The **Webinar has been updated** subscription enabled under the **Webinar** event.\n\n\n\n**Event type**: `webinar.updated`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "webinar.updated"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "operator",
                      "operator_id",
                      "object",
                      "old_object",
                      "time_stamp"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user who updated the webinar."
                      },
                      "operator": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user who updated the webinar."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who updated the webinar."
                      },
                      "scope": {
                        "type": "string",
                        "description": "The type of operation performed: \n* all — The change was applied to all webinars. \n* single — The change was applied only to a single webinar.",
                        "enum": [
                          "single",
                          "all"
                        ]
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the webinar.",
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The webinar ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The webinar's universally unique identifier (UUID). Each webinar instance generates a webinar UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The webinar host's user ID."
                          },
                          "topic": {
                            "type": "string",
                            "description": "The webinar's topic."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The webinar type: \n* 5 — A webinar. \n* 6 — A recurring webinar without a fixed time. \n* 9 — A recurring webinar with a fixed time.",
                            "enum": [
                              5,
                              6,
                              9
                            ]
                          },
                          "start_time": {
                            "type": "string",
                            "pattern": "(^\\s*$|^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$)",
                            "description": "The webinar's start time."
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The scheduled webinar duration."
                          },
                          "timezone": {
                            "type": "string",
                            "description": "The webinar's [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones)."
                          },
                          "password": {
                            "type": "string",
                            "description": "The password required to join the webinar."
                          },
                          "agenda": {
                            "type": "string",
                            "description": "The webinar's agenda."
                          },
                          "registration_url": {
                            "type": "string",
                            "description": "The webinar's registration URL."
                          },
                          "occurrences": {
                            "type": "array",
                            "description": "Information about recurring webinar with fixed times and their occurrences. This only returns when the webinar's type value is 9.",
                            "additionalItems": true,
                            "items": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "occurrence_id",
                                    "start_time"
                                  ],
                                  "properties": {
                                    "occurrence_id": {
                                      "type": "string",
                                      "description": "The webinar occurrence's ID."
                                    },
                                    "start_time": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The webinar's start time."
                                    },
                                    "duration": {
                                      "type": "integer",
                                      "description": "The scheduled webinar duration."
                                    },
                                    "status": {
                                      "type": "string",
                                      "description": "The webinar occurrence status: \n* available \n* deleted",
                                      "enum": [
                                        "available",
                                        "deleted"
                                      ]
                                    }
                                  },
                                  "additionalProperties": true
                                }
                              ]
                            }
                          },
                          "settings": {
                            "type": "object",
                            "description": "Information about the updated webinar settings. This **only** returns updated webinar settings.",
                            "properties": {
                              "host_video": {
                                "type": "boolean",
                                "description": "Whether to start the webinar with the host's video on."
                              },
                              "panelists_video": {
                                "type": "boolean",
                                "description": "Whether to turn panelists' video on when they join the webinar."
                              },
                              "practice_session": {
                                "type": "boolean",
                                "description": "Whether to enable the [**Enable Practice Session**](https://support.zoom.us/hc/en-us/articles/206316975-Webinar-Practice-Session) feature."
                              },
                              "approval_type": {
                                "type": "integer",
                                "description": "The [approval type](https://support.zoom.us/hc/en-us/articles/204619915-Scheduling-a-webinar-with-registration) for webinar registrants: \n* 0 — Automatically approve registrants. \n* 1 — Manually approve registrants. \n* 2 — Webinar registration not required.",
                                "enum": [
                                  0,
                                  1,
                                  2
                                ]
                              },
                              "registration_type": {
                                "type": "integer",
                                "description": "The webinar registration setting for recurring webinars: \n* 1 — Attendees register once and can attend any of the webinar occurrences. \n* 2 — Attendees must register for each occurrence to attend. \n* 3 — Attendees register once and can select one or more occurrences to attend.",
                                "enum": [
                                  1,
                                  2,
                                  3
                                ]
                              },
                              "audio": {
                                "type": "string",
                                "description": "The available audio options for participants joining the webinar: \n* telephony — Telephony only. \n* voip — VoIP only. \n* both - Both Telephony and VoIP.",
                                "enum": [
                                  "telephony",
                                  "voip",
                                  "both"
                                ]
                              },
                              "auto_recording": {
                                "type": "string",
                                "description": "The [automatic recording](https://support.zoom.us/hc/en-us/articles/202921119-Automatic-Recording) settings for the webinar: \n* local — Record and save to the local device. \n* cloud — Record and save to the cloud. \n* none — Automatic recording disabled.",
                                "enum": [
                                  "local",
                                  "cloud",
                                  "none"
                                ]
                              },
                              "enforce_login": {
                                "type": "boolean",
                                "description": "Whether to only allow signed in users to join the webinar."
                              },
                              "meeting_authentication": {
                                "type": "boolean",
                                "description": "Whether only authenticated users can join the webinar."
                              },
                              "authentication_option": {
                                "type": "string",
                                "description": "The [authentication](https://support.zoom.us/hc/en-us/articles/4406604615693) option ID value."
                              },
                              "authentication_name": {
                                "type": "string",
                                "description": "The authentication name set in the [authentication profile](https://support.zoom.us/hc/en-us/articles/360037117472)."
                              },
                              "authentication_domains": {
                                "type": "string",
                                "description": "A list of the allowed authenticated domains."
                              }
                            },
                            "additionalProperties": true
                          },
                          "recurrence": {
                            "type": "object",
                            "description": "Information about [recurring webinars](https://marketplace.zoom.us/docs/api-reference/other-references/recurrence-object-definitions).",
                            "properties": {
                              "type": {
                                "type": "integer",
                                "description": "The type of recurring webinar: \n* 1 — Daily. \n* 2 — Weekly. \n* 3 — Monthly.",
                                "enum": [
                                  1,
                                  2,
                                  3
                                ]
                              },
                              "repeat_interval": {
                                "type": "integer",
                                "description": "The webinar's repeat interval: \n* For daily intervals, a max of 90 days. \n* For a weekly interval, a max of 12 weeks. \n* For monthly intervals, a max of 3 months."
                              },
                              "weekly_days": {
                                "type": "string",
                                "description": "A comma-separated list of the days of the week on which the recurring weekly webinar occurs: \n* 1 — Sunday \n* 2 — Monday \n* 3 — Tuesday \n* 4 — Wednesday \n* 5 — Thursday \n* 6 — Friday \n* 7 — Saturday"
                              },
                              "monthly_day": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 31,
                                "description": "The day of the month on which the recurring monthly webinar occurs. The value ranges from 1 to 31."
                              },
                              "monthly_week_day": {
                                "type": "integer",
                                "description": "The day of the week on which the recurring monthly webinar is scheduled: \n* 1 — Sunday \n* 2 — Monday \n* 3 — Tuesday \n* 4 — Wednesday \n* 5 — Thursday \n* 6 — Friday \n* 7 — Saturday",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6,
                                  7
                                ]
                              },
                              "end_times": {
                                "type": "integer",
                                "default": 1,
                                "description": "The number of times the recurring webinar will occur before it is canceled."
                              },
                              "end_date_time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The recurring webinar's final ending date and time before it is canceled, in UTC format."
                              },
                              "monthly_week": {
                                "type": "integer",
                                "description": "The week of the month on which a recurring webinar occurs: \n* -1 — The last week of the month. \n* 1 — The first week. \n* 2 — The second week. \n* 3 — The third week. \n* 4 — The fourth week.",
                                "enum": [
                                  -1,
                                  1,
                                  2,
                                  3,
                                  4
                                ]
                              }
                            },
                            "additionalProperties": true
                          }
                        },
                        "additionalProperties": true
                      },
                      "time_stamp": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The webinar's update timestamp, in milliseconds."
                      }
                    },
                    "additionalProperties": true
                  }
                },
                "additionalProperties": true
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "webinar.updated",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "operator": "admin@example.com",
                      "operator_id": "z8yCxjabcdEFGHfp8uQ",
                      "scope": "single",
                      "object": {
                        "id": 1234567890,
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "x1yCzABCDEfg23HiJKl4mN",
                        "topic": "My Webinar",
                        "type": 9,
                        "start_time": "2021-07-13T21:44:51Z",
                        "duration": 60,
                        "timezone": "America/Los_Angeles",
                        "password": "XYz@BC!D1087",
                        "agenda": "Overview of Webinar Topics",
                        "registration_url": "https://example.com",
                        "occurrences": [
                          {
                            "occurrence_id": "ABCDE12345",
                            "start_time": "2021-07-13T21:44:51Z",
                            "duration": 60,
                            "status": "available"
                          }
                        ],
                        "settings": {
                          "host_video": true
                        },
                        "old_object": {
                          "id": 1234567890,
                          "settings": {
                            "participant_video": false,
                            "join_before_host": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "recording.batch_recovered": {
      "post": {
        "tags": [
          "recording"
        ],
        "operationId": "recording.batch_recovered",
        "requestBody": {
          "description": "# recording.batch_recovered\n\nThe **Batch recording recovered** event is triggered every time one of your app users or account users recover one or more recordings from the trash.\n\nZoom allows users to recover their cloud recordings from trash within 30 days of deletion. You can recover a deleted cloud recording via the [**Recordings** tab in the Zoom web client](https://support.zoom.us/hc/en-us/articles/216378863-Recover-a-Deleted-Cloud-Recording) or via the [**Recover meeting recordings**](/api-reference/zoom-api/ma#operation/recordingStatusUpdate) API.\n\n## Prerequisites\n\n* A Pro or a higher plan.\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n* A valid **Event Notification Endpoint URL**.\n* The **Recording files have been recovered in batches from trash** subscription enabled under the **Recording** event.\n\n\n\n**Event type**: `recording.batch_recovered`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "recording.batch_recovered"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "operator",
                      "operator_id"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the user that completed the meeting or webinar recording."
                      },
                      "operator": {
                        "type": "string",
                        "format": "email",
                        "description": "The email address of the user who recovered the recording."
                      },
                      "operator_id": {
                        "type": "string",
                        "description": "The user ID of the user who recovered the recording."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting or webinar recording.",
                        "required": [
                          "meetings"
                        ],
                        "properties": {
                          "meetings": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Information about the meeting or webinar recording.",
                              "properties": {
                                "meeting_uuid": {
                                  "type": "string",
                                  "description": "The universally unique identifier (UUID) of the recorded meeting or webinar instance."
                                },
                                "recording_file_ids": {
                                  "type": "array",
                                  "item": {
                                    "type": "string",
                                    "description": "The recording file's unique ID."
                                  },
                                  "description": "The recording file's unique ID. If the current field value is NULL, it means to recover the whole Meeting Recording files."
                                }
                              }
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "recording.batch_recovered",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "AAAAAABBBB",
                      "operator": "admin@example.com",
                      "operator_id": "I7zp-pYbTl22Z29H796Ixg",
                      "object": {
                        "meetings": [
                          {
                            "meeting_uuid": "4444AAAiAAAAAiAiAiiAii==",
                            "recording_file_ids": [
                              "ed6c2f27-2ae7-42f4-b3d0-835b493e4fa8",
                              "388ffb46-1541-460d-8447-4624451a1db7"
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "meeting.participant_room_system_callout_rejected": {
      "post": {
        "tags": [
          "meeting"
        ],
        "operationId": "meeting.participant_room_system_callout_rejected",
        "requestBody": {
          "description": "# meeting.participant_room_system_callout_rejected\n\nThe **Invited party rejected a meeting invitation through phone (call out) via Zoom room** event is triggered every time a user rejects an invitation to [join a meeting through phone (call out) from a Zoom room](https://support.zoom.us/hc/en-us/articles/205369035).\n\n## Prerequisites\n\n* **Event Subscriptions** must be enabled for your [Marketplace app](https://marketplace.zoom.us/user/build) with the following configurations:\n* A valid **Event Notification Endpoint URL**.\n* The **Invited party rejected a meeting invitation through phone (call out) via Zoom room** subscription enabled under the **Meeting** event.\n\n\n\n**Event type**: `meeting.participant_room_system_callout_rejected`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "meeting.participant_room_system_callout_rejected"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "account_id",
                      "object"
                    ],
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "description": "The account ID of the meeting host."
                      },
                      "object": {
                        "type": "object",
                        "description": "Information about the meeting.",
                        "required": [
                          "id",
                          "uuid",
                          "host_id",
                          "message_id",
                          "inviter_name",
                          "participant"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "description": "The meeting ID."
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The meeting's universally unique identifier (UUID). Each meeting instance generates a meeting UUID."
                          },
                          "host_id": {
                            "type": "string",
                            "description": "The user ID of the meeting host."
                          },
                          "message_id": {
                            "type": "string",
                            "description": "The request unique identifier (UUID)."
                          },
                          "inviter_name": {
                            "type": "string",
                            "description": "The user name of the event's trigger."
                          },
                          "participant": {
                            "type": "object",
                            "description": "Information about the invited participant.",
                            "required": [
                              "call_type",
                              "device_ip"
                            ],
                            "properties": {
                              "call_type": {
                                "type": "string",
                                "description": "The type of call out. Use a value of h323 or sip."
                              },
                              "device_ip": {
                                "type": "string",
                                "description": "The user's device IP address."
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "event": "meeting.participant_room_system_callout_rejected",
                    "event_ts": 1626230691572,
                    "payload": {
                      "account_id": "dzVA4QmMQfyISoRcpFO8CA",
                      "object": {
                        "id": 713592696,
                        "uuid": "4444AAAiAAAAAiAiAiiAii==",
                        "host_id": "ICuPoX4ERtikRcKqkVxunQ",
                        "message_id": "atsXxhSEQWit9t+U02HXNQ==",
                        "inviter_name": "Jill Chill",
                        "participant": {
                          "call_type": "h323",
                          "device_ip": "10.100.111.237"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "endpoint.url_validation": {
      "post": {
        "operationId": "endpoint.url_validation",
        "requestBody": {
          "description": "# endpoint.url_validation",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "event_ts",
                  "payload"
                ],
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "The name of the event.",
                    "enum": [
                      "endpoint.url_validation"
                    ]
                  },
                  "event_ts": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A timestamp at which the event occurred."
                  },
                  "payload": {
                    "type": "object",
                    "required": [
                      "plainToken"
                    ],
                    "properties": {
                      "plainToken": {
                        "type": "string",
                        "description": "The string to hash."
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "examples": {
                "json-example": {
                  "summary": "JSON example",
                  "value": {
                    "payload": {
                      "plainToken": "qgg8vlvZRS6UYooatFL8Aw"
                    },
                    "event_ts": 1654503849680,
                    "event": "endpoint.url_validation"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}